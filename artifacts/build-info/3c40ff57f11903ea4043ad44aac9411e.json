{"id":"3c40ff57f11903ea4043ad44aac9411e","_format":"hh-sol-build-info-1","solcVersion":"0.8.22","solcLongVersion":"0.8.22+commit.4fc1097e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n */\ninterface IVotes {\n    /**\n     * @dev The signature used has expired.\n     */\n    error VotesExpiredSignature(uint256 expiry);\n\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/governance/utils/Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.20;\n\nimport {IERC5805} from \"../../interfaces/IERC5805.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Nonces} from \"../../utils/Nonces.sol\";\nimport {EIP712} from \"../../utils/cryptography/EIP712.sol\";\nimport {Checkpoints} from \"../../utils/structs/Checkpoints.sol\";\nimport {SafeCast} from \"../../utils/math/SafeCast.sol\";\nimport {ECDSA} from \"../../utils/cryptography/ECDSA.sol\";\nimport {Time} from \"../../utils/types/Time.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_update}).\n */\nabstract contract Votes is Context, EIP712, Nonces, IERC5805 {\n    using Checkpoints for Checkpoints.Trace208;\n\n    bytes32 private constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address account => address) private _delegatee;\n\n    mapping(address delegatee => Checkpoints.Trace208) private _delegateCheckpoints;\n\n    Checkpoints.Trace208 private _totalCheckpoints;\n\n    /**\n     * @dev The clock was incorrectly modified.\n     */\n    error ERC6372InconsistentClock();\n\n    /**\n     * @dev Lookup to future votes is not available.\n     */\n    error ERC5805FutureLookup(uint256 timepoint, uint48 clock);\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n     * checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\n     */\n    function clock() public view virtual returns (uint48) {\n        return Time.blockNumber();\n    }\n\n    /**\n     * @dev Machine-readable description of the clock as specified in ERC-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual returns (string memory) {\n        // Check that the clock was not modified\n        if (clock() != Time.blockNumber()) {\n            revert ERC6372InconsistentClock();\n        }\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual returns (uint256) {\n        return _delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _delegateCheckpoints[account].upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _totalCheckpoints.upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        return _totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual returns (address) {\n        return _delegatee[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > expiry) {\n            revert VotesExpiredSignature(expiry);\n        }\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        _useCheckedNonce(signer, nonce);\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        address oldDelegate = delegates(account);\n        _delegatee[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(address from, address to, uint256 amount) internal virtual {\n        if (from == address(0)) {\n            _push(_totalCheckpoints, _add, SafeCast.toUint208(amount));\n        }\n        if (to == address(0)) {\n            _push(_totalCheckpoints, _subtract, SafeCast.toUint208(amount));\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(address from, address to, uint256 amount) internal virtual {\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[from],\n                    _subtract,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[to],\n                    _add,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function _numCheckpoints(address account) internal view virtual returns (uint32) {\n        return SafeCast.toUint32(_delegateCheckpoints[account].length());\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function _checkpoints(\n        address account,\n        uint32 pos\n    ) internal view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _delegateCheckpoints[account].at(pos);\n    }\n\n    function _push(\n        Checkpoints.Trace208 storage store,\n        function(uint208, uint208) view returns (uint208) op,\n        uint208 delta\n    ) private returns (uint208 oldValue, uint208 newValue) {\n        return store.push(clock(), op(store.latest(), delta));\n    }\n\n    function _add(uint208 a, uint208 b) private pure returns (uint208) {\n        return a + b;\n    }\n\n    function _subtract(uint208 a, uint208 b) private pure returns (uint208) {\n        return a - b;\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC3156FlashBorrower.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-3156 FlashBorrower, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashBorrower {\n    /**\n     * @dev Receive a flash loan.\n     * @param initiator The initiator of the loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param fee The additional amount of tokens to repay.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     * @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\"\n     */\n    function onFlashLoan(\n        address initiator,\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) external returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC3156FlashLender.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC3156FlashBorrower} from \"./IERC3156FlashBorrower.sol\";\n\n/**\n * @dev Interface of the ERC-3156 FlashLender, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashLender {\n    /**\n     * @dev The amount of currency available to be lended.\n     * @param token The loan currency.\n     * @return The amount of `token` that can be borrowed.\n     */\n    function maxFlashLoan(address token) external view returns (uint256);\n\n    /**\n     * @dev The fee to be charged for a given loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\n     */\n    function flashFee(address token, uint256 amount) external view returns (uint256);\n\n    /**\n     * @dev Initiate a flash loan.\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     */\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.20;\n\nimport {IVotes} from \"../governance/utils/IVotes.sol\";\nimport {IERC6372} from \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20FlashMint.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC3156FlashBorrower} from \"../../../interfaces/IERC3156FlashBorrower.sol\";\nimport {IERC3156FlashLender} from \"../../../interfaces/IERC3156FlashLender.sol\";\nimport {ERC20} from \"../ERC20.sol\";\n\n/**\n * @dev Implementation of the ERC-3156 Flash loans extension, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n *\n * Adds the {flashLoan} method, which provides flash loan support at the token\n * level. By default there is no fee, but this can be changed by overriding {flashFee}.\n *\n * NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions,\n * {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend\n * overriding {maxFlashLoan} so that it correctly reflects the supply cap.\n */\nabstract contract ERC20FlashMint is ERC20, IERC3156FlashLender {\n    bytes32 private constant RETURN_VALUE = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n    /**\n     * @dev The loan token is not valid.\n     */\n    error ERC3156UnsupportedToken(address token);\n\n    /**\n     * @dev The requested loan exceeds the max loan value for `token`.\n     */\n    error ERC3156ExceededMaxLoan(uint256 maxLoan);\n\n    /**\n     * @dev The receiver of a flashloan is not a valid {IERC3156FlashBorrower-onFlashLoan} implementer.\n     */\n    error ERC3156InvalidReceiver(address receiver);\n\n    /**\n     * @dev Returns the maximum amount of tokens available for loan.\n     * @param token The address of the token that is requested.\n     * @return The amount of token that can be loaned.\n     *\n     * NOTE: This function does not consider any form of supply cap, so in case\n     * it's used in a token with a cap like {ERC20Capped}, make sure to override this\n     * function to integrate the cap instead of `type(uint256).max`.\n     */\n    function maxFlashLoan(address token) public view virtual returns (uint256) {\n        return token == address(this) ? type(uint256).max - totalSupply() : 0;\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. This function calls\n     * the {_flashFee} function which returns the fee applied when doing flash\n     * loans.\n     * @param token The token to be flash loaned.\n     * @param value The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function flashFee(address token, uint256 value) public view virtual returns (uint256) {\n        if (token != address(this)) {\n            revert ERC3156UnsupportedToken(token);\n        }\n        return _flashFee(token, value);\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. By default this\n     * implementation has 0 fees. This function can be overloaded to make\n     * the flash loan mechanism deflationary.\n     * @param token The token to be flash loaned.\n     * @param value The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function _flashFee(address token, uint256 value) internal view virtual returns (uint256) {\n        // silence warning about unused variable without the addition of bytecode.\n        token;\n        value;\n        return 0;\n    }\n\n    /**\n     * @dev Returns the receiver address of the flash fee. By default this\n     * implementation returns the address(0) which means the fee amount will be burnt.\n     * This function can be overloaded to change the fee receiver.\n     * @return The address for which the flash fee will be sent to.\n     */\n    function _flashFeeReceiver() internal view virtual returns (address) {\n        return address(0);\n    }\n\n    /**\n     * @dev Performs a flash loan. New tokens are minted and sent to the\n     * `receiver`, who is required to implement the {IERC3156FlashBorrower}\n     * interface. By the end of the flash loan, the receiver is expected to own\n     * value + fee tokens and have them approved back to the token contract itself so\n     * they can be burned.\n     * @param receiver The receiver of the flash loan. Should implement the\n     * {IERC3156FlashBorrower-onFlashLoan} interface.\n     * @param token The token to be flash loaned. Only `address(this)` is\n     * supported.\n     * @param value The amount of tokens to be loaned.\n     * @param data An arbitrary datafield that is passed to the receiver.\n     * @return `true` if the flash loan was successful.\n     */\n    // This function can reenter, but it doesn't pose a risk because it always preserves the property that the amount\n    // minted at the beginning is always recovered and burned at the end, or else the entire function will revert.\n    // slither-disable-next-line reentrancy-no-eth\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 value,\n        bytes calldata data\n    ) public virtual returns (bool) {\n        uint256 maxLoan = maxFlashLoan(token);\n        if (value > maxLoan) {\n            revert ERC3156ExceededMaxLoan(maxLoan);\n        }\n        uint256 fee = flashFee(token, value);\n        _mint(address(receiver), value);\n        if (receiver.onFlashLoan(_msgSender(), token, value, fee, data) != RETURN_VALUE) {\n            revert ERC3156InvalidReceiver(address(receiver));\n        }\n        address flashFeeReceiver = _flashFeeReceiver();\n        _spendAllowance(address(receiver), address(this), value + fee);\n        if (fee == 0 || flashFeeReceiver == address(0)) {\n            _burn(address(receiver), value + fee);\n        } else {\n            _burn(address(receiver), value);\n            _transfer(address(receiver), flashFeeReceiver, fee);\n        }\n        return true;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Votes} from \"../../../governance/utils/Votes.sol\";\nimport {Checkpoints} from \"../../../utils/structs/Checkpoints.sol\";\n\n/**\n * @dev Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting\n * power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n */\nabstract contract ERC20Votes is ERC20, Votes {\n    /**\n     * @dev Total supply cap has been exceeded, introducing a risk of votes overflowing.\n     */\n    error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n     *\n     * This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n     * so that checkpoints can be stored in the Trace208 structure used by {Votes}. Increasing this value will not\n     * remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n     * {Votes-_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n     * additional logic requires it. When resolving override conflicts on this function, the minimum should be\n     * returned.\n     */\n    function _maxSupply() internal view virtual returns (uint256) {\n        return type(uint208).max;\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n        if (from == address(0)) {\n            uint256 supply = totalSupply();\n            uint256 cap = _maxSupply();\n            if (supply > cap) {\n                revert ERC20ExceededSafeSupply(supply, cap);\n            }\n        }\n        _transferVotingUnits(from, to, value);\n    }\n\n    /**\n     * @dev Returns the voting units of an `account`.\n     *\n     * WARNING: Overriding this function may compromise the internal vote accounting.\n     * `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return _numCheckpoints(account);\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _checkpoints(account, pos);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/structs/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\n\n/**\n * @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n */\nlibrary Checkpoints {\n    /**\n     * @dev A value was attempted to be inserted on a past checkpoint.\n     */\n    error CheckpointUnorderedInsertion();\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace224 storage self,\n        uint32 key,\n        uint224 value\n    ) internal returns (uint224 oldValue, uint224 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self) internal view returns (bool exists, uint32 _key, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace224 storage self, uint32 pos) internal view returns (Checkpoint224 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint224 value\n    ) private returns (uint224 oldValue, uint224 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint224 storage last = _unsafeAccess(self, pos - 1);\n            uint32 lastKey = last._key;\n            uint224 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint224[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint224 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace208 {\n        Checkpoint208[] _checkpoints;\n    }\n\n    struct Checkpoint208 {\n        uint48 _key;\n        uint208 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace208 storage self,\n        uint48 key,\n        uint208 value\n    ) internal returns (uint208 oldValue, uint208 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace208 storage self) internal view returns (uint208) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace208 storage self) internal view returns (bool exists, uint48 _key, uint208 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint208 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace208 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace208 storage self, uint32 pos) internal view returns (Checkpoint208 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint208 value\n    ) private returns (uint208 oldValue, uint208 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint208 storage last = _unsafeAccess(self, pos - 1);\n            uint48 lastKey = last._key;\n            uint208 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint208({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint208({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint208[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint208 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace160 storage self,\n        uint96 key,\n        uint160 value\n    ) internal returns (uint160 oldValue, uint160 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self) internal view returns (bool exists, uint96 _key, uint160 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace160 storage self, uint32 pos) internal view returns (Checkpoint160 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint160 value\n    ) private returns (uint160 oldValue, uint160 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint160 storage last = _unsafeAccess(self, pos - 1);\n            uint96 lastKey = last._key;\n            uint160 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint160[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint160 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/types/Time.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(\n        Delay self,\n        uint48 timepoint\n    ) private pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        (valueBefore, valueAfter, effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"},"contracts/trinostoken.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.22;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\";\r\n\r\n/// @custom:security-contact jos89.24@gmail.com\r\ncontract TrinosTOKEN is ERC20, ERC20Burnable, ERC20Pausable, Ownable, ERC20Permit, ERC20Votes, ERC20FlashMint {\r\n    constructor(address initialOwner, address initialMintAddress)\r\n        ERC20(\"TrinosToken\", \"TRN\")\r\n        Ownable(initialOwner)\r\n        ERC20Permit(\"trinostoken\")\r\n    {\r\n        _mint(initialMintAddress, 100000 * 10 ** decimals());\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function clock() public view override returns (uint48) {\r\n        return uint48(block.timestamp);\r\n    }\r\n\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function CLOCK_MODE() public pure override returns (string memory) {\r\n        return \"mode=timestamp\";\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n\r\n    function _update(address from, address to, uint256 value)\r\n        internal\r\n        override(ERC20, ERC20Pausable, ERC20Votes)\r\n    {\r\n        super._update(from, to, value);\r\n    }\r\n\r\n    function nonces(address owner)\r\n        public\r\n        view\r\n        override(ERC20Permit, Nonces)\r\n        returns (uint256)\r\n    {\r\n        return super.nonces(owner);\r\n    }\r\n\r\n    function getBalance(address account) public view returns (uint256) {\r\n    return balanceOf(account);\r\n    }\r\n    function totalMintedSupply() public view returns (uint256) {\r\n    return totalSupply();\r\n    }\r\n\r\n\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2319],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2320,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2319,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2319],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[230]},"id":231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"136:102:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts."},"fullyImplemented":false,"id":230,"linearizedBaseContracts":[230],"name":"IVotes","nameLocation":"249:6:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"262:55:1","text":" @dev The signature used has expired."},"errorSelector":"4683af0e","id":155,"name":"VotesExpiredSignature","nameLocation":"328:21:1","nodeType":"ErrorDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"expiry","nameLocation":"358:6:1","nodeType":"VariableDeclaration","scope":155,"src":"350:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:16:1"},"src":"322:44:1"},{"anonymous":false,"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"372:71:1","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":164,"name":"DelegateChanged","nameLocation":"454:15:1","nodeType":"EventDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"486:9:1","nodeType":"VariableDeclaration","scope":164,"src":"470:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":160,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"513:12:1","nodeType":"VariableDeclaration","scope":164,"src":"497:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"543:10:1","nodeType":"VariableDeclaration","scope":164,"src":"527:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"469:85:1"},"src":"448:107:1"},{"anonymous":false,"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"561:131:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":173,"name":"DelegateVotesChanged","nameLocation":"703:20:1","nodeType":"EventDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"740:8:1","nodeType":"VariableDeclaration","scope":173,"src":"724:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":169,"indexed":false,"mutability":"mutable","name":"previousVotes","nameLocation":"758:13:1","nodeType":"VariableDeclaration","scope":173,"src":"750:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":171,"indexed":false,"mutability":"mutable","name":"newVotes","nameLocation":"781:8:1","nodeType":"VariableDeclaration","scope":173,"src":"773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:67:1"},"src":"697:94:1"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"797:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"890:8:1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"907:7:1","nodeType":"VariableDeclaration","scope":181,"src":"899:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:17:1"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":181,"src":"939:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"938:9:1"},"scope":230,"src":"881:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"954:230:1","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":191,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1198:12:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"account","nameLocation":"1219:7:1","nodeType":"VariableDeclaration","scope":191,"src":"1211:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"timepoint","nameLocation":"1236:9:1","nodeType":"VariableDeclaration","scope":191,"src":"1228:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:36:1"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":191,"src":"1270:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:9:1"},"scope":230,"src":"1189:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"1285:481:1","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1780:18:1","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"timepoint","nameLocation":"1807:9:1","nodeType":"VariableDeclaration","scope":199,"src":"1799:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:19:1"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"1841:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:9:1"},"scope":230,"src":"1771:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"1856:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":207,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1941:9:1","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"account","nameLocation":"1959:7:1","nodeType":"VariableDeclaration","scope":207,"src":"1951:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:17:1"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":207,"src":"1991:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1990:9:1"},"scope":230,"src":"1932:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"2006:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":213,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2091:8:1","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"delegatee","nameLocation":"2108:9:1","nodeType":"VariableDeclaration","scope":213,"src":"2100:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2099:19:1"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2127:0:1"},"scope":230,"src":"2082:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"2134:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":229,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2215:13:1","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"delegatee","nameLocation":"2237:9:1","nodeType":"VariableDeclaration","scope":229,"src":"2229:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"2229:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"nonce","nameLocation":"2256:5:1","nodeType":"VariableDeclaration","scope":229,"src":"2248:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"expiry","nameLocation":"2271:6:1","nodeType":"VariableDeclaration","scope":229,"src":"2263:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"v","nameLocation":"2285:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2279:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":221,"name":"uint8","nodeType":"ElementaryTypeName","src":"2279:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"r","nameLocation":"2296:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2288:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2288:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"s","nameLocation":"2307:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2299:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2228:81:1"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"2318:0:1"},"scope":230,"src":"2206:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":231,"src":"239:2082:1","usedErrors":[155],"usedEvents":[164,173]}],"src":"110:2212:1"},"id":1},"@openzeppelin/contracts/governance/utils/Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","exportedSymbols":{"Checkpoints":[8962],"Context":[2319],"ECDSA":[3565],"EIP712":[3792],"IERC5805":[872],"Nonces":[2387],"SafeCast":[7237],"Time":[9236],"Votes":[777]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":232,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../interfaces/IERC5805.sol","id":234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":873,"src":"135:55:2","symbolAliases":[{"foreign":{"id":233,"name":"IERC5805","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":2320,"src":"191:48:2","symbolAliases":[{"foreign":{"id":235,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"199:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../utils/Nonces.sol","id":238,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":2388,"src":"240:46:2","symbolAliases":[{"foreign":{"id":237,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"248:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../utils/cryptography/EIP712.sol","id":240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":3793,"src":"287:59:2","symbolAliases":[{"foreign":{"id":239,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"295:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../utils/structs/Checkpoints.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":8963,"src":"347:64:2","symbolAliases":[{"foreign":{"id":241,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8962,"src":"355:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../utils/math/SafeCast.sol","id":244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":7238,"src":"412:55:2","symbolAliases":[{"foreign":{"id":243,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"420:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../utils/cryptography/ECDSA.sol","id":246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":3566,"src":"468:57:2","symbolAliases":[{"foreign":{"id":245,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"476:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","file":"../../utils/types/Time.sol","id":248,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":9237,"src":"526:48:2","symbolAliases":[{"foreign":{"id":247,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9236,"src":"534:4:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":250,"name":"Context","nameLocations":["1919:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2319,"src":"1919:7:2"},"id":251,"nodeType":"InheritanceSpecifier","src":"1919:7:2"},{"baseName":{"id":252,"name":"EIP712","nameLocations":["1928:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":3792,"src":"1928:6:2"},"id":253,"nodeType":"InheritanceSpecifier","src":"1928:6:2"},{"baseName":{"id":254,"name":"Nonces","nameLocations":["1936:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2387,"src":"1936:6:2"},"id":255,"nodeType":"InheritanceSpecifier","src":"1936:6:2"},{"baseName":{"id":256,"name":"IERC5805","nameLocations":["1944:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":872,"src":"1944:8:2"},"id":257,"nodeType":"InheritanceSpecifier","src":"1944:8:2"}],"canonicalName":"Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"576:1315:2","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_update})."},"fullyImplemented":false,"id":777,"internalFunctionIDs":{"754":1,"768":2},"linearizedBaseContracts":[777,872,230,887,2387,3792,861,2319],"name":"Votes","nameLocation":"1910:5:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":261,"libraryName":{"id":258,"name":"Checkpoints","nameLocations":["1965:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":8962,"src":"1965:11:2"},"nodeType":"UsingForDirective","src":"1959:43:2","typeName":{"id":260,"nodeType":"UserDefinedTypeName","pathNode":{"id":259,"name":"Checkpoints.Trace208","nameLocations":["1981:11:2","1993:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"1981:20:2"},"referencedDeclaration":7918,"src":"1981:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},{"constant":true,"id":266,"mutability":"constant","name":"DELEGATION_TYPEHASH","nameLocation":"2033:19:2","nodeType":"VariableDeclaration","scope":777,"src":"2008:126:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2008:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2073:60:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":263,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2063:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":270,"mutability":"mutable","name":"_delegatee","nameLocation":"2185:10:2","nodeType":"VariableDeclaration","scope":777,"src":"2141:54:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":269,"keyName":"account","keyNameLocation":"2157:7:2","keyType":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2141:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":275,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2261:20:2","nodeType":"VariableDeclaration","scope":777,"src":"2202:79:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7918_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"typeName":{"id":274,"keyName":"delegatee","keyNameLocation":"2218:9:2","keyType":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2202:50:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7918_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":273,"nodeType":"UserDefinedTypeName","pathNode":{"id":272,"name":"Checkpoints.Trace208","nameLocations":["2231:11:2","2243:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"2231:20:2"},"referencedDeclaration":7918,"src":"2231:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},"visibility":"private"},{"constant":false,"id":278,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2317:17:2","nodeType":"VariableDeclaration","scope":777,"src":"2288:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":277,"nodeType":"UserDefinedTypeName","pathNode":{"id":276,"name":"Checkpoints.Trace208","nameLocations":["2288:11:2","2300:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"2288:20:2"},"referencedDeclaration":7918,"src":"2288:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"private"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"2341:59:2","text":" @dev The clock was incorrectly modified."},"errorSelector":"6ff07140","id":281,"name":"ERC6372InconsistentClock","nameLocation":"2411:24:2","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"2435:2:2"},"src":"2405:33:2"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"2444:64:2","text":" @dev Lookup to future votes is not available."},"errorSelector":"ecd3f81e","id":288,"name":"ERC5805FutureLookup","nameLocation":"2519:19:2","nodeType":"ErrorDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"timepoint","nameLocation":"2547:9:2","nodeType":"VariableDeclaration","scope":288,"src":"2539:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"clock","nameLocation":"2565:5:2","nodeType":"VariableDeclaration","scope":288,"src":"2558:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":285,"name":"uint48","nodeType":"ElementaryTypeName","src":"2558:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2538:33:2"},"src":"2513:59:2"},{"baseFunctions":[880],"body":{"id":298,"nodeType":"Block","src":"2843:42:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":294,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9236,"src":"2860:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$9236_$","typeString":"type(library Time)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:11:2","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":8997,"src":"2860:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":293,"id":297,"nodeType":"Return","src":"2853:25:2"}]},"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"2578:206:2","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match."},"functionSelector":"91ddadf4","id":299,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"2798:5:2","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"2803:2:2"},"returnParameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":299,"src":"2835:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":291,"name":"uint48","nodeType":"ElementaryTypeName","src":"2835:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2834:8:2"},"scope":777,"src":"2789:96:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[886],"body":{"id":318,"nodeType":"Block","src":"3106:206:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":305,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"3169:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3169:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":307,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9236,"src":"3180:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$9236_$","typeString":"type(library Time)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3185:11:2","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":8997,"src":"3180:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3180:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3169:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":315,"nodeType":"IfStatement","src":"3165:93:2","trueBody":{"id":314,"nodeType":"Block","src":"3200:58:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":311,"name":"ERC6372InconsistentClock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3221:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3221:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"RevertStatement","src":"3214:33:2"}]}},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3274:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":304,"id":317,"nodeType":"Return","src":"3267:38:2"}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"2891:91:2","text":" @dev Machine-readable description of the clock as specified in ERC-6372."},"functionSelector":"4bf5d7e9","id":319,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"3049:10:2","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"3059:2:2"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"3091:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":302,"name":"string","nodeType":"ElementaryTypeName","src":"3091:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3090:15:2"},"scope":777,"src":"3040:272:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[181],"body":{"id":333,"nodeType":"Block","src":"3475:62:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":327,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3492:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7918_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":329,"indexExpression":{"id":328,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3513:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3492:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3522:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8143,"src":"3492:36:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7918_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7918_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3492:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":326,"id":332,"nodeType":"Return","src":"3485:45:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"3318:79:2","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3411:8:2","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"account","nameLocation":"3428:7:2","nodeType":"VariableDeclaration","scope":334,"src":"3420:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"3420:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3419:17:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"3466:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3465:9:2"},"scope":777,"src":"3402:135:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[191],"body":{"id":369,"nodeType":"Block","src":"4018:268:2","statements":[{"assignments":[345],"declarations":[{"constant":false,"id":345,"mutability":"mutable","name":"currentTimepoint","nameLocation":"4035:16:2","nodeType":"VariableDeclaration","scope":369,"src":"4028:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":344,"name":"uint48","nodeType":"ElementaryTypeName","src":"4028:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":348,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":346,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"4054:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"4028:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":349,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4075:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":350,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"4088:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4075:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"4071:115:2","trueBody":{"id":357,"nodeType":"Block","src":"4106:80:2","statements":[{"errorCall":{"arguments":[{"id":353,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4147:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":354,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"4158:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":352,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"4127:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"4120:55:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":365,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4268:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":363,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"4250:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4259:8:2","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6227,"src":"4250:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"baseExpression":{"id":359,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4202:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7918_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":361,"indexExpression":{"id":360,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4223:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4202:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4232:17:2","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":8113,"src":"4202:47:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7918_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7918_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":343,"id":368,"nodeType":"Return","src":"4195:84:2"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"3543:374:2","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"3a46b1a8","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3931:12:2","nodeType":"FunctionDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"account","nameLocation":"3952:7:2","nodeType":"VariableDeclaration","scope":370,"src":"3944:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"3944:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"timepoint","nameLocation":"3969:9:2","nodeType":"VariableDeclaration","scope":370,"src":"3961:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3961:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3943:36:2"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"4009:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4009:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4008:9:2"},"scope":777,"src":"3922:364:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[199],"body":{"id":401,"nodeType":"Block","src":"5007:256:2","statements":[{"assignments":[379],"declarations":[{"constant":false,"id":379,"mutability":"mutable","name":"currentTimepoint","nameLocation":"5024:16:2","nodeType":"VariableDeclaration","scope":401,"src":"5017:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":378,"name":"uint48","nodeType":"ElementaryTypeName","src":"5017:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":382,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":380,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5043:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5043:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"5017:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":383,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5064:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":384,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"5077:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"5064:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":392,"nodeType":"IfStatement","src":"5060:115:2","trueBody":{"id":391,"nodeType":"Block","src":"5095:80:2","statements":[{"errorCall":{"arguments":[{"id":387,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5136:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":388,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"5147:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":386,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"5116:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"RevertStatement","src":"5109:55:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":397,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5245:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":395,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"5227:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5236:8:2","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6227,"src":"5227:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5227:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":393,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5191:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5209:17:2","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":8113,"src":"5191:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7918_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7918_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":377,"id":400,"nodeType":"Return","src":"5184:72:2"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"4292:625:2","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"8e539e8c","id":402,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"4931:18:2","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"timepoint","nameLocation":"4958:9:2","nodeType":"VariableDeclaration","scope":402,"src":"4950:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"4950:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4949:19:2"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":402,"src":"4998:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4998:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4997:9:2"},"scope":777,"src":"4922:341:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":412,"nodeType":"Block","src":"5407:50:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":408,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5424:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5442:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8143,"src":"5424:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7918_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7918_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5424:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":407,"id":411,"nodeType":"Return","src":"5417:33:2"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"5269:66:2","text":" @dev Returns the current total supply of votes."},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"5349:15:2","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"5364:2:2"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"5398:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"5398:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5397:9:2"},"scope":777,"src":"5340:117:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[207],"body":{"id":425,"nodeType":"Block","src":"5613:43:2","statements":[{"expression":{"baseExpression":{"id":421,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5630:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":423,"indexExpression":{"id":422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5641:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5630:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":420,"id":424,"nodeType":"Return","src":"5623:26:2"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"5463:71:2","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"5548:9:2","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"account","nameLocation":"5566:7:2","nodeType":"VariableDeclaration","scope":426,"src":"5558:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5557:17:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"5604:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"5604:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5603:9:2"},"scope":777,"src":"5539:117:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[213],"body":{"id":442,"nodeType":"Block","src":"5790:86:2","statements":[{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"account","nameLocation":"5808:7:2","nodeType":"VariableDeclaration","scope":442,"src":"5800:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"5800:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":436,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":434,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"5818:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5818:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5800:30:2"},{"expression":{"arguments":[{"id":438,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"5850:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":439,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5859:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":437,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5840:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"5840:29:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"5662:71:2","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":443,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5747:8:2","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"delegatee","nameLocation":"5764:9:2","nodeType":"VariableDeclaration","scope":443,"src":"5756:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"5756:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5755:19:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"5790:0:2"},"scope":777,"src":"5738:138:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[229],"body":{"id":499,"nodeType":"Block","src":"6127:381:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6141:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6147:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"6141:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":461,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6159:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6141:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"nodeType":"IfStatement","src":"6137:91:2","trueBody":{"id":467,"nodeType":"Block","src":"6167:61:2","statements":[{"errorCall":{"arguments":[{"id":464,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6210:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":463,"name":"VotesExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"6188:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6188:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"RevertStatement","src":"6181:36:2"}]}},{"assignments":[470],"declarations":[{"constant":false,"id":470,"mutability":"mutable","name":"signer","nameLocation":"6245:6:2","nodeType":"VariableDeclaration","scope":499,"src":"6237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"6237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":488,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":477,"name":"DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"6319:19:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":478,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6340:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":479,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6351:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":480,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6358:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":475,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6308:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:6:2","memberName":"encode","nodeType":"MemberAccess","src":"6308:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6308:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":474,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6298:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":473,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"6281:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6281:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":484,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6381:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":485,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"6396:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":486,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"6411:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":471,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"6254:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3565_$","typeString":"type(library ECDSA)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:7:2","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3515,"src":"6254:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6254:168:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6237:185:2"},{"expression":{"arguments":[{"id":490,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6449:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":491,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6457:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":489,"name":"_useCheckedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"6432:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6432:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"6432:31:2"},{"expression":{"arguments":[{"id":495,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6483:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6491:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":494,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"6473:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6473:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"ExpressionStatement","src":"6473:28:2"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"5882:67:2","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":500,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5963:13:2","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"delegatee","nameLocation":"5994:9:2","nodeType":"VariableDeclaration","scope":500,"src":"5986:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"5986:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"nonce","nameLocation":"6021:5:2","nodeType":"VariableDeclaration","scope":500,"src":"6013:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"6013:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"expiry","nameLocation":"6044:6:2","nodeType":"VariableDeclaration","scope":500,"src":"6036:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"v","nameLocation":"6066:1:2","nodeType":"VariableDeclaration","scope":500,"src":"6060:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":451,"name":"uint8","nodeType":"ElementaryTypeName","src":"6060:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"r","nameLocation":"6085:1:2","nodeType":"VariableDeclaration","scope":500,"src":"6077:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6077:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"s","nameLocation":"6104:1:2","nodeType":"VariableDeclaration","scope":500,"src":"6096:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6096:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5976:135:2"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[],"src":"6127:0:2"},"scope":777,"src":"5954:554:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":534,"nodeType":"Block","src":"6758:240:2","statements":[{"assignments":[509],"declarations":[{"constant":false,"id":509,"mutability":"mutable","name":"oldDelegate","nameLocation":"6776:11:2","nodeType":"VariableDeclaration","scope":534,"src":"6768:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":513,"initialValue":{"arguments":[{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6800:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":510,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"6790:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6768:40:2"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":514,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"6818:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":516,"indexExpression":{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6829:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6818:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":517,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6840:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6818:31:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":519,"nodeType":"ExpressionStatement","src":"6818:31:2"},{"eventCall":{"arguments":[{"id":521,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6881:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":522,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6890:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":523,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6903:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":520,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"6865:15:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6865:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"EmitStatement","src":"6860:53:2"},{"expression":{"arguments":[{"id":527,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6942:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6955:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":530,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6982:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6966:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6966:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":526,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6923:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6923:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"6923:68:2"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"6514:167:2","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"6695:9:2","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"account","nameLocation":"6713:7:2","nodeType":"VariableDeclaration","scope":535,"src":"6705:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"delegatee","nameLocation":"6730:9:2","nodeType":"VariableDeclaration","scope":535,"src":"6722:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"6722:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6704:36:2"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"6758:0:2"},"scope":777,"src":"6686:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":589,"nodeType":"Block","src":"7321:310:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7335:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7351:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7343:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"7343:7:2","typeDescriptions":{}}},"id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7343:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7335:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"7331:107:2","trueBody":{"id":560,"nodeType":"Block","src":"7355:83:2","statements":[{"expression":{"arguments":[{"id":552,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7375:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":553,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"7394:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":556,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"7419:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":554,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"7400:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7409:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5667,"src":"7400:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":551,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7369:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7918_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7369:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":559,"nodeType":"ExpressionStatement","src":"7369:58:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":562,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"7451:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7465:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7457:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"7457:7:2","typeDescriptions":{}}},"id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7457:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7451:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":578,"nodeType":"IfStatement","src":"7447:110:2","trueBody":{"id":577,"nodeType":"Block","src":"7469:88:2","statements":[{"expression":{"arguments":[{"id":569,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7489:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":570,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7508:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"7538:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":571,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"7519:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7528:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5667,"src":"7519:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7519:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":568,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7483:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7918_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":576,"nodeType":"ExpressionStatement","src":"7483:63:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":581,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7595:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":580,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"7585:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7585:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":584,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"7612:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":583,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"7602:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7602:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"7617:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":579,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"7566:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7566:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"ExpressionStatement","src":"7566:58:2"}]},"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"7004:223:2","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":590,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"7241:20:2","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"from","nameLocation":"7270:4:2","nodeType":"VariableDeclaration","scope":590,"src":"7262:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"7262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"to","nameLocation":"7284:2:2","nodeType":"VariableDeclaration","scope":590,"src":"7276:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"7276:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"amount","nameLocation":"7296:6:2","nodeType":"VariableDeclaration","scope":590,"src":"7288:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"7288:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7261:42:2"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"7321:0:2"},"scope":777,"src":"7232:399:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":667,"nodeType":"Block","src":"7804:702:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7818:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"7826:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7818:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7832:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7841:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7832:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7818:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":666,"nodeType":"IfStatement","src":"7814:686:2","trueBody":{"id":665,"nodeType":"Block","src":"7844:656:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7862:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7878:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7870:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7870:7:2","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7870:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7862:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":635,"nodeType":"IfStatement","src":"7858:315:2","trueBody":{"id":634,"nodeType":"Block","src":"7882:291:2","statements":[{"assignments":[614,616],"declarations":[{"constant":false,"id":614,"mutability":"mutable","name":"oldValue","nameLocation":"7909:8:2","nodeType":"VariableDeclaration","scope":634,"src":"7901:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"7901:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"newValue","nameLocation":"7927:8:2","nodeType":"VariableDeclaration","scope":634,"src":"7919:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"7919:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":627,"initialValue":{"arguments":[{"baseExpression":{"id":618,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7966:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7918_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":620,"indexExpression":{"id":619,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7987:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7966:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":621,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"8014:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":624,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8064:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":622,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"8045:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8054:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5667,"src":"8045:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8045:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":617,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7939:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7918_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7939:150:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"7900:189:2"},{"eventCall":{"arguments":[{"id":629,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8133:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":630,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"8139:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":631,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"8149:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":628,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"8112:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8112:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":633,"nodeType":"EmitStatement","src":"8107:51:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":636,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8190:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8204:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8196:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"8196:7:2","typeDescriptions":{}}},"id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8196:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8190:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":664,"nodeType":"IfStatement","src":"8186:304:2","trueBody":{"id":663,"nodeType":"Block","src":"8208:282:2","statements":[{"assignments":[643,645],"declarations":[{"constant":false,"id":643,"mutability":"mutable","name":"oldValue","nameLocation":"8235:8:2","nodeType":"VariableDeclaration","scope":663,"src":"8227:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"8227:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"newValue","nameLocation":"8253:8:2","nodeType":"VariableDeclaration","scope":663,"src":"8245:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"8245:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":656,"initialValue":{"arguments":[{"baseExpression":{"id":647,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8292:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7918_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":649,"indexExpression":{"id":648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8313:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8292:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":650,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"8338:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":653,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8383:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":651,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"8364:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8373:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5667,"src":"8364:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8364:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":646,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"8265:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7918_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8265:143:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"8226:182:2"},{"eventCall":{"arguments":[{"id":658,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8452:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"8456:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":660,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8466:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":657,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"8431:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"EmitStatement","src":"8426:49:2"}]}}]}}]},"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"7637:75:2","text":" @dev Moves delegated votes from one delegate to another."},"id":668,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"7726:18:2","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"from","nameLocation":"7753:4:2","nodeType":"VariableDeclaration","scope":668,"src":"7745:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"7745:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"to","nameLocation":"7767:2:2","nodeType":"VariableDeclaration","scope":668,"src":"7759:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"7759:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"amount","nameLocation":"7779:6:2","nodeType":"VariableDeclaration","scope":668,"src":"7771:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"7771:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7744:42:2"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"7804:0:2"},"scope":777,"src":"7717:789:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":685,"nodeType":"Block","src":"8662:81:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":678,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8697:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7918_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":680,"indexExpression":{"id":679,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8718:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8697:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8727:6:2","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":8206,"src":"8697:36:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7918_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Trace208_$7918_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint256)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8697:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":676,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"8679:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8688:8:2","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6283,"src":"8679:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8679:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":675,"id":684,"nodeType":"Return","src":"8672:64:2"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"8512:64:2","text":" @dev Get number of checkpoints for `account`."},"id":686,"implemented":true,"kind":"function","modifiers":[],"name":"_numCheckpoints","nameLocation":"8590:15:2","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"account","nameLocation":"8614:7:2","nodeType":"VariableDeclaration","scope":686,"src":"8606:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"8606:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8605:17:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"8654:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":673,"name":"uint32","nodeType":"ElementaryTypeName","src":"8654:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8653:8:2"},"scope":777,"src":"8581:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":704,"nodeType":"Block","src":"8958:61:2","statements":[{"expression":{"arguments":[{"id":701,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9008:3:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"baseExpression":{"id":697,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8975:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7918_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":699,"indexExpression":{"id":698,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"8996:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8975:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9005:2:2","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":8224,"src":"8975:32:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7918_storage_ptr_$_t_uint32_$returns$_t_struct$_Checkpoint208_$7923_memory_ptr_$attached_to$_t_struct$_Trace208_$7918_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8975:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":696,"id":703,"nodeType":"Return","src":"8968:44:2"}]},"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"8749:66:2","text":" @dev Get the `pos`-th checkpoint for `account`."},"id":705,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpoints","nameLocation":"8829:12:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"account","nameLocation":"8859:7:2","nodeType":"VariableDeclaration","scope":705,"src":"8851:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"8851:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"pos","nameLocation":"8883:3:2","nodeType":"VariableDeclaration","scope":705,"src":"8876:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":690,"name":"uint32","nodeType":"ElementaryTypeName","src":"8876:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8841:51:2"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":705,"src":"8924:32:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":694,"nodeType":"UserDefinedTypeName","pathNode":{"id":693,"name":"Checkpoints.Checkpoint208","nameLocations":["8924:11:2","8936:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"8924:25:2"},"referencedDeclaration":7923,"src":"8924:25:2","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"8923:34:2"},"scope":777,"src":"8820:199:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"9228:70:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":729,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"9256:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9256:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":732,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"9268:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9274:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8143,"src":"9268:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7918_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7918_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9268:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":735,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"9284:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":731,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9265:2:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9265:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"expression":{"id":727,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"9245:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9251:4:2","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":7946,"src":"9245:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7918_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$attached_to$_t_struct$_Trace208_$7918_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9245:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":726,"id":738,"nodeType":"Return","src":"9238:53:2"}]},"id":740,"implemented":true,"kind":"function","modifiers":[],"name":"_push","nameLocation":"9034:5:2","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"store","nameLocation":"9078:5:2","nodeType":"VariableDeclaration","scope":740,"src":"9049:34:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":707,"nodeType":"UserDefinedTypeName","pathNode":{"id":706,"name":"Checkpoints.Trace208","nameLocations":["9049:11:2","9061:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"9049:20:2"},"referencedDeclaration":7918,"src":"9049:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"op","nameLocation":"9143:2:2","nodeType":"VariableDeclaration","scope":740,"src":"9093:52:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"typeName":{"id":717,"nodeType":"FunctionTypeName","parameterTypes":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"9102:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":709,"name":"uint208","nodeType":"ElementaryTypeName","src":"9102:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"9111:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":711,"name":"uint208","nodeType":"ElementaryTypeName","src":"9111:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9101:18:2"},"returnParameterTypes":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"9134:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":714,"name":"uint208","nodeType":"ElementaryTypeName","src":"9134:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9133:9:2"},"src":"9093:52:2","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"delta","nameLocation":"9163:5:2","nodeType":"VariableDeclaration","scope":740,"src":"9155:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":719,"name":"uint208","nodeType":"ElementaryTypeName","src":"9155:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9039:135:2"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"oldValue","nameLocation":"9200:8:2","nodeType":"VariableDeclaration","scope":740,"src":"9192:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":722,"name":"uint208","nodeType":"ElementaryTypeName","src":"9192:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"newValue","nameLocation":"9218:8:2","nodeType":"VariableDeclaration","scope":740,"src":"9210:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":724,"name":"uint208","nodeType":"ElementaryTypeName","src":"9210:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9191:36:2"},"scope":777,"src":"9025:273:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":753,"nodeType":"Block","src":"9371:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"9388:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":750,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9392:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9388:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":748,"id":752,"nodeType":"Return","src":"9381:12:2"}]},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9313:4:2","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"a","nameLocation":"9326:1:2","nodeType":"VariableDeclaration","scope":754,"src":"9318:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":741,"name":"uint208","nodeType":"ElementaryTypeName","src":"9318:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"b","nameLocation":"9337:1:2","nodeType":"VariableDeclaration","scope":754,"src":"9329:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":743,"name":"uint208","nodeType":"ElementaryTypeName","src":"9329:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9317:22:2"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"9362:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":746,"name":"uint208","nodeType":"ElementaryTypeName","src":"9362:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9361:9:2"},"scope":777,"src":"9304:96:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":767,"nodeType":"Block","src":"9478:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"9495:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":764,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"9499:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9495:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":762,"id":766,"nodeType":"Return","src":"9488:12:2"}]},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9415:9:2","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"a","nameLocation":"9433:1:2","nodeType":"VariableDeclaration","scope":768,"src":"9425:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":755,"name":"uint208","nodeType":"ElementaryTypeName","src":"9425:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"b","nameLocation":"9444:1:2","nodeType":"VariableDeclaration","scope":768,"src":"9436:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":757,"name":"uint208","nodeType":"ElementaryTypeName","src":"9436:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9424:22:2"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"9469:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":760,"name":"uint208","nodeType":"ElementaryTypeName","src":"9469:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9468:9:2"},"scope":777,"src":"9406:101:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"9513:72:2","text":" @dev Must return the voting units held by an account."},"id":776,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"9599:15:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"9615:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"9615:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9614:9:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"9655:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9654:9:2"},"scope":777,"src":"9590:74:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":778,"src":"1892:7774:2","usedErrors":[155,281,288,2329,2570,2572,3228,3233,3238,5482,7389],"usedEvents":[164,173,841]}],"src":"109:9558:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","exportedSymbols":{"IERC3156FlashBorrower":[797]},"id":798,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashBorrower","contractDependencies":[],"contractKind":"interface","documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"146:124:3","text":" @dev Interface of the ERC-3156 FlashBorrower, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."},"fullyImplemented":false,"id":797,"linearizedBaseContracts":[797],"name":"IERC3156FlashBorrower","nameLocation":"281:21:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"309:405:3","text":" @dev Receive a flash loan.\n @param initiator The initiator of the loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param fee The additional amount of tokens to repay.\n @param data Arbitrary data structure, intended to contain user-defined parameters.\n @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""},"functionSelector":"23e30c8b","id":796,"implemented":false,"kind":"function","modifiers":[],"name":"onFlashLoan","nameLocation":"728:11:3","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"initiator","nameLocation":"757:9:3","nodeType":"VariableDeclaration","scope":796,"src":"749:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"token","nameLocation":"784:5:3","nodeType":"VariableDeclaration","scope":796,"src":"776:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"amount","nameLocation":"807:6:3","nodeType":"VariableDeclaration","scope":796,"src":"799:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"799:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"fee","nameLocation":"831:3:3","nodeType":"VariableDeclaration","scope":796,"src":"823:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"data","nameLocation":"859:4:3","nodeType":"VariableDeclaration","scope":796,"src":"844:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":790,"name":"bytes","nodeType":"ElementaryTypeName","src":"844:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"739:130:3"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":796,"src":"888:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"887:9:3"},"scope":797,"src":"719:178:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":798,"src":"271:628:3","usedErrors":[],"usedEvents":[]}],"src":"120:780:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","exportedSymbols":{"IERC3156FlashBorrower":[797],"IERC3156FlashLender":[836]},"id":837,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":799,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:4"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","file":"./IERC3156FlashBorrower.sol","id":801,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":837,"sourceUnit":798,"src":"144:66:4","symbolAliases":[{"foreign":{"id":800,"name":"IERC3156FlashBorrower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"152:21:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashLender","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"212:122:4","text":" @dev Interface of the ERC-3156 FlashLender, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."},"fullyImplemented":false,"id":836,"linearizedBaseContracts":[836],"name":"IERC3156FlashLender","nameLocation":"345:19:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"371:168:4","text":" @dev The amount of currency available to be lended.\n @param token The loan currency.\n @return The amount of `token` that can be borrowed."},"functionSelector":"613255ab","id":810,"implemented":false,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"553:12:4","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"token","nameLocation":"574:5:4","nodeType":"VariableDeclaration","scope":810,"src":"566:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"566:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"565:15:4"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":810,"src":"604:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"603:9:4"},"scope":836,"src":"544:69:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"619:249:4","text":" @dev The fee to be charged for a given loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @return The amount of `token` to be charged for the loan, on top of the returned principal."},"functionSelector":"d9d98ce4","id":820,"implemented":false,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"882:8:4","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"token","nameLocation":"899:5:4","nodeType":"VariableDeclaration","scope":820,"src":"891:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"amount","nameLocation":"914:6:4","nodeType":"VariableDeclaration","scope":820,"src":"906:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"890:31:4"},"returnParameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":820,"src":"945:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"945:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"944:9:4"},"scope":836,"src":"873:81:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"960:320:4","text":" @dev Initiate a flash loan.\n @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param data Arbitrary data structure, intended to contain user-defined parameters."},"functionSelector":"5cffe9de","id":835,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"1294:9:4","nodeType":"FunctionDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"receiver","nameLocation":"1335:8:4","nodeType":"VariableDeclaration","scope":835,"src":"1313:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"},"typeName":{"id":823,"nodeType":"UserDefinedTypeName","pathNode":{"id":822,"name":"IERC3156FlashBorrower","nameLocations":["1313:21:4"],"nodeType":"IdentifierPath","referencedDeclaration":797,"src":"1313:21:4"},"referencedDeclaration":797,"src":"1313:21:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"token","nameLocation":"1361:5:4","nodeType":"VariableDeclaration","scope":835,"src":"1353:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"1353:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"amount","nameLocation":"1384:6:4","nodeType":"VariableDeclaration","scope":835,"src":"1376:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1376:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"data","nameLocation":"1415:4:4","nodeType":"VariableDeclaration","scope":835,"src":"1400:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":829,"name":"bytes","nodeType":"ElementaryTypeName","src":"1400:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1303:122:4"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":835,"src":"1444:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":832,"name":"bool","nodeType":"ElementaryTypeName","src":"1444:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1443:6:4"},"scope":836,"src":"1285:165:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":837,"src":"335:1117:4","usedErrors":[],"usedEvents":[]}],"src":"118:1335:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[861]},"id":862,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":838,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":861,"linearizedBaseContracts":[861],"name":"IERC5267","nameLocation":"143:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"158:84:5","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":841,"name":"EIP712DomainChanged","nameLocation":"253:19:5","nodeType":"EventDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[],"src":"272:2:5"},"src":"247:28:5"},{"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"281:140:5","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":860,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:5","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"447:2:5"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"fields","nameLocation":"517:6:5","nodeType":"VariableDeclaration","scope":860,"src":"510:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":844,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"name","nameLocation":"551:4:5","nodeType":"VariableDeclaration","scope":860,"src":"537:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":846,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"version","nameLocation":"583:7:5","nodeType":"VariableDeclaration","scope":860,"src":"569:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":848,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"chainId","nameLocation":"612:7:5","nodeType":"VariableDeclaration","scope":860,"src":"604:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:5","nodeType":"VariableDeclaration","scope":860,"src":"633:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"salt","nameLocation":"680:4:5","nodeType":"VariableDeclaration","scope":860,"src":"672:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"extensions","nameLocation":"715:10:5","nodeType":"VariableDeclaration","scope":860,"src":"698:27:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":857,"nodeType":"ArrayTypeName","src":"698:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:5"},"scope":861,"src":"426:310:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":862,"src":"133:605:5","usedErrors":[],"usedEvents":[841]}],"src":"107:632:5"},"id":5},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[872],"IERC6372":[887],"IVotes":[230]},"id":873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":863,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:6"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":865,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":873,"sourceUnit":231,"src":"133:54:6","symbolAliases":[{"foreign":{"id":864,"name":"IVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"141:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":867,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":873,"sourceUnit":888,"src":"188:40:6","symbolAliases":[{"foreign":{"id":866,"name":"IERC6372","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"196:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":868,"name":"IERC6372","nameLocations":["252:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":887,"src":"252:8:6"},"id":869,"nodeType":"InheritanceSpecifier","src":"252:8:6"},{"baseName":{"id":870,"name":"IVotes","nameLocations":["262:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":230,"src":"262:6:6"},"id":871,"nodeType":"InheritanceSpecifier","src":"262:6:6"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":872,"linearizedBaseContracts":[872,230,887],"name":"IERC5805","nameLocation":"240:8:6","nodeType":"ContractDefinition","nodes":[],"scope":873,"src":"230:41:6","usedErrors":[155],"usedEvents":[164,173]}],"src":"107:165:6"},"id":6},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[887]},"id":888,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":874,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":887,"linearizedBaseContracts":[887],"name":"IERC6372","nameLocation":"143:8:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"158:133:7","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":880,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"305:5:7","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"310:2:7"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":880,"src":"336:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":877,"name":"uint48","nodeType":"ElementaryTypeName","src":"336:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"335:8:7"},"scope":887,"src":"296:48:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"350:48:7","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":886,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"465:10:7","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[],"src":"475:2:7"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"501:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":883,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"500:15:7"},"scope":887,"src":"456:60:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":888,"src":"133:385:7","usedErrors":[],"usedEvents":[]}],"src":"107:412:7"},"id":7},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1024],"IERC20Errors":[929],"IERC721Errors":[977]},"id":1025,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":889,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"138:141:8","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":929,"linearizedBaseContracts":[929],"name":"IERC20Errors","nameLocation":"290:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"309:309:8","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":899,"name":"ERC20InsufficientBalance","nameLocation":"629:24:8","nodeType":"ErrorDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":893,"mutability":"mutable","name":"sender","nameLocation":"662:6:8","nodeType":"VariableDeclaration","scope":899,"src":"654:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"balance","nameLocation":"678:7:8","nodeType":"VariableDeclaration","scope":899,"src":"670:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"needed","nameLocation":"695:6:8","nodeType":"VariableDeclaration","scope":899,"src":"687:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:8"},"src":"623:80:8"},{"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"709:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":904,"name":"ERC20InvalidSender","nameLocation":"872:18:8","nodeType":"ErrorDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"sender","nameLocation":"899:6:8","nodeType":"VariableDeclaration","scope":904,"src":"891:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:8"},"src":"866:41:8"},{"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"913:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":909,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:8","nodeType":"ErrorDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:8","nodeType":"VariableDeclaration","scope":909,"src":"1104:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:8"},"src":"1077:45:8"},{"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"1128:345:8","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":918,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:8","nodeType":"ErrorDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"spender","nameLocation":"1519:7:8","nodeType":"VariableDeclaration","scope":918,"src":"1511:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:8","nodeType":"VariableDeclaration","scope":918,"src":"1528:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"needed","nameLocation":"1555:6:8","nodeType":"VariableDeclaration","scope":918,"src":"1547:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:8"},"src":"1478:85:8"},{"documentation":{"id":919,"nodeType":"StructuredDocumentation","src":"1569:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":923,"name":"ERC20InvalidApprover","nameLocation":"1754:20:8","nodeType":"ErrorDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"approver","nameLocation":"1783:8:8","nodeType":"VariableDeclaration","scope":923,"src":"1775:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:8"},"src":"1748:45:8"},{"documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"1799:195:8","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":928,"name":"ERC20InvalidSpender","nameLocation":"2005:19:8","nodeType":"ErrorDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"spender","nameLocation":"2033:7:8","nodeType":"VariableDeclaration","scope":928,"src":"2025:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:8"},"src":"1999:43:8"}],"scope":1025,"src":"280:1764:8","usedErrors":[899,904,909,918,923,928],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"2046:143:8","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":977,"linearizedBaseContracts":[977],"name":"IERC721Errors","nameLocation":"2200:13:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"2220:219:8","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":935,"name":"ERC721InvalidOwner","nameLocation":"2450:18:8","nodeType":"ErrorDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"owner","nameLocation":"2477:5:8","nodeType":"VariableDeclaration","scope":935,"src":"2469:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:8"},"src":"2444:40:8"},{"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"2490:132:8","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":940,"name":"ERC721NonexistentToken","nameLocation":"2633:22:8","nodeType":"ErrorDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:8","nodeType":"VariableDeclaration","scope":940,"src":"2656:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:8"},"src":"2627:46:8"},{"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"2679:289:8","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":949,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:8","nodeType":"ErrorDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"sender","nameLocation":"3008:6:8","nodeType":"VariableDeclaration","scope":949,"src":"3000:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:8","nodeType":"VariableDeclaration","scope":949,"src":"3016:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"owner","nameLocation":"3041:5:8","nodeType":"VariableDeclaration","scope":949,"src":"3033:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:8"},"src":"2973:75:8"},{"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"3054:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":954,"name":"ERC721InvalidSender","nameLocation":"3217:19:8","nodeType":"ErrorDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"sender","nameLocation":"3245:6:8","nodeType":"VariableDeclaration","scope":954,"src":"3237:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:8"},"src":"3211:42:8"},{"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"3259:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":959,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:8","nodeType":"ErrorDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:8","nodeType":"VariableDeclaration","scope":959,"src":"3451:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:8"},"src":"3423:46:8"},{"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"3475:247:8","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":966,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:8","nodeType":"ErrorDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"operator","nameLocation":"3768:8:8","nodeType":"VariableDeclaration","scope":966,"src":"3760:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:8","nodeType":"VariableDeclaration","scope":966,"src":"3778:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:8"},"src":"3727:68:8"},{"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"3801:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":971,"name":"ERC721InvalidApprover","nameLocation":"3986:21:8","nodeType":"ErrorDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"approver","nameLocation":"4016:8:8","nodeType":"VariableDeclaration","scope":971,"src":"4008:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:8"},"src":"3980:46:8"},{"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"4032:197:8","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":976,"name":"ERC721InvalidOperator","nameLocation":"4240:21:8","nodeType":"ErrorDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"operator","nameLocation":"4270:8:8","nodeType":"VariableDeclaration","scope":976,"src":"4262:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:8"},"src":"4234:46:8"}],"scope":1025,"src":"2190:2092:8","usedErrors":[935,940,949,954,959,966,971,976],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"4284:145:8","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":1024,"linearizedBaseContracts":[1024],"name":"IERC1155Errors","nameLocation":"4440:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"4461:361:8","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":989,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:8","nodeType":"ErrorDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"sender","nameLocation":"4868:6:8","nodeType":"VariableDeclaration","scope":989,"src":"4860:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"balance","nameLocation":"4884:7:8","nodeType":"VariableDeclaration","scope":989,"src":"4876:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"needed","nameLocation":"4901:6:8","nodeType":"VariableDeclaration","scope":989,"src":"4893:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":984,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:8","nodeType":"VariableDeclaration","scope":989,"src":"4909:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:8"},"src":"4827:99:8"},{"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"4932:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":994,"name":"ERC1155InvalidSender","nameLocation":"5095:20:8","nodeType":"ErrorDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"sender","nameLocation":"5124:6:8","nodeType":"VariableDeclaration","scope":994,"src":"5116:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:8"},"src":"5089:43:8"},{"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"5138:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":999,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:8","nodeType":"ErrorDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:8","nodeType":"VariableDeclaration","scope":999,"src":"5331:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:8"},"src":"5302:47:8"},{"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"5355:256:8","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1006,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:8","nodeType":"ErrorDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"operator","nameLocation":"5659:8:8","nodeType":"VariableDeclaration","scope":1006,"src":"5651:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"owner","nameLocation":"5677:5:8","nodeType":"VariableDeclaration","scope":1006,"src":"5669:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:8"},"src":"5616:68:8"},{"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"5690:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1011,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:8","nodeType":"ErrorDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"approver","nameLocation":"5906:8:8","nodeType":"VariableDeclaration","scope":1011,"src":"5898:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:8"},"src":"5869:47:8"},{"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"5922:197:8","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1016,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:8","nodeType":"ErrorDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"operator","nameLocation":"6161:8:8","nodeType":"VariableDeclaration","scope":1016,"src":"6153:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:8"},"src":"6124:47:8"},{"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"6177:280:8","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1023,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:8","nodeType":"ErrorDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:8","nodeType":"VariableDeclaration","scope":1023,"src":"6494:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:8","nodeType":"VariableDeclaration","scope":1023,"src":"6513:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:8"},"src":"6462:73:8"}],"scope":1025,"src":"4430:2107:8","usedErrors":[989,994,999,1006,1011,1016,1023],"usedEvents":[]}],"src":"112:6426:8"},"id":8},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2319],"ERC20":[1539],"IERC20":[1617],"IERC20Errors":[929],"IERC20Metadata":[2253]},"id":1540,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1026,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1028,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1540,"sourceUnit":1618,"src":"131:36:9","symbolAliases":[{"foreign":{"id":1027,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"139:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1030,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1540,"sourceUnit":2254,"src":"168:63:9","symbolAliases":[{"foreign":{"id":1029,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"176:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1032,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1540,"sourceUnit":2320,"src":"232:48:9","symbolAliases":[{"foreign":{"id":1031,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"240:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1034,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1540,"sourceUnit":1025,"src":"281:65:9","symbolAliases":[{"foreign":{"id":1033,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"289:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1036,"name":"Context","nameLocations":["1133:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2319,"src":"1133:7:9"},"id":1037,"nodeType":"InheritanceSpecifier","src":"1133:7:9"},{"baseName":{"id":1038,"name":"IERC20","nameLocations":["1142:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"1142:6:9"},"id":1039,"nodeType":"InheritanceSpecifier","src":"1142:6:9"},{"baseName":{"id":1040,"name":"IERC20Metadata","nameLocations":["1150:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":2253,"src":"1150:14:9"},"id":1041,"nodeType":"InheritanceSpecifier","src":"1150:14:9"},{"baseName":{"id":1042,"name":"IERC20Errors","nameLocations":["1166:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":929,"src":"1166:12:9"},"id":1043,"nodeType":"InheritanceSpecifier","src":"1166:12:9"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"348:757:9","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1539,"linearizedBaseContracts":[1539,929,2253,1617,2319],"name":"ERC20","nameLocation":"1124:5:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1047,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:9","nodeType":"VariableDeclaration","scope":1539,"src":"1185:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1046,"keyName":"account","keyNameLocation":"1201:7:9","keyType":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1053,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:9","nodeType":"VariableDeclaration","scope":1539,"src":"1245:83:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1052,"keyName":"account","keyNameLocation":"1261:7:9","keyType":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1051,"keyName":"spender","keyNameLocation":"1288:7:9","keyType":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1055,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:9","nodeType":"VariableDeclaration","scope":1539,"src":"1335:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1057,"mutability":"mutable","name":"_name","nameLocation":"1385:5:9","nodeType":"VariableDeclaration","scope":1539,"src":"1370:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1056,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1059,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:9","nodeType":"VariableDeclaration","scope":1539,"src":"1396:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1058,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1075,"nodeType":"Block","src":"1657:57:9","statements":[{"expression":{"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1067,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"1667:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1068,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"1675:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1070,"nodeType":"ExpressionStatement","src":"1667:13:9"},{"expression":{"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1071,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"1690:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1072,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"1700:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1074,"nodeType":"ExpressionStatement","src":"1690:17:9"}]},"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"1425:171:9","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1076,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"name_","nameLocation":"1627:5:9","nodeType":"VariableDeclaration","scope":1076,"src":"1613:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1061,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:9","nodeType":"VariableDeclaration","scope":1076,"src":"1634:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1063,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:9"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"1657:0:9"},"scope":1539,"src":"1601:113:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2240],"body":{"id":1084,"nodeType":"Block","src":"1839:29:9","statements":[{"expression":{"id":1082,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"1856:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1081,"id":1083,"nodeType":"Return","src":"1849:12:9"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"1720:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:9","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"1792:2:9"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"1824:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1079,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:9"},"scope":1539,"src":"1779:89:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2246],"body":{"id":1093,"nodeType":"Block","src":"2043:31:9","statements":[{"expression":{"id":1091,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2060:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1090,"id":1092,"nodeType":"Return","src":"2053:14:9"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"1874:102:9","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1094,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:9","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"1996:2:9"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1094,"src":"2028:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1088,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:9"},"scope":1539,"src":"1981:93:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2252],"body":{"id":1102,"nodeType":"Block","src":"2763:26:9","statements":[{"expression":{"hexValue":"3138","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1099,"id":1101,"nodeType":"Return","src":"2773:9:9"}]},"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"2080:622:9","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:9","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[],"src":"2724:2:9"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1103,"src":"2756:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1097,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:9"},"scope":1539,"src":"2707:82:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1566],"body":{"id":1111,"nodeType":"Block","src":"2910:36:9","statements":[{"expression":{"id":1109,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2927:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1108,"id":1110,"nodeType":"Return","src":"2920:19:9"}]},"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"2795:49:9","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:9","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[],"src":"2869:2:9"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1112,"src":"2901:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:9"},"scope":1539,"src":"2849:97:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1574],"body":{"id":1124,"nodeType":"Block","src":"3078:42:9","statements":[{"expression":{"baseExpression":{"id":1120,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"3095:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1122,"indexExpression":{"id":1121,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"3105:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1119,"id":1123,"nodeType":"Return","src":"3088:25:9"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"2952:47:9","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:9","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"account","nameLocation":"3031:7:9","nodeType":"VariableDeclaration","scope":1125,"src":"3023:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:9"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1125,"src":"3069:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:9"},"scope":1539,"src":"3004:116:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1584],"body":{"id":1148,"nodeType":"Block","src":"3390:103:9","statements":[{"assignments":[1136],"declarations":[{"constant":false,"id":1136,"mutability":"mutable","name":"owner","nameLocation":"3408:5:9","nodeType":"VariableDeclaration","scope":1148,"src":"3400:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1139,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1137,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"3416:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:9"},{"expression":{"arguments":[{"id":1141,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"3448:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1142,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3455:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3459:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1140,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"3438:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"3438:27:9"},{"expression":{"hexValue":"74727565","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1134,"id":1147,"nodeType":"Return","src":"3475:11:9"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"3126:184:9","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1149,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:9","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"to","nameLocation":"3341:2:9","nodeType":"VariableDeclaration","scope":1149,"src":"3333:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"value","nameLocation":"3353:5:9","nodeType":"VariableDeclaration","scope":1149,"src":"3345:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:9"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1149,"src":"3384:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1132,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:9"},"scope":1539,"src":"3315:178:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1594],"body":{"id":1165,"nodeType":"Block","src":"3640:51:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1159,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3657:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1161,"indexExpression":{"id":1160,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"3669:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1163,"indexExpression":{"id":1162,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"3676:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1158,"id":1164,"nodeType":"Return","src":"3650:34:9"}]},"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"3499:47:9","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1166,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:9","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"owner","nameLocation":"3578:5:9","nodeType":"VariableDeclaration","scope":1166,"src":"3570:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"spender","nameLocation":"3593:7:9","nodeType":"VariableDeclaration","scope":1166,"src":"3585:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:9"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1166,"src":"3631:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:9"},"scope":1539,"src":"3551:140:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1604],"body":{"id":1189,"nodeType":"Block","src":"4077:107:9","statements":[{"assignments":[1177],"declarations":[{"constant":false,"id":1177,"mutability":"mutable","name":"owner","nameLocation":"4095:5:9","nodeType":"VariableDeclaration","scope":1189,"src":"4087:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1180,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1178,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"4103:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:9"},{"expression":{"arguments":[{"id":1182,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"4134:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1183,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"4141:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"4150:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1181,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1430,1490],"referencedDeclaration":1430,"src":"4125:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"ExpressionStatement","src":"4125:31:9"},{"expression":{"hexValue":"74727565","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1175,"id":1188,"nodeType":"Return","src":"4166:11:9"}]},"documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"3697:296:9","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1190,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:9","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"spender","nameLocation":"4023:7:9","nodeType":"VariableDeclaration","scope":1190,"src":"4015:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"value","nameLocation":"4040:5:9","nodeType":"VariableDeclaration","scope":1190,"src":"4032:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:9"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"4071:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1173,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:9"},"scope":1539,"src":"3998:186:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1616],"body":{"id":1221,"nodeType":"Block","src":"4869:151:9","statements":[{"assignments":[1203],"declarations":[{"constant":false,"id":1203,"mutability":"mutable","name":"spender","nameLocation":"4887:7:9","nodeType":"VariableDeclaration","scope":1221,"src":"4879:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1206,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1204,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"4897:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:9"},{"expression":{"arguments":[{"id":1208,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"4935:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"4941:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"4950:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1207,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"4919:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1212,"nodeType":"ExpressionStatement","src":"4919:37:9"},{"expression":{"arguments":[{"id":1214,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"4976:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1215,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"4982:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"4986:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1213,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"4966:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1218,"nodeType":"ExpressionStatement","src":"4966:26:9"},{"expression":{"hexValue":"74727565","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1201,"id":1220,"nodeType":"Return","src":"5002:11:9"}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"4190:581:9","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:9","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"from","nameLocation":"4806:4:9","nodeType":"VariableDeclaration","scope":1222,"src":"4798:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"to","nameLocation":"4820:2:9","nodeType":"VariableDeclaration","scope":1222,"src":"4812:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"value","nameLocation":"4832:5:9","nodeType":"VariableDeclaration","scope":1222,"src":"4824:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:9"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1222,"src":"4863:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1199,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:9"},"scope":1539,"src":"4776:244:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1268,"nodeType":"Block","src":"5462:231:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1232,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"5476:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:9","typeDescriptions":{}}},"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1246,"nodeType":"IfStatement","src":"5472:86:9","trueBody":{"id":1245,"nodeType":"Block","src":"5496:62:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:9","typeDescriptions":{}}},"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1238,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"5517:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1244,"nodeType":"RevertStatement","src":"5510:37:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1247,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"5571:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:9","typeDescriptions":{}}},"id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1261,"nodeType":"IfStatement","src":"5567:86:9","trueBody":{"id":1260,"nodeType":"Block","src":"5589:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:9","typeDescriptions":{}}},"id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1253,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"5610:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1259,"nodeType":"RevertStatement","src":"5603:39:9"}]}},{"expression":{"arguments":[{"id":1263,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"5670:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1264,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"5676:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"5680:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1262,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"5662:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1267,"nodeType":"ExpressionStatement","src":"5662:24:9"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"5026:362:9","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1269,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:9","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"from","nameLocation":"5420:4:9","nodeType":"VariableDeclaration","scope":1269,"src":"5412:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"to","nameLocation":"5434:2:9","nodeType":"VariableDeclaration","scope":1269,"src":"5426:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"value","nameLocation":"5446:5:9","nodeType":"VariableDeclaration","scope":1269,"src":"5438:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:9"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"5462:0:9"},"scope":1539,"src":"5393:300:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1345,"nodeType":"Block","src":"6083:1032:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1279,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"6097:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:9","typeDescriptions":{}}},"id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1316,"nodeType":"Block","src":"6271:362:9","statements":[{"assignments":[1291],"declarations":[{"constant":false,"id":1291,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:9","nodeType":"VariableDeclaration","scope":1316,"src":"6285:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1295,"initialValue":{"baseExpression":{"id":1292,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"6307:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1294,"indexExpression":{"id":1293,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"6317:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1296,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6340:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6354:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1306,"nodeType":"IfStatement","src":"6336:115:9","trueBody":{"id":1305,"nodeType":"Block","src":"6361:90:9","statements":[{"errorCall":{"arguments":[{"id":1300,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"6411:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1301,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6417:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6430:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1299,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"6386:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1304,"nodeType":"RevertStatement","src":"6379:57:9"}]}},{"id":1315,"nodeType":"UncheckedBlock","src":"6464:159:9","statements":[{"expression":{"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1307,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"6571:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1309,"indexExpression":{"id":1308,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"6581:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1310,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6589:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6603:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ExpressionStatement","src":"6571:37:9"}]}]},"id":1317,"nodeType":"IfStatement","src":"6093:540:9","trueBody":{"id":1289,"nodeType":"Block","src":"6117:148:9","statements":[{"expression":{"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1285,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"6233:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6249:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1288,"nodeType":"ExpressionStatement","src":"6233:21:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1318,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"6647:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:9","typeDescriptions":{}}},"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1337,"nodeType":"Block","src":"6862:206:9","statements":[{"id":1336,"nodeType":"UncheckedBlock","src":"6876:182:9","statements":[{"expression":{"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1330,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"7021:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1332,"indexExpression":{"id":1331,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"7031:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"7038:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1335,"nodeType":"ExpressionStatement","src":"7021:22:9"}]}]},"id":1338,"nodeType":"IfStatement","src":"6643:425:9","trueBody":{"id":1329,"nodeType":"Block","src":"6665:191:9","statements":[{"id":1328,"nodeType":"UncheckedBlock","src":"6679:167:9","statements":[{"expression":{"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1324,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"6810:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6826:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1327,"nodeType":"ExpressionStatement","src":"6810:21:9"}]}]}},{"eventCall":{"arguments":[{"id":1340,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"7092:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"7098:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"7102:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1339,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"7083:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1344,"nodeType":"EmitStatement","src":"7078:30:9"}]},"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"5699:304:9","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1346,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:9","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"from","nameLocation":"6033:4:9","nodeType":"VariableDeclaration","scope":1346,"src":"6025:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"to","nameLocation":"6047:2:9","nodeType":"VariableDeclaration","scope":1346,"src":"6039:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"value","nameLocation":"6059:5:9","nodeType":"VariableDeclaration","scope":1346,"src":"6051:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:9"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[],"src":"6083:0:9"},"scope":1539,"src":"6008:1107:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1378,"nodeType":"Block","src":"7514:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"7528:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:9","typeDescriptions":{}}},"id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1368,"nodeType":"IfStatement","src":"7524:91:9","trueBody":{"id":1367,"nodeType":"Block","src":"7551:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:9","typeDescriptions":{}}},"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1360,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"7572:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"RevertStatement","src":"7565:39:9"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:9","typeDescriptions":{}}},"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1374,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"7644:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"7653:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1369,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"7624:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"ExpressionStatement","src":"7624:35:9"}]},"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"7121:332:9","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:9","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"account","nameLocation":"7481:7:9","nodeType":"VariableDeclaration","scope":1379,"src":"7473:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"value","nameLocation":"7498:5:9","nodeType":"VariableDeclaration","scope":1379,"src":"7490:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:9"},"returnParameters":{"id":1353,"nodeType":"ParameterList","parameters":[],"src":"7514:0:9"},"scope":1539,"src":"7458:208:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1411,"nodeType":"Block","src":"8040:150:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1387,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"8054:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:9","typeDescriptions":{}}},"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"8050:89:9","trueBody":{"id":1400,"nodeType":"Block","src":"8077:62:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:9","typeDescriptions":{}}},"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1393,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"8098:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"RevertStatement","src":"8091:37:9"}]}},{"expression":{"arguments":[{"id":1403,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"8156:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:9","typeDescriptions":{}}},"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8177:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1402,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"8148:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1410,"nodeType":"ExpressionStatement","src":"8148:35:9"}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"7672:307:9","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1412,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:9","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"account","nameLocation":"8007:7:9","nodeType":"VariableDeclaration","scope":1412,"src":"7999:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"value","nameLocation":"8024:5:9","nodeType":"VariableDeclaration","scope":1412,"src":"8016:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:9"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[],"src":"8040:0:9"},"scope":1539,"src":"7984:206:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1429,"nodeType":"Block","src":"8800:54:9","statements":[{"expression":{"arguments":[{"id":1423,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"8819:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1424,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"8826:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"8835:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1422,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1430,1490],"referencedDeclaration":1490,"src":"8810:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1428,"nodeType":"ExpressionStatement","src":"8810:37:9"}]},"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"8196:525:9","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1430,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:9","nodeType":"FunctionDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"owner","nameLocation":"8752:5:9","nodeType":"VariableDeclaration","scope":1430,"src":"8744:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"spender","nameLocation":"8767:7:9","nodeType":"VariableDeclaration","scope":1430,"src":"8759:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"value","nameLocation":"8784:5:9","nodeType":"VariableDeclaration","scope":1430,"src":"8776:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:9"},"returnParameters":{"id":1421,"nodeType":"ParameterList","parameters":[],"src":"8800:0:9"},"scope":1539,"src":"8726:128:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"9799:334:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"9813:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:9","typeDescriptions":{}}},"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1456,"nodeType":"IfStatement","src":"9809:89:9","trueBody":{"id":1455,"nodeType":"Block","src":"9834:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:9","typeDescriptions":{}}},"id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1448,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"9855:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1454,"nodeType":"RevertStatement","src":"9848:39:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1457,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"9911:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:9","typeDescriptions":{}}},"id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1471,"nodeType":"IfStatement","src":"9907:90:9","trueBody":{"id":1470,"nodeType":"Block","src":"9934:63:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1464,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:9","typeDescriptions":{}}},"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1463,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"9955:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"RevertStatement","src":"9948:38:9"}]}},{"expression":{"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1472,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"10006:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1475,"indexExpression":{"id":1473,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10018:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1476,"indexExpression":{"id":1474,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"10025:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"10036:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1479,"nodeType":"ExpressionStatement","src":"10006:35:9"},{"condition":{"id":1480,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"10055:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1488,"nodeType":"IfStatement","src":"10051:76:9","trueBody":{"id":1487,"nodeType":"Block","src":"10066:61:9","statements":[{"eventCall":{"arguments":[{"id":1482,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10094:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1483,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"10101:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"10110:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"10085:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1486,"nodeType":"EmitStatement","src":"10080:36:9"}]}}]},"documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"8860:836:9","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:9","nodeType":"FunctionDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"owner","nameLocation":"9727:5:9","nodeType":"VariableDeclaration","scope":1490,"src":"9719:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"spender","nameLocation":"9742:7:9","nodeType":"VariableDeclaration","scope":1490,"src":"9734:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"value","nameLocation":"9759:5:9","nodeType":"VariableDeclaration","scope":1490,"src":"9751:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:9","nodeType":"VariableDeclaration","scope":1490,"src":"9766:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1438,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:9"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[],"src":"9799:0:9"},"scope":1539,"src":"9701:432:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1537,"nodeType":"Block","src":"10504:388:9","statements":[{"assignments":[1501],"declarations":[{"constant":false,"id":1501,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:9","nodeType":"VariableDeclaration","scope":1537,"src":"10514:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1506,"initialValue":{"arguments":[{"id":1503,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"10551:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1504,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"10558:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1502,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"10541:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1507,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10580:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10605:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"10605:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10600:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10614:3:9","memberName":"max","nodeType":"MemberAccess","src":"10600:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1536,"nodeType":"IfStatement","src":"10576:310:9","trueBody":{"id":1535,"nodeType":"Block","src":"10619:267:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1514,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10637:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"10656:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10637:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1524,"nodeType":"IfStatement","src":"10633:130:9","trueBody":{"id":1523,"nodeType":"Block","src":"10663:100:9","statements":[{"errorCall":{"arguments":[{"id":1518,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"10715:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10724:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"10742:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1517,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"10688:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"RevertStatement","src":"10681:67:9"}]}},{"id":1534,"nodeType":"UncheckedBlock","src":"10776:100:9","statements":[{"expression":{"arguments":[{"id":1526,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"10813:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1527,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"10820:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1528,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10829:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"10848:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10855:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1525,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1430,1490],"referencedDeclaration":1490,"src":"10804:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"ExpressionStatement","src":"10804:57:9"}]}]}}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"10139:271:9","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1538,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:9","nodeType":"FunctionDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"owner","nameLocation":"10448:5:9","nodeType":"VariableDeclaration","scope":1538,"src":"10440:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"spender","nameLocation":"10463:7:9","nodeType":"VariableDeclaration","scope":1538,"src":"10455:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"value","nameLocation":"10480:5:9","nodeType":"VariableDeclaration","scope":1538,"src":"10472:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:9"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[],"src":"10504:0:9"},"scope":1539,"src":"10415:477:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1540,"src":"1106:9788:9","usedErrors":[899,904,909,918,923,928],"usedEvents":[1551,1560]}],"src":"105:10790:9"},"id":9},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1617]},"id":1618,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1541,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"132:71:10","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1617,"linearizedBaseContracts":[1617],"name":"IERC20","nameLocation":"214:6:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"227:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1551,"name":"Transfer","nameLocation":"396:8:10","nodeType":"EventDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:10","nodeType":"VariableDeclaration","scope":1551,"src":"405:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:10","nodeType":"VariableDeclaration","scope":1551,"src":"427:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:10","nodeType":"VariableDeclaration","scope":1551,"src":"447:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:10"},"src":"390:72:10"},{"anonymous":false,"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"468:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1560,"name":"Approval","nameLocation":"627:8:10","nodeType":"EventDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:10","nodeType":"VariableDeclaration","scope":1560,"src":"636:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1556,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:10","nodeType":"VariableDeclaration","scope":1560,"src":"659:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1558,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:10","nodeType":"VariableDeclaration","scope":1560,"src":"684:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:10"},"src":"621:78:10"},{"documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"705:65:10","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1566,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:10","nodeType":"FunctionDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"795:2:10"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"821:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:10"},"scope":1617,"src":"775:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"836:71:10","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1574,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:10","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"account","nameLocation":"939:7:10","nodeType":"VariableDeclaration","scope":1574,"src":"931:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:10"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"971:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:10"},"scope":1617,"src":"912:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"986:213:10","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1584,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:10","nodeType":"FunctionDefinition","parameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"to","nameLocation":"1230:2:10","nodeType":"VariableDeclaration","scope":1584,"src":"1222:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1579,"mutability":"mutable","name":"value","nameLocation":"1242:5:10","nodeType":"VariableDeclaration","scope":1584,"src":"1234:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:10"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1584,"src":"1267:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1581,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:10"},"scope":1617,"src":"1204:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"1279:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1594,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:10","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"owner","nameLocation":"1575:5:10","nodeType":"VariableDeclaration","scope":1594,"src":"1567:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"spender","nameLocation":"1590:7:10","nodeType":"VariableDeclaration","scope":1594,"src":"1582:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:10"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1594,"src":"1622:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:10"},"scope":1617,"src":"1548:83:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"1637:667:10","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1604,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:10","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"spender","nameLocation":"2334:7:10","nodeType":"VariableDeclaration","scope":1604,"src":"2326:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"value","nameLocation":"2351:5:10","nodeType":"VariableDeclaration","scope":1604,"src":"2343:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:10"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1604,"src":"2376:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1601,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:10"},"scope":1617,"src":"2309:73:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"2388:297:10","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1616,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:10","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"from","nameLocation":"2720:4:10","nodeType":"VariableDeclaration","scope":1616,"src":"2712:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"to","nameLocation":"2734:2:10","nodeType":"VariableDeclaration","scope":1616,"src":"2726:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"value","nameLocation":"2746:5:10","nodeType":"VariableDeclaration","scope":1616,"src":"2738:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:10"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"2771:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1613,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:10"},"scope":1617,"src":"2690:87:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1618,"src":"204:2575:10","usedErrors":[],"usedEvents":[1551,1560]}],"src":"106:2674:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2319],"ERC20":[1539],"ERC20Burnable":[1663]},"id":1664,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1619,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1621,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1664,"sourceUnit":1540,"src":"150:35:11","symbolAliases":[{"foreign":{"id":1620,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"158:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1664,"sourceUnit":2320,"src":"186:51:11","symbolAliases":[{"foreign":{"id":1622,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"194:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1625,"name":"Context","nameLocations":["483:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2319,"src":"483:7:11"},"id":1626,"nodeType":"InheritanceSpecifier","src":"483:7:11"},{"baseName":{"id":1627,"name":"ERC20","nameLocations":["492:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":1539,"src":"492:5:11"},"id":1628,"nodeType":"InheritanceSpecifier","src":"492:5:11"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"239:208:11","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1663,"linearizedBaseContracts":[1663,1539,929,2253,1617,2319],"name":"ERC20Burnable","nameLocation":"466:13:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1640,"nodeType":"Block","src":"662:43:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1635,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"678:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"692:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1634,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"672:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1639,"nodeType":"ExpressionStatement","src":"672:26:11"}]},"documentation":{"id":1629,"nodeType":"StructuredDocumentation","src":"504:109:11","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1641,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:11","nodeType":"FunctionDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"value","nameLocation":"640:5:11","nodeType":"VariableDeclaration","scope":1641,"src":"632:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:11"},"returnParameters":{"id":1633,"nodeType":"ParameterList","parameters":[],"src":"662:0:11"},"scope":1663,"src":"618:87:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1661,"nodeType":"Block","src":"1086:93:11","statements":[{"expression":{"arguments":[{"id":1650,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1112:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1651,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"1121:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1135:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1649,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"1096:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1655,"nodeType":"ExpressionStatement","src":"1096:45:11"},{"expression":{"arguments":[{"id":1657,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1157:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1166:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1656,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"1151:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"1151:21:11"}]},"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"711:305:11","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1662,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:11","nodeType":"FunctionDefinition","parameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"account","nameLocation":"1047:7:11","nodeType":"VariableDeclaration","scope":1662,"src":"1039:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"value","nameLocation":"1064:5:11","nodeType":"VariableDeclaration","scope":1662,"src":"1056:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:11"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[],"src":"1086:0:11"},"scope":1663,"src":"1021:158:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1664,"src":"448:733:11","usedErrors":[899,904,909,918,923,928],"usedEvents":[1551,1560]}],"src":"124:1058:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol","exportedSymbols":{"ERC20":[1539],"ERC20FlashMint":[1907],"IERC3156FlashBorrower":[797],"IERC3156FlashLender":[836]},"id":1908,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1665,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:12"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","file":"../../../interfaces/IERC3156FlashBorrower.sol","id":1667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1908,"sourceUnit":798,"src":"151:84:12","symbolAliases":[{"foreign":{"id":1666,"name":"IERC3156FlashBorrower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"159:21:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","file":"../../../interfaces/IERC3156FlashLender.sol","id":1669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1908,"sourceUnit":837,"src":"236:80:12","symbolAliases":[{"foreign":{"id":1668,"name":"IERC3156FlashLender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"244:19:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1671,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1908,"sourceUnit":1540,"src":"317:35:12","symbolAliases":[{"foreign":{"id":1670,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"325:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1673,"name":"ERC20","nameLocations":["966:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":1539,"src":"966:5:12"},"id":1674,"nodeType":"InheritanceSpecifier","src":"966:5:12"},{"baseName":{"id":1675,"name":"IERC3156FlashLender","nameLocations":["973:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":836,"src":"973:19:12"},"id":1676,"nodeType":"InheritanceSpecifier","src":"973:19:12"}],"canonicalName":"ERC20FlashMint","contractDependencies":[],"contractKind":"contract","documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"354:575:12","text":" @dev Implementation of the ERC-3156 Flash loans extension, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n Adds the {flashLoan} method, which provides flash loan support at the token\n level. By default there is no fee, but this can be changed by overriding {flashFee}.\n NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions,\n {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend\n overriding {maxFlashLoan} so that it correctly reflects the supply cap."},"fullyImplemented":true,"id":1907,"linearizedBaseContracts":[1907,836,1539,929,2253,1617,2319],"name":"ERC20FlashMint","nameLocation":"948:14:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1681,"mutability":"constant","name":"RETURN_VALUE","nameLocation":"1024:12:12","nodeType":"VariableDeclaration","scope":1907,"src":"999:85:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"999:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1049:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""},"value":"ERC3156FlashBorrower.onFlashLoan"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""}],"id":1678,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1039:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1039:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"1091:52:12","text":" @dev The loan token is not valid."},"errorSelector":"b5a7db92","id":1686,"name":"ERC3156UnsupportedToken","nameLocation":"1154:23:12","nodeType":"ErrorDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"token","nameLocation":"1186:5:12","nodeType":"VariableDeclaration","scope":1686,"src":"1178:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1177:15:12"},"src":"1148:45:12"},{"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"1199:82:12","text":" @dev The requested loan exceeds the max loan value for `token`."},"errorSelector":"fd9a7609","id":1691,"name":"ERC3156ExceededMaxLoan","nameLocation":"1292:22:12","nodeType":"ErrorDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"maxLoan","nameLocation":"1323:7:12","nodeType":"VariableDeclaration","scope":1691,"src":"1315:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"1315:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1314:17:12"},"src":"1286:46:12"},{"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"1338:115:12","text":" @dev The receiver of a flashloan is not a valid {IERC3156FlashBorrower-onFlashLoan} implementer."},"errorSelector":"678c5b00","id":1696,"name":"ERC3156InvalidReceiver","nameLocation":"1464:22:12","nodeType":"ErrorDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"receiver","nameLocation":"1495:8:12","nodeType":"VariableDeclaration","scope":1696,"src":"1487:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:18:12"},"src":"1458:47:12"},{"baseFunctions":[810],"body":{"id":1721,"nodeType":"Block","src":"2032:86:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1704,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2049:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1707,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2066:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMint_$1907","typeString":"contract ERC20FlashMint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMint_$1907","typeString":"contract ERC20FlashMint"}],"id":1706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2058:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"2058:7:12","typeDescriptions":{}}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2058:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2049:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2110:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2049:62:12","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2079:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1710,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2074:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2074:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2088:3:12","memberName":"max","nodeType":"MemberAccess","src":"2074:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1715,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"2094:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2094:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2074:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1703,"id":1720,"nodeType":"Return","src":"2042:69:12"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1511:441:12","text":" @dev Returns the maximum amount of tokens available for loan.\n @param token The address of the token that is requested.\n @return The amount of token that can be loaned.\n NOTE: This function does not consider any form of supply cap, so in case\n it's used in a token with a cap like {ERC20Capped}, make sure to override this\n function to integrate the cap instead of `type(uint256).max`."},"functionSelector":"613255ab","id":1722,"implemented":true,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"1966:12:12","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"token","nameLocation":"1987:5:12","nodeType":"VariableDeclaration","scope":1722,"src":"1979:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"1979:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1978:15:12"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1722,"src":"2023:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2023:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2022:9:12"},"scope":1907,"src":"1957:161:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[820],"body":{"id":1749,"nodeType":"Block","src":"2569:146:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2583:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1735,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2600:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMint_$1907","typeString":"contract ERC20FlashMint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMint_$1907","typeString":"contract ERC20FlashMint"}],"id":1734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2592:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"2592:7:12","typeDescriptions":{}}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2592:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2583:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1743,"nodeType":"IfStatement","src":"2579:90:12","trueBody":{"id":1742,"nodeType":"Block","src":"2607:62:12","statements":[{"errorCall":{"arguments":[{"id":1739,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2652:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1738,"name":"ERC3156UnsupportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2628:23:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2628:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1741,"nodeType":"RevertStatement","src":"2621:37:12"}]}},{"expression":{"arguments":[{"id":1745,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2695:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"2702:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1744,"name":"_flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2685:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2685:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1731,"id":1748,"nodeType":"Return","src":"2678:30:12"}]},"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"2124:354:12","text":" @dev Returns the fee applied when doing flash loans. This function calls\n the {_flashFee} function which returns the fee applied when doing flash\n loans.\n @param token The token to be flash loaned.\n @param value The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"functionSelector":"d9d98ce4","id":1750,"implemented":true,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"2492:8:12","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"token","nameLocation":"2509:5:12","nodeType":"VariableDeclaration","scope":1750,"src":"2501:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1724,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1727,"mutability":"mutable","name":"value","nameLocation":"2524:5:12","nodeType":"VariableDeclaration","scope":1750,"src":"2516:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"2516:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2500:30:12"},"returnParameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1750,"src":"2560:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"2560:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2559:9:12"},"scope":1907,"src":"2483:232:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1766,"nodeType":"Block","src":"3192:138:12","statements":[{"expression":{"id":1760,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"3285:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1761,"nodeType":"ExpressionStatement","src":"3285:5:12"},{"expression":{"id":1762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"3300:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1763,"nodeType":"ExpressionStatement","src":"3300:5:12"},{"expression":{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3322:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1759,"id":1765,"nodeType":"Return","src":"3315:8:12"}]},"documentation":{"id":1751,"nodeType":"StructuredDocumentation","src":"2721:377:12","text":" @dev Returns the fee applied when doing flash loans. By default this\n implementation has 0 fees. This function can be overloaded to make\n the flash loan mechanism deflationary.\n @param token The token to be flash loaned.\n @param value The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFee","nameLocation":"3112:9:12","nodeType":"FunctionDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"token","nameLocation":"3130:5:12","nodeType":"VariableDeclaration","scope":1767,"src":"3122:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1752,"name":"address","nodeType":"ElementaryTypeName","src":"3122:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"value","nameLocation":"3145:5:12","nodeType":"VariableDeclaration","scope":1767,"src":"3137:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"3137:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3121:30:12"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"3183:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3182:9:12"},"scope":1907,"src":"3103:227:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1778,"nodeType":"Block","src":"3718:34:12","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3743:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3735:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"3735:7:12","typeDescriptions":{}}},"id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3735:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1772,"id":1777,"nodeType":"Return","src":"3728:17:12"}]},"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"3336:308:12","text":" @dev Returns the receiver address of the flash fee. By default this\n implementation returns the address(0) which means the fee amount will be burnt.\n This function can be overloaded to change the fee receiver.\n @return The address for which the flash fee will be sent to."},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFeeReceiver","nameLocation":"3658:17:12","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[],"src":"3675:2:12"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1779,"src":"3709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"3709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3708:9:12"},"scope":1907,"src":"3649:103:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[835],"body":{"id":1905,"nodeType":"Block","src":"4977:792:12","statements":[{"assignments":[1795],"declarations":[{"constant":false,"id":1795,"mutability":"mutable","name":"maxLoan","nameLocation":"4995:7:12","nodeType":"VariableDeclaration","scope":1905,"src":"4987:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"4987:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1799,"initialValue":{"arguments":[{"id":1797,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"5018:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1796,"name":"maxFlashLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"5005:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5005:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4987:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5038:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1801,"name":"maxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"5046:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5038:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1808,"nodeType":"IfStatement","src":"5034:84:12","trueBody":{"id":1807,"nodeType":"Block","src":"5055:63:12","statements":[{"errorCall":{"arguments":[{"id":1804,"name":"maxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"5099:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1803,"name":"ERC3156ExceededMaxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"5076:22:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5076:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"RevertStatement","src":"5069:38:12"}]}},{"assignments":[1810],"declarations":[{"constant":false,"id":1810,"mutability":"mutable","name":"fee","nameLocation":"5135:3:12","nodeType":"VariableDeclaration","scope":1905,"src":"5127:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"5127:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1815,"initialValue":{"arguments":[{"id":1812,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"5150:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5157:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1811,"name":"flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"5141:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5141:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5127:36:12"},{"expression":{"arguments":[{"arguments":[{"id":1819,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5187:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}],"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5179:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1817,"name":"address","nodeType":"ElementaryTypeName","src":"5179:7:12","typeDescriptions":{}}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5179:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5198:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1816,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"5173:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5173:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1823,"nodeType":"ExpressionStatement","src":"5173:31:12"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1826,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"5239:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5239:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1828,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"5253:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5260:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1830,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5267:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1831,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"5272:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1824,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5218:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5227:11:12","memberName":"onFlashLoan","nodeType":"MemberAccess","referencedDeclaration":796,"src":"5218:20:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes32)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5218:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1833,"name":"RETURN_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"5281:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5218:75:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1843,"nodeType":"IfStatement","src":"5214:154:12","trueBody":{"id":1842,"nodeType":"Block","src":"5295:73:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1838,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5347:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}],"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5339:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"5339:7:12","typeDescriptions":{}}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5339:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1835,"name":"ERC3156InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"5316:22:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5316:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1841,"nodeType":"RevertStatement","src":"5309:48:12"}]}},{"assignments":[1845],"declarations":[{"constant":false,"id":1845,"mutability":"mutable","name":"flashFeeReceiver","nameLocation":"5385:16:12","nodeType":"VariableDeclaration","scope":1905,"src":"5377:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1844,"name":"address","nodeType":"ElementaryTypeName","src":"5377:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1848,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1846,"name":"_flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"5404:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5377:46:12"},{"expression":{"arguments":[{"arguments":[{"id":1852,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5457:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}],"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5449:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:12","typeDescriptions":{}}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5449:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1856,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5476:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMint_$1907","typeString":"contract ERC20FlashMint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMint_$1907","typeString":"contract ERC20FlashMint"}],"id":1855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5468:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"5468:7:12","typeDescriptions":{}}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5483:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1859,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5491:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5483:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1849,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"5433:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1862,"nodeType":"ExpressionStatement","src":"5433:62:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1863,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5509:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5516:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5509:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5521:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5549:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5541:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"5541:7:12","typeDescriptions":{}}},"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5541:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5521:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5509:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1901,"nodeType":"Block","src":"5621:121:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1887,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5649:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}],"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1885,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:12","typeDescriptions":{}}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5660:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1884,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"5635:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5635:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1891,"nodeType":"ExpressionStatement","src":"5635:31:12"},{"expression":{"arguments":[{"arguments":[{"id":1895,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5698:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}],"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5690:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"5690:7:12","typeDescriptions":{}}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5690:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1897,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5709:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1898,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5727:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1892,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5680:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5680:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"ExpressionStatement","src":"5680:51:12"}]},"id":1902,"nodeType":"IfStatement","src":"5505:237:12","trueBody":{"id":1883,"nodeType":"Block","src":"5553:62:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1876,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5581:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}],"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5573:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"5573:7:12","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5573:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"5592:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1879,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5600:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5592:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1873,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"5567:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5567:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1882,"nodeType":"ExpressionStatement","src":"5567:37:12"}]}},{"expression":{"hexValue":"74727565","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5758:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1793,"id":1904,"nodeType":"Return","src":"5751:11:12"}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"3758:760:12","text":" @dev Performs a flash loan. New tokens are minted and sent to the\n `receiver`, who is required to implement the {IERC3156FlashBorrower}\n interface. By the end of the flash loan, the receiver is expected to own\n value + fee tokens and have them approved back to the token contract itself so\n they can be burned.\n @param receiver The receiver of the flash loan. Should implement the\n {IERC3156FlashBorrower-onFlashLoan} interface.\n @param token The token to be flash loaned. Only `address(this)` is\n supported.\n @param value The amount of tokens to be loaned.\n @param data An arbitrary datafield that is passed to the receiver.\n @return `true` if the flash loan was successful."},"functionSelector":"5cffe9de","id":1906,"implemented":true,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"4816:9:12","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"receiver","nameLocation":"4857:8:12","nodeType":"VariableDeclaration","scope":1906,"src":"4835:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"},"typeName":{"id":1782,"nodeType":"UserDefinedTypeName","pathNode":{"id":1781,"name":"IERC3156FlashBorrower","nameLocations":["4835:21:12"],"nodeType":"IdentifierPath","referencedDeclaration":797,"src":"4835:21:12"},"referencedDeclaration":797,"src":"4835:21:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$797","typeString":"contract IERC3156FlashBorrower"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"token","nameLocation":"4883:5:12","nodeType":"VariableDeclaration","scope":1906,"src":"4875:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1784,"name":"address","nodeType":"ElementaryTypeName","src":"4875:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1787,"mutability":"mutable","name":"value","nameLocation":"4906:5:12","nodeType":"VariableDeclaration","scope":1906,"src":"4898:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"4898:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1789,"mutability":"mutable","name":"data","nameLocation":"4936:4:12","nodeType":"VariableDeclaration","scope":1906,"src":"4921:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1788,"name":"bytes","nodeType":"ElementaryTypeName","src":"4921:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4825:121:12"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1906,"src":"4971:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1791,"name":"bool","nodeType":"ElementaryTypeName","src":"4971:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4970:6:12"},"scope":1907,"src":"4807:962:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1908,"src":"930:4841:12","usedErrors":[899,904,909,918,923,928,1686,1691,1696],"usedEvents":[1551,1560]}],"src":"125:5647:12"},"id":12},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"ERC20":[1539],"ERC20Pausable":[1941],"Pausable":[2556]},"id":1942,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1909,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1942,"sourceUnit":1540,"src":"150:35:13","symbolAliases":[{"foreign":{"id":1910,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"158:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":1913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1942,"sourceUnit":2557,"src":"186:53:13","symbolAliases":[{"foreign":{"id":1912,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"194:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1915,"name":"ERC20","nameLocations":["965:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":1539,"src":"965:5:13"},"id":1916,"nodeType":"InheritanceSpecifier","src":"965:5:13"},{"baseName":{"id":1917,"name":"Pausable","nameLocations":["972:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2556,"src":"972:8:13"},"id":1918,"nodeType":"InheritanceSpecifier","src":"972:8:13"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"241:688:13","text":" @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1941,"linearizedBaseContracts":[1941,2556,1539,929,2253,1617,2319],"name":"ERC20Pausable","nameLocation":"948:13:13","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1346],"body":{"id":1939,"nodeType":"Block","src":"1211:47:13","statements":[{"expression":{"arguments":[{"id":1934,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"1235:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1935,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"1241:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"1245:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1931,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1221:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$1941_$","typeString":"type(contract super ERC20Pausable)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1227:7:13","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"1221:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1938,"nodeType":"ExpressionStatement","src":"1221:30:13"}]},"documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"987:121:13","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":1940,"implemented":true,"kind":"function","modifiers":[{"id":1929,"kind":"modifierInvocation","modifierName":{"id":1928,"name":"whenNotPaused","nameLocations":["1197:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2481,"src":"1197:13:13"},"nodeType":"ModifierInvocation","src":"1197:13:13"}],"name":"_update","nameLocation":"1122:7:13","nodeType":"FunctionDefinition","overrides":{"id":1927,"nodeType":"OverrideSpecifier","overrides":[],"src":"1188:8:13"},"parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"from","nameLocation":"1138:4:13","nodeType":"VariableDeclaration","scope":1940,"src":"1130:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1923,"mutability":"mutable","name":"to","nameLocation":"1152:2:13","nodeType":"VariableDeclaration","scope":1940,"src":"1144:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1922,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"value","nameLocation":"1164:5:13","nodeType":"VariableDeclaration","scope":1940,"src":"1156:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1129:41:13"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[],"src":"1211:0:13"},"scope":1941,"src":"1113:145:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1942,"src":"930:330:13","usedErrors":[899,904,909,918,923,928,2461,2464],"usedEvents":[1551,1560,2453,2458]}],"src":"124:1137:13"},"id":13},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3565],"EIP712":[3792],"ERC20":[1539],"ERC20Permit":[2095],"IERC20Permit":[2289],"Nonces":[2387]},"id":2096,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1943,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1945,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":2290,"src":"148:48:14","symbolAliases":[{"foreign":{"id":1944,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"156:12:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":1540,"src":"197:35:14","symbolAliases":[{"foreign":{"id":1946,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"205:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1949,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":3566,"src":"233:60:14","symbolAliases":[{"foreign":{"id":1948,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"241:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1951,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":3793,"src":"294:62:14","symbolAliases":[{"foreign":{"id":1950,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"302:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1953,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":2388,"src":"357:49:14","symbolAliases":[{"foreign":{"id":1952,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"365:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1955,"name":"ERC20","nameLocations":["931:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":1539,"src":"931:5:14"},"id":1956,"nodeType":"InheritanceSpecifier","src":"931:5:14"},{"baseName":{"id":1957,"name":"IERC20Permit","nameLocations":["938:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2289,"src":"938:12:14"},"id":1958,"nodeType":"InheritanceSpecifier","src":"938:12:14"},{"baseName":{"id":1959,"name":"EIP712","nameLocations":["952:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":3792,"src":"952:6:14"},"id":1960,"nodeType":"InheritanceSpecifier","src":"952:6:14"},{"baseName":{"id":1961,"name":"Nonces","nameLocations":["960:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2387,"src":"960:6:14"},"id":1962,"nodeType":"InheritanceSpecifier","src":"960:6:14"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"408:489:14","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":2095,"linearizedBaseContracts":[2095,2387,3792,861,2289,1539,929,2253,1617,2319],"name":"ERC20Permit","nameLocation":"916:11:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1967,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:14","nodeType":"VariableDeclaration","scope":2095,"src":"973:146:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1964,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"1126:52:14","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1972,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:14","nodeType":"ErrorDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:14","nodeType":"VariableDeclaration","scope":1972,"src":"1213:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:14"},"src":"1183:48:14"},{"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"1237:45:14","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1979,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:14","nodeType":"ErrorDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"signer","nameLocation":"1322:6:14","nodeType":"VariableDeclaration","scope":1979,"src":"1314:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1974,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"owner","nameLocation":"1338:5:14","nodeType":"VariableDeclaration","scope":1979,"src":"1330:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:14"},"src":"1287:58:14"},{"body":{"id":1989,"nodeType":"Block","src":"1627:2:14","statements":[]},"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"1351:221:14","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1990,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1985,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"1616:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1987,"kind":"baseConstructorSpecifier","modifierName":{"id":1984,"name":"EIP712","nameLocations":["1609:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":3792,"src":"1609:6:14"},"nodeType":"ModifierInvocation","src":"1609:17:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"name","nameLocation":"1603:4:14","nodeType":"VariableDeclaration","scope":1990,"src":"1589:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1981,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:14"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[],"src":"1627:0:14"},"scope":2095,"src":"1577:52:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2274],"body":{"id":2066,"nodeType":"Block","src":"1872:483:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2008,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2010,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"1904:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2017,"nodeType":"IfStatement","src":"1882:97:14","trueBody":{"id":2016,"nodeType":"Block","src":"1914:65:14","statements":[{"errorCall":{"arguments":[{"id":2013,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"1959:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2012,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"1935:23:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2015,"nodeType":"RevertStatement","src":"1928:40:14"}]}},{"assignments":[2019],"declarations":[{"constant":false,"id":2019,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:14","nodeType":"VariableDeclaration","scope":2066,"src":"1989:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2033,"initialValue":{"arguments":[{"arguments":[{"id":2023,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"2031:15:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2024,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"2048:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2025,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"2055:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2064:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2028,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"2081:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2027,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"2071:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2030,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2089:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2021,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:14","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2020,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:14"},{"assignments":[2035],"declarations":[{"constant":false,"id":2035,"mutability":"mutable","name":"hash","nameLocation":"2118:4:14","nodeType":"VariableDeclaration","scope":2066,"src":"2110:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2039,"initialValue":{"arguments":[{"id":2037,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"2142:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2036,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"2125:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:14"},{"assignments":[2041],"declarations":[{"constant":false,"id":2041,"mutability":"mutable","name":"signer","nameLocation":"2172:6:14","nodeType":"VariableDeclaration","scope":2066,"src":"2164:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2040,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2049,"initialValue":{"arguments":[{"id":2044,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"2195:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2045,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"2201:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2046,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"2204:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2047,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"2207:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2042,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"2181:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3565_$","typeString":"type(library ECDSA)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:14","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3515,"src":"2181:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2050,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2223:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2051,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"2233:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2059,"nodeType":"IfStatement","src":"2219:88:14","trueBody":{"id":2058,"nodeType":"Block","src":"2240:67:14","statements":[{"errorCall":{"arguments":[{"id":2054,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2282:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2055,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"2290:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2053,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"2261:20:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2057,"nodeType":"RevertStatement","src":"2254:42:14"}]}},{"expression":{"arguments":[{"id":2061,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"2326:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2062,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"2333:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2342:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2060,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1430,1490],"referencedDeclaration":1430,"src":"2317:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"2317:31:14"}]},"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"1635:43:14","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":2067,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:14","nodeType":"FunctionDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"owner","nameLocation":"1716:5:14","nodeType":"VariableDeclaration","scope":2067,"src":"1708:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1992,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1995,"mutability":"mutable","name":"spender","nameLocation":"1739:7:14","nodeType":"VariableDeclaration","scope":2067,"src":"1731:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1994,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1997,"mutability":"mutable","name":"value","nameLocation":"1764:5:14","nodeType":"VariableDeclaration","scope":2067,"src":"1756:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:14","nodeType":"VariableDeclaration","scope":2067,"src":"1779:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"v","nameLocation":"1811:1:14","nodeType":"VariableDeclaration","scope":2067,"src":"1805:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2000,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"r","nameLocation":"1830:1:14","nodeType":"VariableDeclaration","scope":2067,"src":"1822:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"s","nameLocation":"1849:1:14","nodeType":"VariableDeclaration","scope":2067,"src":"1841:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:14"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[],"src":"1872:0:14"},"scope":2095,"src":"1683:672:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2282,2346],"body":{"id":2083,"nodeType":"Block","src":"2509:43:14","statements":[{"expression":{"arguments":[{"id":2080,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"2539:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2078,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$2095_$","typeString":"type(contract super ERC20Permit)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:14","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2346,"src":"2526:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2077,"id":2082,"nodeType":"Return","src":"2519:26:14"}]},"documentation":{"id":2068,"nodeType":"StructuredDocumentation","src":"2361:43:14","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":2084,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:14","nodeType":"FunctionDefinition","overrides":{"id":2074,"nodeType":"OverrideSpecifier","overrides":[{"id":2072,"name":"IERC20Permit","nameLocations":["2469:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2289,"src":"2469:12:14"},{"id":2073,"name":"Nonces","nameLocations":["2483:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2387,"src":"2483:6:14"}],"src":"2460:30:14"},"parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"owner","nameLocation":"2433:5:14","nodeType":"VariableDeclaration","scope":2084,"src":"2425:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:14"},"returnParameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2084,"src":"2500:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:14"},"scope":2095,"src":"2409:143:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2288],"body":{"id":2093,"nodeType":"Block","src":"2727:44:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2090,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"2744:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2089,"id":2092,"nodeType":"Return","src":"2737:27:14"}]},"documentation":{"id":2085,"nodeType":"StructuredDocumentation","src":"2558:43:14","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":2094,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:14","nodeType":"FunctionDefinition","parameters":{"id":2086,"nodeType":"ParameterList","parameters":[],"src":"2684:2:14"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2094,"src":"2718:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:14"},"scope":2095,"src":"2659:112:14","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":2096,"src":"898:1875:14","usedErrors":[899,904,909,918,923,928,1972,1979,2329,2570,2572,3228,3233,3238],"usedEvents":[841,1551,1560]}],"src":"122:2652:14"},"id":14},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Checkpoints":[8962],"ERC20":[1539],"ERC20Votes":[2227],"Votes":[777]},"id":2228,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2097,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"121:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":2099,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2228,"sourceUnit":1540,"src":"147:35:15","symbolAliases":[{"foreign":{"id":2098,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"155:5:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","file":"../../../governance/utils/Votes.sol","id":2101,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2228,"sourceUnit":778,"src":"183:58:15","symbolAliases":[{"foreign":{"id":2100,"name":"Votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"191:5:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../../utils/structs/Checkpoints.sol","id":2103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2228,"sourceUnit":8963,"src":"242:67:15","symbolAliases":[{"foreign":{"id":2102,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8962,"src":"250:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2105,"name":"ERC20","nameLocations":["1226:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1539,"src":"1226:5:15"},"id":2106,"nodeType":"InheritanceSpecifier","src":"1226:5:15"},{"baseName":{"id":2107,"name":"Votes","nameLocations":["1233:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1233:5:15"},"id":2108,"nodeType":"InheritanceSpecifier","src":"1233:5:15"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"311:882:15","text":" @dev Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting\n power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked."},"fullyImplemented":true,"id":2227,"internalFunctionIDs":{"754":1,"768":2},"linearizedBaseContracts":[2227,777,872,230,887,2387,3792,861,1539,929,2253,1617,2319],"name":"ERC20Votes","nameLocation":"1212:10:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2109,"nodeType":"StructuredDocumentation","src":"1245:100:15","text":" @dev Total supply cap has been exceeded, introducing a risk of votes overflowing."},"errorSelector":"1cb15d26","id":2115,"name":"ERC20ExceededSafeSupply","nameLocation":"1356:23:15","nodeType":"ErrorDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"increasedSupply","nameLocation":"1388:15:15","nodeType":"VariableDeclaration","scope":2115,"src":"1380:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1380:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"cap","nameLocation":"1413:3:15","nodeType":"VariableDeclaration","scope":2115,"src":"1405:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1379:38:15"},"src":"1350:68:15"},{"body":{"id":2127,"nodeType":"Block","src":"2175:41:15","statements":[{"expression":{"expression":{"arguments":[{"id":2123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2197:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2122,"name":"uint208","nodeType":"ElementaryTypeName","src":"2197:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2121,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2192:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2206:3:15","memberName":"max","nodeType":"MemberAccess","src":"2192:17:15","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2120,"id":2126,"nodeType":"Return","src":"2185:24:15"}]},"documentation":{"id":2116,"nodeType":"StructuredDocumentation","src":"1424:684:15","text":" @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n so that checkpoints can be stored in the Trace208 structure used by {Votes}. Increasing this value will not\n remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n {Votes-_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n additional logic requires it. When resolving override conflicts on this function, the minimum should be\n returned."},"id":2128,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"2122:10:15","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[],"src":"2132:2:15"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2128,"src":"2166:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2165:9:15"},"scope":2227,"src":"2113:103:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1346],"body":{"id":2181,"nodeType":"Block","src":"2440:329:15","statements":[{"expression":{"arguments":[{"id":2142,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2464:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2143,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"2470:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"2474:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2139,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2450:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2227_$","typeString":"type(contract super ERC20Votes)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2456:7:15","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"2450:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2450:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2146,"nodeType":"ExpressionStatement","src":"2450:30:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2147,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2494:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2510:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2502:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:15","typeDescriptions":{}}},"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2502:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2494:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2174,"nodeType":"IfStatement","src":"2490:226:15","trueBody":{"id":2173,"nodeType":"Block","src":"2514:202:15","statements":[{"assignments":[2154],"declarations":[{"constant":false,"id":2154,"mutability":"mutable","name":"supply","nameLocation":"2536:6:15","nodeType":"VariableDeclaration","scope":2173,"src":"2528:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2528:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2157,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2155,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"2545:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2545:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2528:30:15"},{"assignments":[2159],"declarations":[{"constant":false,"id":2159,"mutability":"mutable","name":"cap","nameLocation":"2580:3:15","nodeType":"VariableDeclaration","scope":2173,"src":"2572:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2572:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2162,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2160,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"2586:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2586:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2572:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2163,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"2616:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2164,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"2625:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2172,"nodeType":"IfStatement","src":"2612:94:15","trueBody":{"id":2171,"nodeType":"Block","src":"2630:76:15","statements":[{"errorCall":{"arguments":[{"id":2167,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"2679:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2168,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"2687:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2166,"name":"ERC20ExceededSafeSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"2655:23:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2170,"nodeType":"RevertStatement","src":"2648:43:15"}]}}]}},{"expression":{"arguments":[{"id":2176,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2746:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2177,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"2752:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"2756:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2175,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"2725:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2180,"nodeType":"ExpressionStatement","src":"2725:37:15"}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"2222:129:15","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":2182,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2365:7:15","nodeType":"FunctionDefinition","overrides":{"id":2137,"nodeType":"OverrideSpecifier","overrides":[],"src":"2431:8:15"},"parameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"from","nameLocation":"2381:4:15","nodeType":"VariableDeclaration","scope":2182,"src":"2373:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"2373:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"to","nameLocation":"2395:2:15","nodeType":"VariableDeclaration","scope":2182,"src":"2387:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2132,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2135,"mutability":"mutable","name":"value","nameLocation":"2407:5:15","nodeType":"VariableDeclaration","scope":2182,"src":"2399:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2399:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2372:41:15"},"returnParameters":{"id":2138,"nodeType":"ParameterList","parameters":[],"src":"2440:0:15"},"scope":2227,"src":"2356:413:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[776],"body":{"id":2195,"nodeType":"Block","src":"3120:42:15","statements":[{"expression":{"arguments":[{"id":2192,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3147:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2191,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3137:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3137:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2190,"id":2194,"nodeType":"Return","src":"3130:25:15"}]},"documentation":{"id":2183,"nodeType":"StructuredDocumentation","src":"2775:249:15","text":" @dev Returns the voting units of an `account`.\n WARNING: Overriding this function may compromise the internal vote accounting.\n `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change."},"id":2196,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"3038:15:15","nodeType":"FunctionDefinition","overrides":{"id":2187,"nodeType":"OverrideSpecifier","overrides":[],"src":"3093:8:15"},"parameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"account","nameLocation":"3062:7:15","nodeType":"VariableDeclaration","scope":2196,"src":"3054:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2184,"name":"address","nodeType":"ElementaryTypeName","src":"3054:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3053:17:15"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2196,"src":"3111:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3111:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3110:9:15"},"scope":2227,"src":"3029:133:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2208,"nodeType":"Block","src":"3315:48:15","statements":[{"expression":{"arguments":[{"id":2205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"3348:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2204,"name":"_numCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"3332:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint32_$","typeString":"function (address) view returns (uint32)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3332:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2203,"id":2207,"nodeType":"Return","src":"3325:31:15"}]},"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"3168:64:15","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":2209,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"3246:14:15","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"account","nameLocation":"3269:7:15","nodeType":"VariableDeclaration","scope":2209,"src":"3261:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"3261:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3260:17:15"},"returnParameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2209,"src":"3307:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2201,"name":"uint32","nodeType":"ElementaryTypeName","src":"3307:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3306:8:15"},"scope":2227,"src":"3237:126:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2225,"nodeType":"Block","src":"3553:50:15","statements":[{"expression":{"arguments":[{"id":2221,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"3583:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2222,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"3592:3:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2220,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"3570:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_Checkpoint208_$7923_memory_ptr_$","typeString":"function (address,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3570:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":2219,"id":2224,"nodeType":"Return","src":"3563:33:15"}]},"documentation":{"id":2210,"nodeType":"StructuredDocumentation","src":"3369:66:15","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":2226,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"3449:11:15","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"account","nameLocation":"3469:7:15","nodeType":"VariableDeclaration","scope":2226,"src":"3461:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"3461:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"pos","nameLocation":"3485:3:15","nodeType":"VariableDeclaration","scope":2226,"src":"3478:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2213,"name":"uint32","nodeType":"ElementaryTypeName","src":"3478:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3460:29:15"},"returnParameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2226,"src":"3519:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":2217,"nodeType":"UserDefinedTypeName","pathNode":{"id":2216,"name":"Checkpoints.Checkpoint208","nameLocations":["3519:11:15","3531:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"3519:25:15"},"referencedDeclaration":7923,"src":"3519:25:15","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"3518:34:15"},"scope":2227,"src":"3440:163:15","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2228,"src":"1194:2411:15","usedErrors":[155,281,288,899,904,909,918,923,928,2115,2329,2570,2572,3228,3233,3238,5482,7389],"usedEvents":[164,173,841,1551,1560]}],"src":"121:3485:15"},"id":15},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1617],"IERC20Metadata":[2253]},"id":2254,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2229,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2231,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2254,"sourceUnit":1618,"src":"151:37:16","symbolAliases":[{"foreign":{"id":2230,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"159:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2233,"name":"IERC20","nameLocations":["306:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"306:6:16"},"id":2234,"nodeType":"InheritanceSpecifier","src":"306:6:16"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2232,"nodeType":"StructuredDocumentation","src":"190:87:16","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2253,"linearizedBaseContracts":[2253,1617],"name":"IERC20Metadata","nameLocation":"288:14:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2235,"nodeType":"StructuredDocumentation","src":"319:54:16","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2240,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:16","nodeType":"FunctionDefinition","parameters":{"id":2236,"nodeType":"ParameterList","parameters":[],"src":"391:2:16"},"returnParameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2240,"src":"417:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2237,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:16"},"scope":2253,"src":"378:54:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"438:56:16","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2246,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:16","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[],"src":"514:2:16"},"returnParameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2246,"src":"540:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2243,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:16"},"scope":2253,"src":"499:56:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2247,"nodeType":"StructuredDocumentation","src":"561:65:16","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2252,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:16","nodeType":"FunctionDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[],"src":"648:2:16"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2252,"src":"674:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2249,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:16"},"scope":2253,"src":"631:50:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2254,"src":"278:405:16","usedErrors":[],"usedEvents":[1551,1560]}],"src":"125:559:16"},"id":16},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2289]},"id":2290,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2255,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"149:1965:17","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":2289,"linearizedBaseContracts":[2289],"name":"IERC20Permit","nameLocation":"2125:12:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2257,"nodeType":"StructuredDocumentation","src":"2144:850:17","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":2274,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:17","nodeType":"FunctionDefinition","parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"owner","nameLocation":"3032:5:17","nodeType":"VariableDeclaration","scope":2274,"src":"3024:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"spender","nameLocation":"3055:7:17","nodeType":"VariableDeclaration","scope":2274,"src":"3047:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2263,"mutability":"mutable","name":"value","nameLocation":"3080:5:17","nodeType":"VariableDeclaration","scope":2274,"src":"3072:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:17","nodeType":"VariableDeclaration","scope":2274,"src":"3095:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2267,"mutability":"mutable","name":"v","nameLocation":"3127:1:17","nodeType":"VariableDeclaration","scope":2274,"src":"3121:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2266,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"r","nameLocation":"3146:1:17","nodeType":"VariableDeclaration","scope":2274,"src":"3138:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"s","nameLocation":"3165:1:17","nodeType":"VariableDeclaration","scope":2274,"src":"3157:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:17"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[],"src":"3181:0:17"},"scope":2289,"src":"2999:183:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"3188:294:17","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2282,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:17","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"owner","nameLocation":"3511:5:17","nodeType":"VariableDeclaration","scope":2282,"src":"3503:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:17"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2282,"src":"3541:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:17"},"scope":2289,"src":"3487:63:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2283,"nodeType":"StructuredDocumentation","src":"3556:128:17","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2288,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:17","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[],"src":"3767:2:17"},"returnParameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2288,"src":"3793:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:17"},"scope":2289,"src":"3742:60:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2290,"src":"2115:1689:17","usedErrors":[],"usedEvents":[]}],"src":"123:3682:17"},"id":17},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2319]},"id":2320,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2291,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"127:496:18","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2319,"linearizedBaseContracts":[2319],"name":"Context","nameLocation":"642:7:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":2300,"nodeType":"Block","src":"718:34:18","statements":[{"expression":{"expression":{"id":2297,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:18","memberName":"sender","nodeType":"MemberAccess","src":"735:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2296,"id":2299,"nodeType":"Return","src":"728:17:18"}]},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:18","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[],"src":"675:2:18"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"709:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:18"},"scope":2319,"src":"656:96:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2309,"nodeType":"Block","src":"825:32:18","statements":[{"expression":{"expression":{"id":2306,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:18","memberName":"data","nodeType":"MemberAccess","src":"842:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2305,"id":2308,"nodeType":"Return","src":"835:15:18"}]},"id":2310,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:18","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[],"src":"775:2:18"},"returnParameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2310,"src":"809:14:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2303,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:18"},"scope":2319,"src":"758:99:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2317,"nodeType":"Block","src":"935:25:18","statements":[{"expression":{"hexValue":"30","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2314,"id":2316,"nodeType":"Return","src":"945:8:18"}]},"id":2318,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:18","nodeType":"FunctionDefinition","parameters":{"id":2311,"nodeType":"ParameterList","parameters":[],"src":"892:2:18"},"returnParameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"926:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2312,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:18"},"scope":2319,"src":"863:97:18","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2320,"src":"624:338:18","usedErrors":[],"usedEvents":[]}],"src":"101:862:18"},"id":18},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2387]},"id":2388,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2321,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:19"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"125:83:19","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2387,"linearizedBaseContracts":[2387],"name":"Nonces","nameLocation":"227:6:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"240:90:19","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":2329,"name":"InvalidAccountNonce","nameLocation":"341:19:19","nodeType":"ErrorDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"account","nameLocation":"369:7:19","nodeType":"VariableDeclaration","scope":2329,"src":"361:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2324,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:19","nodeType":"VariableDeclaration","scope":2329,"src":"378:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:19"},"src":"335:65:19"},{"constant":false,"id":2333,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:19","nodeType":"VariableDeclaration","scope":2387,"src":"406:51:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2332,"keyName":"account","keyNameLocation":"422:7:19","keyType":{"id":2330,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2345,"nodeType":"Block","src":"607:38:19","statements":[{"expression":{"baseExpression":{"id":2341,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"624:7:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2343,"indexExpression":{"id":2342,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"632:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2340,"id":2344,"nodeType":"Return","src":"617:21:19"}]},"documentation":{"id":2334,"nodeType":"StructuredDocumentation","src":"464:69:19","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:19","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"owner","nameLocation":"562:5:19","nodeType":"VariableDeclaration","scope":2346,"src":"554:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2335,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:19"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2346,"src":"598:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:19"},"scope":2387,"src":"538:107:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2360,"nodeType":"Block","src":"828:326:19","statements":[{"id":2359,"nodeType":"UncheckedBlock","src":"1031:117:19","statements":[{"expression":{"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:19","subExpression":{"baseExpression":{"id":2354,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"1121:7:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2356,"indexExpression":{"id":2355,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1129:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2353,"id":2358,"nodeType":"Return","src":"1114:23:19"}]}]},"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"651:103:19","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2361,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:19","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"owner","nameLocation":"786:5:19","nodeType":"VariableDeclaration","scope":2361,"src":"778:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:19"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2361,"src":"819:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:19"},"scope":2387,"src":"759:395:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2385,"nodeType":"Block","src":"1338:149:19","statements":[{"assignments":[2370],"declarations":[{"constant":false,"id":2370,"mutability":"mutable","name":"current","nameLocation":"1356:7:19","nodeType":"VariableDeclaration","scope":2385,"src":"1348:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2374,"initialValue":{"arguments":[{"id":2372,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"1376:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2371,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"1366:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2375,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"1396:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2376,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"1405:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2384,"nodeType":"IfStatement","src":"1392:89:19","trueBody":{"id":2383,"nodeType":"Block","src":"1414:67:19","statements":[{"errorCall":{"arguments":[{"id":2379,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"1455:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2380,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"1462:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2378,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"1435:19:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2382,"nodeType":"RevertStatement","src":"1428:42:19"}]}}]},"documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"1160:100:19","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2386,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:19","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"owner","nameLocation":"1299:5:19","nodeType":"VariableDeclaration","scope":2386,"src":"1291:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:19","nodeType":"VariableDeclaration","scope":2386,"src":"1306:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:19"},"returnParameters":{"id":2368,"nodeType":"ParameterList","parameters":[],"src":"1338:0:19"},"scope":2387,"src":"1265:222:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2388,"src":"209:1280:19","usedErrors":[2329],"usedEvents":[]}],"src":"99:1391:19"},"id":19},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2439]},"id":2440,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2389,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"125:489:20","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2439,"linearizedBaseContracts":[2439],"name":"Panic","nameLocation":"665:5:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"677:36:20","text":"@dev generic / unspecified error"},"id":2394,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:20","nodeType":"VariableDeclaration","scope":2439,"src":"718:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2395,"nodeType":"StructuredDocumentation","src":"764:37:20","text":"@dev used by the assert() builtin"},"id":2398,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:20","nodeType":"VariableDeclaration","scope":2439,"src":"806:39:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2399,"nodeType":"StructuredDocumentation","src":"851:41:20","text":"@dev arithmetic underflow or overflow"},"id":2402,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:20","nodeType":"VariableDeclaration","scope":2439,"src":"897:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:20","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"950:35:20","text":"@dev division or modulo by zero"},"id":2406,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:20","nodeType":"VariableDeclaration","scope":2439,"src":"990:49:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:20","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"1045:30:20","text":"@dev enum conversion error"},"id":2410,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:20","nodeType":"VariableDeclaration","scope":2439,"src":"1080:54:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:20","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"1140:36:20","text":"@dev invalid encoding in storage"},"id":2414,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:20","nodeType":"VariableDeclaration","scope":2439,"src":"1181:55:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:20","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"1242:24:20","text":"@dev empty array pop"},"id":2418,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:20","nodeType":"VariableDeclaration","scope":2439,"src":"1271:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:20","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"1325:35:20","text":"@dev array out of bounds access"},"id":2422,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:20","nodeType":"VariableDeclaration","scope":2439,"src":"1365:52:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:20","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2423,"nodeType":"StructuredDocumentation","src":"1423:65:20","text":"@dev resource error (too large allocation or too large array)"},"id":2426,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:20","nodeType":"VariableDeclaration","scope":2439,"src":"1493:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:20","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"1546:42:20","text":"@dev calling invalid internal function"},"id":2430,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:20","nodeType":"VariableDeclaration","scope":2439,"src":"1593:58:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:20","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2437,"nodeType":"Block","src":"1819:151:20","statements":[{"AST":{"nativeSrc":"1854:110:20","nodeType":"YulBlock","src":"1854:110:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:20","nodeType":"YulLiteral","src":"1875:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:20","nodeType":"YulLiteral","src":"1881:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:20","nodeType":"YulIdentifier","src":"1868:6:20"},"nativeSrc":"1868:24:20","nodeType":"YulFunctionCall","src":"1868:24:20"},"nativeSrc":"1868:24:20","nodeType":"YulExpressionStatement","src":"1868:24:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:20","nodeType":"YulLiteral","src":"1912:4:20","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:20","nodeType":"YulIdentifier","src":"1918:4:20"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:20","nodeType":"YulIdentifier","src":"1905:6:20"},"nativeSrc":"1905:18:20","nodeType":"YulFunctionCall","src":"1905:18:20"},"nativeSrc":"1905:18:20","nodeType":"YulExpressionStatement","src":"1905:18:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:20","nodeType":"YulLiteral","src":"1943:4:20","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:20","nodeType":"YulLiteral","src":"1949:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:20","nodeType":"YulIdentifier","src":"1936:6:20"},"nativeSrc":"1936:18:20","nodeType":"YulFunctionCall","src":"1936:18:20"},"nativeSrc":"1936:18:20","nodeType":"YulExpressionStatement","src":"1936:18:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":2433,"isOffset":false,"isSlot":false,"src":"1918:4:20","valueSize":1}],"flags":["memory-safe"],"id":2436,"nodeType":"InlineAssembly","src":"1829:135:20"}]},"documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"1658:113:20","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2438,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:20","nodeType":"FunctionDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"code","nameLocation":"1799:4:20","nodeType":"VariableDeclaration","scope":2438,"src":"1791:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:20"},"returnParameters":{"id":2435,"nodeType":"ParameterList","parameters":[],"src":"1819:0:20"},"scope":2439,"src":"1776:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2440,"src":"657:1315:20","usedErrors":[],"usedEvents":[]}],"src":"99:1874:20"},"id":20},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[2319],"Pausable":[2556]},"id":2557,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2441,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2557,"sourceUnit":2320,"src":"128:45:21","symbolAliases":[{"foreign":{"id":2442,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"136:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2445,"name":"Context","nameLocations":["645:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":2319,"src":"645:7:21"},"id":2446,"nodeType":"InheritanceSpecifier","src":"645:7:21"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2444,"nodeType":"StructuredDocumentation","src":"175:439:21","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2556,"linearizedBaseContracts":[2556,2319],"name":"Pausable","nameLocation":"633:8:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2448,"mutability":"mutable","name":"_paused","nameLocation":"672:7:21","nodeType":"VariableDeclaration","scope":2556,"src":"659:20:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2447,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"686:73:21","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2453,"name":"Paused","nameLocation":"770:6:21","nodeType":"EventDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:21","nodeType":"VariableDeclaration","scope":2453,"src":"777:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2450,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:21"},"src":"764:30:21"},{"anonymous":false,"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"800:70:21","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2458,"name":"Unpaused","nameLocation":"881:8:21","nodeType":"EventDefinition","parameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:21","nodeType":"VariableDeclaration","scope":2458,"src":"890:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2455,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:21"},"src":"875:32:21"},{"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"913:76:21","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2461,"name":"EnforcedPause","nameLocation":"1000:13:21","nodeType":"ErrorDefinition","parameters":{"id":2460,"nodeType":"ParameterList","parameters":[],"src":"1013:2:21"},"src":"994:22:21"},{"documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"1022:80:21","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2464,"name":"ExpectedPause","nameLocation":"1113:13:21","nodeType":"ErrorDefinition","parameters":{"id":2463,"nodeType":"ParameterList","parameters":[],"src":"1126:2:21"},"src":"1107:22:21"},{"body":{"id":2472,"nodeType":"Block","src":"1221:32:21","statements":[{"expression":{"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2468,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"1231:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2471,"nodeType":"ExpressionStatement","src":"1231:15:21"}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"1135:67:21","text":" @dev Initializes the contract in unpaused state."},"id":2473,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[],"src":"1218:2:21"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[],"src":"1221:0:21"},"scope":2556,"src":"1207:46:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2480,"nodeType":"Block","src":"1464:47:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2476,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"1474:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2478,"nodeType":"ExpressionStatement","src":"1474:19:21"},{"id":2479,"nodeType":"PlaceholderStatement","src":"1503:1:21"}]},"documentation":{"id":2474,"nodeType":"StructuredDocumentation","src":"1259:175:21","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2481,"name":"whenNotPaused","nameLocation":"1448:13:21","nodeType":"ModifierDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[],"src":"1461:2:21"},"src":"1439:72:21","virtual":false,"visibility":"internal"},{"body":{"id":2488,"nodeType":"Block","src":"1711:44:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2484,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"1721:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2486,"nodeType":"ExpressionStatement","src":"1721:16:21"},{"id":2487,"nodeType":"PlaceholderStatement","src":"1747:1:21"}]},"documentation":{"id":2482,"nodeType":"StructuredDocumentation","src":"1517:167:21","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2489,"name":"whenPaused","nameLocation":"1698:10:21","nodeType":"ModifierDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[],"src":"1708:2:21"},"src":"1689:66:21","virtual":false,"visibility":"internal"},{"body":{"id":2497,"nodeType":"Block","src":"1903:31:21","statements":[{"expression":{"id":2495,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"1920:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2494,"id":2496,"nodeType":"Return","src":"1913:14:21"}]},"documentation":{"id":2490,"nodeType":"StructuredDocumentation","src":"1761:84:21","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2498,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:21","nodeType":"FunctionDefinition","parameters":{"id":2491,"nodeType":"ParameterList","parameters":[],"src":"1865:2:21"},"returnParameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2498,"src":"1897:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2492,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:21"},"scope":2556,"src":"1850:84:21","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2509,"nodeType":"Block","src":"2053:77:21","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2502,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"2067:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2508,"nodeType":"IfStatement","src":"2063:61:21","trueBody":{"id":2507,"nodeType":"Block","src":"2077:47:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2504,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"2098:13:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2506,"nodeType":"RevertStatement","src":"2091:22:21"}]}}]},"documentation":{"id":2499,"nodeType":"StructuredDocumentation","src":"1940:57:21","text":" @dev Throws if the contract is paused."},"id":2510,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:21","nodeType":"FunctionDefinition","parameters":{"id":2500,"nodeType":"ParameterList","parameters":[],"src":"2028:2:21"},"returnParameters":{"id":2501,"nodeType":"ParameterList","parameters":[],"src":"2053:0:21"},"scope":2556,"src":"2002:128:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2522,"nodeType":"Block","src":"2250:78:21","statements":[{"condition":{"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:21","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2514,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"2265:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2521,"nodeType":"IfStatement","src":"2260:62:21","trueBody":{"id":2520,"nodeType":"Block","src":"2275:47:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2517,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"2296:13:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2519,"nodeType":"RevertStatement","src":"2289:22:21"}]}}]},"documentation":{"id":2511,"nodeType":"StructuredDocumentation","src":"2136:61:21","text":" @dev Throws if the contract is not paused."},"id":2523,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:21","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[],"src":"2225:2:21"},"returnParameters":{"id":2513,"nodeType":"ParameterList","parameters":[],"src":"2250:0:21"},"scope":2556,"src":"2202:126:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2538,"nodeType":"Block","src":"2512:66:21","statements":[{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2529,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"2522:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2532,"nodeType":"ExpressionStatement","src":"2522:14:21"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2534,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"2558:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2533,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"2551:6:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2537,"nodeType":"EmitStatement","src":"2546:25:21"}]},"documentation":{"id":2524,"nodeType":"StructuredDocumentation","src":"2334:124:21","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2539,"implemented":true,"kind":"function","modifiers":[{"id":2527,"kind":"modifierInvocation","modifierName":{"id":2526,"name":"whenNotPaused","nameLocations":["2498:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":2481,"src":"2498:13:21"},"nodeType":"ModifierInvocation","src":"2498:13:21"}],"name":"_pause","nameLocation":"2472:6:21","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[],"src":"2478:2:21"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[],"src":"2512:0:21"},"scope":2556,"src":"2463:115:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2554,"nodeType":"Block","src":"2758:69:21","statements":[{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2545,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"2768:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2548,"nodeType":"ExpressionStatement","src":"2768:15:21"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2550,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"2807:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2549,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"2798:8:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2553,"nodeType":"EmitStatement","src":"2793:27:21"}]},"documentation":{"id":2540,"nodeType":"StructuredDocumentation","src":"2584:121:21","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2555,"implemented":true,"kind":"function","modifiers":[{"id":2543,"kind":"modifierInvocation","modifierName":{"id":2542,"name":"whenPaused","nameLocations":["2747:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":2489,"src":"2747:10:21"},"nodeType":"ModifierInvocation","src":"2747:10:21"}],"name":"_unpause","nameLocation":"2719:8:21","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[],"src":"2727:2:21"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[],"src":"2758:0:21"},"scope":2556,"src":"2710:117:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2557,"src":"615:2214:21","usedErrors":[2461,2464],"usedEvents":[2453,2458]}],"src":"102:2728:21"},"id":21},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2562],"ShortStrings":[2773],"StorageSlot":[2897]},"id":2774,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2558,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2774,"sourceUnit":2898,"src":"132:46:22","symbolAliases":[{"foreign":{"id":2559,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"140:11:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2562,"name":"ShortString","nameLocation":"353:11:22","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:22","underlyingType":{"id":2561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2563,"nodeType":"StructuredDocumentation","src":"378:876:22","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2773,"linearizedBaseContracts":[2773],"name":"ShortStrings","nameLocation":"1263:12:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2566,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:22","nodeType":"VariableDeclaration","scope":2773,"src":"1345:111:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2570,"name":"StringTooLong","nameLocation":"1469:13:22","nodeType":"ErrorDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"str","nameLocation":"1490:3:22","nodeType":"VariableDeclaration","scope":2570,"src":"1483:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2567,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:22"},"src":"1463:32:22"},{"errorSelector":"b3512b0c","id":2572,"name":"InvalidShortString","nameLocation":"1506:18:22","nodeType":"ErrorDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[],"src":"1524:2:22"},"src":"1500:27:22"},{"body":{"id":2615,"nodeType":"Block","src":"1786:208:22","statements":[{"assignments":[2582],"declarations":[{"constant":false,"id":2582,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:22","nodeType":"VariableDeclaration","scope":2615,"src":"1796:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2581,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2587,"initialValue":{"arguments":[{"id":2585,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"1822:3:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2583,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:22","typeDescriptions":{}}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2588,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"1840:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:22","memberName":"length","nodeType":"MemberAccess","src":"1840:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:22","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2597,"nodeType":"IfStatement","src":"1836:72:22","trueBody":{"id":2596,"nodeType":"Block","src":"1858:50:22","statements":[{"errorCall":{"arguments":[{"id":2593,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"1893:3:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2592,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"1879:13:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2595,"nodeType":"RevertStatement","src":"1872:25:22"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2606,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"1965:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:22","typeDescriptions":{}}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2602,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:22","typeDescriptions":{}}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2609,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"1974:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:22","memberName":"length","nodeType":"MemberAccess","src":"1974:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:22","typeDescriptions":{}}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2598,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"1924:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2562_$","typeString":"type(ShortString)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:22","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:22","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2562_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"functionReturnParameters":2580,"id":2614,"nodeType":"Return","src":"1917:70:22"}]},"documentation":{"id":2573,"nodeType":"StructuredDocumentation","src":"1533:170:22","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2616,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:22","nodeType":"FunctionDefinition","parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"str","nameLocation":"1745:3:22","nodeType":"VariableDeclaration","scope":2616,"src":"1731:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2574,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:22"},"returnParameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2616,"src":"1773:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"},"typeName":{"id":2578,"nodeType":"UserDefinedTypeName","pathNode":{"id":2577,"name":"ShortString","nameLocations":["1773:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2562,"src":"1773:11:22"},"referencedDeclaration":2562,"src":"1773:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:22"},"scope":2773,"src":"1708:286:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2641,"nodeType":"Block","src":"2152:304:22","statements":[{"assignments":[2626],"declarations":[{"constant":false,"id":2626,"mutability":"mutable","name":"len","nameLocation":"2170:3:22","nodeType":"VariableDeclaration","scope":2641,"src":"2162:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2630,"initialValue":{"arguments":[{"id":2628,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"2187:4:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}],"id":2627,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"2176:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2562_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:22"},{"assignments":[2632],"declarations":[{"constant":false,"id":2632,"mutability":"mutable","name":"str","nameLocation":"2294:3:22","nodeType":"VariableDeclaration","scope":2641,"src":"2280:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2631,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2637,"initialValue":{"arguments":[{"hexValue":"3332","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2633,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:22"},{"AST":{"nativeSrc":"2349:81:22","nodeType":"YulBlock","src":"2349:81:22","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:22","nodeType":"YulIdentifier","src":"2370:3:22"},{"name":"len","nativeSrc":"2375:3:22","nodeType":"YulIdentifier","src":"2375:3:22"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:22","nodeType":"YulIdentifier","src":"2363:6:22"},"nativeSrc":"2363:16:22","nodeType":"YulFunctionCall","src":"2363:16:22"},"nativeSrc":"2363:16:22","nodeType":"YulExpressionStatement","src":"2363:16:22"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:22","nodeType":"YulIdentifier","src":"2403:3:22"},{"kind":"number","nativeSrc":"2408:4:22","nodeType":"YulLiteral","src":"2408:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:22","nodeType":"YulIdentifier","src":"2399:3:22"},"nativeSrc":"2399:14:22","nodeType":"YulFunctionCall","src":"2399:14:22"},{"name":"sstr","nativeSrc":"2415:4:22","nodeType":"YulIdentifier","src":"2415:4:22"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:22","nodeType":"YulIdentifier","src":"2392:6:22"},"nativeSrc":"2392:28:22","nodeType":"YulFunctionCall","src":"2392:28:22"},"nativeSrc":"2392:28:22","nodeType":"YulExpressionStatement","src":"2392:28:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":2626,"isOffset":false,"isSlot":false,"src":"2375:3:22","valueSize":1},{"declaration":2620,"isOffset":false,"isSlot":false,"src":"2415:4:22","valueSize":1},{"declaration":2632,"isOffset":false,"isSlot":false,"src":"2370:3:22","valueSize":1},{"declaration":2632,"isOffset":false,"isSlot":false,"src":"2403:3:22","valueSize":1}],"flags":["memory-safe"],"id":2638,"nodeType":"InlineAssembly","src":"2324:106:22"},{"expression":{"id":2639,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"2446:3:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2624,"id":2640,"nodeType":"Return","src":"2439:10:22"}]},"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"2000:73:22","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:22","nodeType":"FunctionDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:22","nodeType":"VariableDeclaration","scope":2642,"src":"2096:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"},"typeName":{"id":2619,"nodeType":"UserDefinedTypeName","pathNode":{"id":2618,"name":"ShortString","nameLocations":["2096:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2562,"src":"2096:11:22"},"referencedDeclaration":2562,"src":"2096:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:22"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2642,"src":"2137:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2622,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:22"},"scope":2773,"src":"2078:378:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2673,"nodeType":"Block","src":"2598:175:22","statements":[{"assignments":[2652],"declarations":[{"constant":false,"id":2652,"mutability":"mutable","name":"result","nameLocation":"2616:6:22","nodeType":"VariableDeclaration","scope":2673,"src":"2608:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2662,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2657,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"2652:4:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}],"expression":{"id":2655,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"2633:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2562_$","typeString":"type(ShortString)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:22","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:22","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2562_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:22","typeDescriptions":{}}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"2679:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:22","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2670,"nodeType":"IfStatement","src":"2675:69:22","trueBody":{"id":2669,"nodeType":"Block","src":"2692:52:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2666,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"2713:18:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2668,"nodeType":"RevertStatement","src":"2706:27:22"}]}},{"expression":{"id":2671,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"2760:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2650,"id":2672,"nodeType":"Return","src":"2753:13:22"}]},"documentation":{"id":2643,"nodeType":"StructuredDocumentation","src":"2462:61:22","text":" @dev Return the length of a `ShortString`."},"id":2674,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:22","nodeType":"FunctionDefinition","parameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:22","nodeType":"VariableDeclaration","scope":2674,"src":"2548:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"},"typeName":{"id":2645,"nodeType":"UserDefinedTypeName","pathNode":{"id":2644,"name":"ShortString","nameLocations":["2548:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2562,"src":"2548:11:22"},"referencedDeclaration":2562,"src":"2548:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:22"},"returnParameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2674,"src":"2589:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:22"},"scope":2773,"src":"2528:245:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2713,"nodeType":"Block","src":"2996:231:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"3016:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2685,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:22","typeDescriptions":{}}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:22","memberName":"length","nodeType":"MemberAccess","src":"3010:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2711,"nodeType":"Block","src":"3094:127:22","statements":[{"expression":{"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2700,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"3134:5:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2697,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"3108:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2897_$","typeString":"type(library StorageSlot)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:22","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2874,"src":"3108:25:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2794_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2794_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:22","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"3108:38:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"3149:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2705,"nodeType":"ExpressionStatement","src":"3108:46:22"},{"expression":{"arguments":[{"id":2708,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"3192:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2706,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"3175:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2562_$","typeString":"type(ShortString)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:22","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:22","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2562_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"functionReturnParameters":2684,"id":2710,"nodeType":"Return","src":"3168:42:22"}]},"id":2712,"nodeType":"IfStatement","src":"3006:215:22","trueBody":{"id":2696,"nodeType":"Block","src":"3036:52:22","statements":[{"expression":{"arguments":[{"id":2693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"3071:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2692,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"3057:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2562_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"functionReturnParameters":2684,"id":2695,"nodeType":"Return","src":"3050:27:22"}]}}]},"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"2779:103:22","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2714,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:22","nodeType":"FunctionDefinition","parameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"mutability":"mutable","name":"value","nameLocation":"2936:5:22","nodeType":"VariableDeclaration","scope":2714,"src":"2922:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2676,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2679,"mutability":"mutable","name":"store","nameLocation":"2958:5:22","nodeType":"VariableDeclaration","scope":2714,"src":"2943:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2678,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:22"},"returnParameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2714,"src":"2983:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"},"typeName":{"id":2682,"nodeType":"UserDefinedTypeName","pathNode":{"id":2681,"name":"ShortString","nameLocations":["2983:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2562,"src":"2983:11:22"},"referencedDeclaration":2562,"src":"2983:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:22"},"scope":2773,"src":"2887:340:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2740,"nodeType":"Block","src":"3467:158:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"3500:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}],"expression":{"id":2725,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"3481:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2562_$","typeString":"type(ShortString)"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:22","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:22","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2562_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2729,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"3510:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2738,"nodeType":"Block","src":"3582:37:22","statements":[{"expression":{"id":2736,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"3603:5:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2724,"id":2737,"nodeType":"Return","src":"3596:12:22"}]},"id":2739,"nodeType":"IfStatement","src":"3477:142:22","trueBody":{"id":2735,"nodeType":"Block","src":"3529:47:22","statements":[{"expression":{"arguments":[{"id":2732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"3559:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}],"id":2731,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"3550:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2562_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2724,"id":2734,"nodeType":"Return","src":"3543:22:22"}]}}]},"documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"3233:120:22","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2741,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:22","nodeType":"FunctionDefinition","parameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"value","nameLocation":"3400:5:22","nodeType":"VariableDeclaration","scope":2741,"src":"3388:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"},"typeName":{"id":2717,"nodeType":"UserDefinedTypeName","pathNode":{"id":2716,"name":"ShortString","nameLocations":["3388:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2562,"src":"3388:11:22"},"referencedDeclaration":2562,"src":"3388:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2720,"mutability":"mutable","name":"store","nameLocation":"3422:5:22","nodeType":"VariableDeclaration","scope":2741,"src":"3407:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2719,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:22"},"returnParameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2741,"src":"3452:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2722,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:22"},"scope":2773,"src":"3358:267:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2771,"nodeType":"Block","src":"4105:174:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"4138:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}],"expression":{"id":2752,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"4119:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2562_$","typeString":"type(ShortString)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:22","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:22","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2562_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2756,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"4148:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2769,"nodeType":"Block","src":"4222:51:22","statements":[{"expression":{"expression":{"arguments":[{"id":2765,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"4249:5:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2763,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:22","typeDescriptions":{}}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:22","memberName":"length","nodeType":"MemberAccess","src":"4243:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2751,"id":2768,"nodeType":"Return","src":"4236:26:22"}]},"id":2770,"nodeType":"IfStatement","src":"4115:158:22","trueBody":{"id":2762,"nodeType":"Block","src":"4167:49:22","statements":[{"expression":{"arguments":[{"id":2759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"4199:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}],"id":2758,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"4188:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2562_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2751,"id":2761,"nodeType":"Return","src":"4181:24:22"}]}}]},"documentation":{"id":2742,"nodeType":"StructuredDocumentation","src":"3631:364:22","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2772,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:22","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"value","nameLocation":"4044:5:22","nodeType":"VariableDeclaration","scope":2772,"src":"4032:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"},"typeName":{"id":2744,"nodeType":"UserDefinedTypeName","pathNode":{"id":2743,"name":"ShortString","nameLocations":["4032:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2562,"src":"4032:11:22"},"referencedDeclaration":2562,"src":"4032:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"store","nameLocation":"4066:5:22","nodeType":"VariableDeclaration","scope":2772,"src":"4051:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2746,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:22"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2772,"src":"4096:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:22"},"scope":2773,"src":"4000:279:22","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2774,"src":"1255:3026:22","usedErrors":[2570,2572],"usedEvents":[]}],"src":"106:4176:22"},"id":22},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2897]},"id":2898,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2775,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"219:1187:23","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2897,"linearizedBaseContracts":[2897],"name":"StorageSlot","nameLocation":"1415:11:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2779,"members":[{"constant":false,"id":2778,"mutability":"mutable","name":"value","nameLocation":"1470:5:23","nodeType":"VariableDeclaration","scope":2779,"src":"1462:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:23","nodeType":"StructDefinition","scope":2897,"src":"1433:49:23","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2782,"members":[{"constant":false,"id":2781,"mutability":"mutable","name":"value","nameLocation":"1522:5:23","nodeType":"VariableDeclaration","scope":2782,"src":"1517:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2780,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:23","nodeType":"StructDefinition","scope":2897,"src":"1488:46:23","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2785,"members":[{"constant":false,"id":2784,"mutability":"mutable","name":"value","nameLocation":"1577:5:23","nodeType":"VariableDeclaration","scope":2785,"src":"1569:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:23","nodeType":"StructDefinition","scope":2897,"src":"1540:49:23","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2788,"members":[{"constant":false,"id":2787,"mutability":"mutable","name":"value","nameLocation":"1632:5:23","nodeType":"VariableDeclaration","scope":2788,"src":"1624:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:23","nodeType":"StructDefinition","scope":2897,"src":"1595:49:23","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2791,"members":[{"constant":false,"id":2790,"mutability":"mutable","name":"value","nameLocation":"1685:5:23","nodeType":"VariableDeclaration","scope":2791,"src":"1678:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2789,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:23","nodeType":"StructDefinition","scope":2897,"src":"1650:47:23","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2794,"members":[{"constant":false,"id":2793,"mutability":"mutable","name":"value","nameLocation":"1738:5:23","nodeType":"VariableDeclaration","scope":2794,"src":"1731:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2792,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:23","nodeType":"StructDefinition","scope":2897,"src":"1703:47:23","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2797,"members":[{"constant":false,"id":2796,"mutability":"mutable","name":"value","nameLocation":"1789:5:23","nodeType":"VariableDeclaration","scope":2797,"src":"1783:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2795,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:23","nodeType":"StructDefinition","scope":2897,"src":"1756:45:23","visibility":"public"},{"body":{"id":2807,"nodeType":"Block","src":"1983:79:23","statements":[{"AST":{"nativeSrc":"2018:38:23","nodeType":"YulBlock","src":"2018:38:23","statements":[{"nativeSrc":"2032:14:23","nodeType":"YulAssignment","src":"2032:14:23","value":{"name":"slot","nativeSrc":"2042:4:23","nodeType":"YulIdentifier","src":"2042:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:23","nodeType":"YulIdentifier","src":"2032:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2804,"isOffset":false,"isSlot":true,"src":"2032:6:23","suffix":"slot","valueSize":1},{"declaration":2800,"isOffset":false,"isSlot":false,"src":"2042:4:23","valueSize":1}],"flags":["memory-safe"],"id":2806,"nodeType":"InlineAssembly","src":"1993:63:23"}]},"documentation":{"id":2798,"nodeType":"StructuredDocumentation","src":"1807:87:23","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:23","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"slot","nameLocation":"1931:4:23","nodeType":"VariableDeclaration","scope":2808,"src":"1923:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:23"},"returnParameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"r","nameLocation":"1980:1:23","nodeType":"VariableDeclaration","scope":2808,"src":"1960:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2779_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2803,"nodeType":"UserDefinedTypeName","pathNode":{"id":2802,"name":"AddressSlot","nameLocations":["1960:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2779,"src":"1960:11:23"},"referencedDeclaration":2779,"src":"1960:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2779_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:23"},"scope":2897,"src":"1899:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2818,"nodeType":"Block","src":"2243:79:23","statements":[{"AST":{"nativeSrc":"2278:38:23","nodeType":"YulBlock","src":"2278:38:23","statements":[{"nativeSrc":"2292:14:23","nodeType":"YulAssignment","src":"2292:14:23","value":{"name":"slot","nativeSrc":"2302:4:23","nodeType":"YulIdentifier","src":"2302:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:23","nodeType":"YulIdentifier","src":"2292:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2815,"isOffset":false,"isSlot":true,"src":"2292:6:23","suffix":"slot","valueSize":1},{"declaration":2811,"isOffset":false,"isSlot":false,"src":"2302:4:23","valueSize":1}],"flags":["memory-safe"],"id":2817,"nodeType":"InlineAssembly","src":"2253:63:23"}]},"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"2068:86:23","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2819,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:23","nodeType":"FunctionDefinition","parameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"slot","nameLocation":"2191:4:23","nodeType":"VariableDeclaration","scope":2819,"src":"2183:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:23"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"r","nameLocation":"2240:1:23","nodeType":"VariableDeclaration","scope":2819,"src":"2220:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2782_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2814,"nodeType":"UserDefinedTypeName","pathNode":{"id":2813,"name":"BooleanSlot","nameLocations":["2220:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2782,"src":"2220:11:23"},"referencedDeclaration":2782,"src":"2220:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2782_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:23"},"scope":2897,"src":"2159:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2829,"nodeType":"Block","src":"2503:79:23","statements":[{"AST":{"nativeSrc":"2538:38:23","nodeType":"YulBlock","src":"2538:38:23","statements":[{"nativeSrc":"2552:14:23","nodeType":"YulAssignment","src":"2552:14:23","value":{"name":"slot","nativeSrc":"2562:4:23","nodeType":"YulIdentifier","src":"2562:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:23","nodeType":"YulIdentifier","src":"2552:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2826,"isOffset":false,"isSlot":true,"src":"2552:6:23","suffix":"slot","valueSize":1},{"declaration":2822,"isOffset":false,"isSlot":false,"src":"2562:4:23","valueSize":1}],"flags":["memory-safe"],"id":2828,"nodeType":"InlineAssembly","src":"2513:63:23"}]},"documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"2328:86:23","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:23","nodeType":"FunctionDefinition","parameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"slot","nameLocation":"2451:4:23","nodeType":"VariableDeclaration","scope":2830,"src":"2443:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:23"},"returnParameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"r","nameLocation":"2500:1:23","nodeType":"VariableDeclaration","scope":2830,"src":"2480:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2785_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2825,"nodeType":"UserDefinedTypeName","pathNode":{"id":2824,"name":"Bytes32Slot","nameLocations":["2480:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2785,"src":"2480:11:23"},"referencedDeclaration":2785,"src":"2480:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2785_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:23"},"scope":2897,"src":"2419:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2840,"nodeType":"Block","src":"2763:79:23","statements":[{"AST":{"nativeSrc":"2798:38:23","nodeType":"YulBlock","src":"2798:38:23","statements":[{"nativeSrc":"2812:14:23","nodeType":"YulAssignment","src":"2812:14:23","value":{"name":"slot","nativeSrc":"2822:4:23","nodeType":"YulIdentifier","src":"2822:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:23","nodeType":"YulIdentifier","src":"2812:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2837,"isOffset":false,"isSlot":true,"src":"2812:6:23","suffix":"slot","valueSize":1},{"declaration":2833,"isOffset":false,"isSlot":false,"src":"2822:4:23","valueSize":1}],"flags":["memory-safe"],"id":2839,"nodeType":"InlineAssembly","src":"2773:63:23"}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"2588:86:23","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2841,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:23","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"slot","nameLocation":"2711:4:23","nodeType":"VariableDeclaration","scope":2841,"src":"2703:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:23"},"returnParameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"r","nameLocation":"2760:1:23","nodeType":"VariableDeclaration","scope":2841,"src":"2740:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2788_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2836,"nodeType":"UserDefinedTypeName","pathNode":{"id":2835,"name":"Uint256Slot","nameLocations":["2740:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2788,"src":"2740:11:23"},"referencedDeclaration":2788,"src":"2740:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2788_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:23"},"scope":2897,"src":"2679:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2851,"nodeType":"Block","src":"3020:79:23","statements":[{"AST":{"nativeSrc":"3055:38:23","nodeType":"YulBlock","src":"3055:38:23","statements":[{"nativeSrc":"3069:14:23","nodeType":"YulAssignment","src":"3069:14:23","value":{"name":"slot","nativeSrc":"3079:4:23","nodeType":"YulIdentifier","src":"3079:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:23","nodeType":"YulIdentifier","src":"3069:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2848,"isOffset":false,"isSlot":true,"src":"3069:6:23","suffix":"slot","valueSize":1},{"declaration":2844,"isOffset":false,"isSlot":false,"src":"3079:4:23","valueSize":1}],"flags":["memory-safe"],"id":2850,"nodeType":"InlineAssembly","src":"3030:63:23"}]},"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"2848:85:23","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2852,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:23","nodeType":"FunctionDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"slot","nameLocation":"2969:4:23","nodeType":"VariableDeclaration","scope":2852,"src":"2961:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:23"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"r","nameLocation":"3017:1:23","nodeType":"VariableDeclaration","scope":2852,"src":"2998:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2791_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2847,"nodeType":"UserDefinedTypeName","pathNode":{"id":2846,"name":"Int256Slot","nameLocations":["2998:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":2791,"src":"2998:10:23"},"referencedDeclaration":2791,"src":"2998:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2791_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:23"},"scope":2897,"src":"2938:161:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2862,"nodeType":"Block","src":"3277:79:23","statements":[{"AST":{"nativeSrc":"3312:38:23","nodeType":"YulBlock","src":"3312:38:23","statements":[{"nativeSrc":"3326:14:23","nodeType":"YulAssignment","src":"3326:14:23","value":{"name":"slot","nativeSrc":"3336:4:23","nodeType":"YulIdentifier","src":"3336:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:23","nodeType":"YulIdentifier","src":"3326:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2859,"isOffset":false,"isSlot":true,"src":"3326:6:23","suffix":"slot","valueSize":1},{"declaration":2855,"isOffset":false,"isSlot":false,"src":"3336:4:23","valueSize":1}],"flags":["memory-safe"],"id":2861,"nodeType":"InlineAssembly","src":"3287:63:23"}]},"documentation":{"id":2853,"nodeType":"StructuredDocumentation","src":"3105:85:23","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2863,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:23","nodeType":"FunctionDefinition","parameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"slot","nameLocation":"3226:4:23","nodeType":"VariableDeclaration","scope":2863,"src":"3218:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:23"},"returnParameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"r","nameLocation":"3274:1:23","nodeType":"VariableDeclaration","scope":2863,"src":"3255:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2794_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2858,"nodeType":"UserDefinedTypeName","pathNode":{"id":2857,"name":"StringSlot","nameLocations":["3255:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"3255:10:23"},"referencedDeclaration":2794,"src":"3255:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2794_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:23"},"scope":2897,"src":"3195:161:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2873,"nodeType":"Block","src":"3558:85:23","statements":[{"AST":{"nativeSrc":"3593:44:23","nodeType":"YulBlock","src":"3593:44:23","statements":[{"nativeSrc":"3607:20:23","nodeType":"YulAssignment","src":"3607:20:23","value":{"name":"store.slot","nativeSrc":"3617:10:23","nodeType":"YulIdentifier","src":"3617:10:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:23","nodeType":"YulIdentifier","src":"3607:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2870,"isOffset":false,"isSlot":true,"src":"3607:6:23","suffix":"slot","valueSize":1},{"declaration":2866,"isOffset":false,"isSlot":true,"src":"3617:10:23","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2872,"nodeType":"InlineAssembly","src":"3568:69:23"}]},"documentation":{"id":2864,"nodeType":"StructuredDocumentation","src":"3362:101:23","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2874,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:23","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"store","nameLocation":"3506:5:23","nodeType":"VariableDeclaration","scope":2874,"src":"3491:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2865,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:23"},"returnParameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"r","nameLocation":"3555:1:23","nodeType":"VariableDeclaration","scope":2874,"src":"3536:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2794_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2869,"nodeType":"UserDefinedTypeName","pathNode":{"id":2868,"name":"StringSlot","nameLocations":["3536:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"3536:10:23"},"referencedDeclaration":2794,"src":"3536:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2794_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:23"},"scope":2897,"src":"3468:175:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2884,"nodeType":"Block","src":"3818:79:23","statements":[{"AST":{"nativeSrc":"3853:38:23","nodeType":"YulBlock","src":"3853:38:23","statements":[{"nativeSrc":"3867:14:23","nodeType":"YulAssignment","src":"3867:14:23","value":{"name":"slot","nativeSrc":"3877:4:23","nodeType":"YulIdentifier","src":"3877:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:23","nodeType":"YulIdentifier","src":"3867:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2881,"isOffset":false,"isSlot":true,"src":"3867:6:23","suffix":"slot","valueSize":1},{"declaration":2877,"isOffset":false,"isSlot":false,"src":"3877:4:23","valueSize":1}],"flags":["memory-safe"],"id":2883,"nodeType":"InlineAssembly","src":"3828:63:23"}]},"documentation":{"id":2875,"nodeType":"StructuredDocumentation","src":"3649:84:23","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2885,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:23","nodeType":"FunctionDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"slot","nameLocation":"3768:4:23","nodeType":"VariableDeclaration","scope":2885,"src":"3760:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:23"},"returnParameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"r","nameLocation":"3815:1:23","nodeType":"VariableDeclaration","scope":2885,"src":"3797:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2797_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2880,"nodeType":"UserDefinedTypeName","pathNode":{"id":2879,"name":"BytesSlot","nameLocations":["3797:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":2797,"src":"3797:9:23"},"referencedDeclaration":2797,"src":"3797:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2797_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:23"},"scope":2897,"src":"3738:159:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2895,"nodeType":"Block","src":"4094:85:23","statements":[{"AST":{"nativeSrc":"4129:44:23","nodeType":"YulBlock","src":"4129:44:23","statements":[{"nativeSrc":"4143:20:23","nodeType":"YulAssignment","src":"4143:20:23","value":{"name":"store.slot","nativeSrc":"4153:10:23","nodeType":"YulIdentifier","src":"4153:10:23"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:23","nodeType":"YulIdentifier","src":"4143:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2892,"isOffset":false,"isSlot":true,"src":"4143:6:23","suffix":"slot","valueSize":1},{"declaration":2888,"isOffset":false,"isSlot":true,"src":"4153:10:23","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2894,"nodeType":"InlineAssembly","src":"4104:69:23"}]},"documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"3903:99:23","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2896,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:23","nodeType":"FunctionDefinition","parameters":{"id":2889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"store","nameLocation":"4043:5:23","nodeType":"VariableDeclaration","scope":2896,"src":"4029:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2887,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:23"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"r","nameLocation":"4091:1:23","nodeType":"VariableDeclaration","scope":2896,"src":"4073:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2797_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2891,"nodeType":"UserDefinedTypeName","pathNode":{"id":2890,"name":"BytesSlot","nameLocations":["4073:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":2797,"src":"4073:9:23"},"referencedDeclaration":2797,"src":"4073:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2797_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:23"},"scope":2897,"src":"4007:172:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2898,"src":"1407:2774:23","usedErrors":[],"usedEvents":[]}],"src":"193:3989:23"},"id":23},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5472],"SignedMath":[7381],"Strings":[3217]},"id":3218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2899,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3218,"sourceUnit":5473,"src":"127:37:24","symbolAliases":[{"foreign":{"id":2900,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"135:4:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3218,"sourceUnit":7382,"src":"165:49:24","symbolAliases":[{"foreign":{"id":2902,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"173:10:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2904,"nodeType":"StructuredDocumentation","src":"216:34:24","text":" @dev String operations."},"fullyImplemented":true,"id":3217,"linearizedBaseContracts":[3217],"name":"Strings","nameLocation":"259:7:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2907,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:24","nodeType":"VariableDeclaration","scope":3217,"src":"273:56:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2905,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:24","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2910,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:24","nodeType":"VariableDeclaration","scope":3217,"src":"335:42:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2908,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:24","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2911,"nodeType":"StructuredDocumentation","src":"384:81:24","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2917,"name":"StringsInsufficientHexLength","nameLocation":"476:28:24","nodeType":"ErrorDefinition","parameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"value","nameLocation":"513:5:24","nodeType":"VariableDeclaration","scope":2917,"src":"505:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"length","nameLocation":"528:6:24","nodeType":"VariableDeclaration","scope":2917,"src":"520:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:24"},"src":"470:66:24"},{"body":{"id":2964,"nodeType":"Block","src":"708:561:24","statements":[{"id":2963,"nodeType":"UncheckedBlock","src":"718:545:24","statements":[{"assignments":[2926],"declarations":[{"constant":false,"id":2926,"mutability":"mutable","name":"length","nameLocation":"750:6:24","nodeType":"VariableDeclaration","scope":2963,"src":"742:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2933,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"770:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2927,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"759:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:24","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5244,"src":"759:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:24"},{"assignments":[2935],"declarations":[{"constant":false,"id":2935,"mutability":"mutable","name":"buffer","nameLocation":"808:6:24","nodeType":"VariableDeclaration","scope":2963,"src":"794:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2934,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2940,"initialValue":{"arguments":[{"id":2938,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"828:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2936,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:24"},{"assignments":[2942],"declarations":[{"constant":false,"id":2942,"mutability":"mutable","name":"ptr","nameLocation":"857:3:24","nodeType":"VariableDeclaration","scope":2963,"src":"849:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2943,"nodeType":"VariableDeclarationStatement","src":"849:11:24"},{"AST":{"nativeSrc":"899:67:24","nodeType":"YulBlock","src":"899:67:24","statements":[{"nativeSrc":"917:35:24","nodeType":"YulAssignment","src":"917:35:24","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:24","nodeType":"YulIdentifier","src":"928:6:24"},{"arguments":[{"kind":"number","nativeSrc":"940:2:24","nodeType":"YulLiteral","src":"940:2:24","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:24","nodeType":"YulIdentifier","src":"944:6:24"}],"functionName":{"name":"add","nativeSrc":"936:3:24","nodeType":"YulIdentifier","src":"936:3:24"},"nativeSrc":"936:15:24","nodeType":"YulFunctionCall","src":"936:15:24"}],"functionName":{"name":"add","nativeSrc":"924:3:24","nodeType":"YulIdentifier","src":"924:3:24"},"nativeSrc":"924:28:24","nodeType":"YulFunctionCall","src":"924:28:24"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:24","nodeType":"YulIdentifier","src":"917:3:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2935,"isOffset":false,"isSlot":false,"src":"928:6:24","valueSize":1},{"declaration":2926,"isOffset":false,"isSlot":false,"src":"944:6:24","valueSize":1},{"declaration":2942,"isOffset":false,"isSlot":false,"src":"917:3:24","valueSize":1}],"flags":["memory-safe"],"id":2944,"nodeType":"InlineAssembly","src":"874:92:24"},{"body":{"id":2959,"nodeType":"Block","src":"992:234:24","statements":[{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:24","subExpression":{"id":2946,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"1010:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ExpressionStatement","src":"1010:5:24"},{"AST":{"nativeSrc":"1058:86:24","nodeType":"YulBlock","src":"1058:86:24","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:24","nodeType":"YulIdentifier","src":"1088:3:24"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:24","nodeType":"YulIdentifier","src":"1102:5:24"},{"kind":"number","nativeSrc":"1109:2:24","nodeType":"YulLiteral","src":"1109:2:24","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:24","nodeType":"YulIdentifier","src":"1098:3:24"},"nativeSrc":"1098:14:24","nodeType":"YulFunctionCall","src":"1098:14:24"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:24","nodeType":"YulIdentifier","src":"1114:10:24"}],"functionName":{"name":"byte","nativeSrc":"1093:4:24","nodeType":"YulIdentifier","src":"1093:4:24"},"nativeSrc":"1093:32:24","nodeType":"YulFunctionCall","src":"1093:32:24"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:24","nodeType":"YulIdentifier","src":"1080:7:24"},"nativeSrc":"1080:46:24","nodeType":"YulFunctionCall","src":"1080:46:24"},"nativeSrc":"1080:46:24","nodeType":"YulExpressionStatement","src":"1080:46:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":2907,"isOffset":false,"isSlot":false,"src":"1114:10:24","valueSize":1},{"declaration":2942,"isOffset":false,"isSlot":false,"src":"1088:3:24","valueSize":1},{"declaration":2920,"isOffset":false,"isSlot":false,"src":"1102:5:24","valueSize":1}],"flags":["memory-safe"],"id":2949,"nodeType":"InlineAssembly","src":"1033:111:24"},{"expression":{"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"1161:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2953,"nodeType":"ExpressionStatement","src":"1161:11:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"1194:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2958,"nodeType":"IfStatement","src":"1190:21:24","trueBody":{"id":2957,"nodeType":"Break","src":"1206:5:24"}}]},"condition":{"hexValue":"74727565","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2960,"nodeType":"WhileStatement","src":"979:247:24"},{"expression":{"id":2961,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"1246:6:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2924,"id":2962,"nodeType":"Return","src":"1239:13:24"}]}]},"documentation":{"id":2918,"nodeType":"StructuredDocumentation","src":"542:90:24","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2965,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:24","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"value","nameLocation":"663:5:24","nodeType":"VariableDeclaration","scope":2965,"src":"655:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:24"},"returnParameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2965,"src":"693:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2922,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:24"},"scope":3217,"src":"637:632:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2990,"nodeType":"Block","src":"1445:92:24","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"1476:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:24","trueExpression":{"hexValue":"2d","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"1522:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2983,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"1507:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7381_$","typeString":"type(library SignedMath)"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:24","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7380,"src":"1507:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2982,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"1498:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2973,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:24","typeDescriptions":{}}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:24","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:24","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2972,"id":2989,"nodeType":"Return","src":"1455:75:24"}]},"documentation":{"id":2966,"nodeType":"StructuredDocumentation","src":"1275:89:24","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2991,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:24","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"value","nameLocation":"1400:5:24","nodeType":"VariableDeclaration","scope":2991,"src":"1393:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2967,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:24"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"1430:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2970,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:24"},"scope":3217,"src":"1369:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3010,"nodeType":"Block","src":"1716:100:24","statements":[{"id":3009,"nodeType":"UncheckedBlock","src":"1726:84:24","statements":[{"expression":{"arguments":[{"id":3000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"1769:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"1788:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3001,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"1776:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:24","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5415,"src":"1776:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2999,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3011,3094,3114],"referencedDeclaration":3094,"src":"1757:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2998,"id":3008,"nodeType":"Return","src":"1750:49:24"}]}]},"documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"1543:94:24","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3011,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:24","nodeType":"FunctionDefinition","parameters":{"id":2995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"value","nameLocation":"1671:5:24","nodeType":"VariableDeclaration","scope":3011,"src":"1663:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:24"},"returnParameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3011,"src":"1701:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2996,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:24"},"scope":3217,"src":"1642:174:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3093,"nodeType":"Block","src":"2029:435:24","statements":[{"assignments":[3022],"declarations":[{"constant":false,"id":3022,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:24","nodeType":"VariableDeclaration","scope":3093,"src":"2039:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3024,"initialValue":{"id":3023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"2060:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:24"},{"assignments":[3026],"declarations":[{"constant":false,"id":3026,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:24","nodeType":"VariableDeclaration","scope":3093,"src":"2075:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3025,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3035,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3030,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"2111:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3027,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:24"},{"expression":{"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3036,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"2132:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3038,"indexExpression":{"hexValue":"30","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3041,"nodeType":"ExpressionStatement","src":"2132:15:24"},{"expression":{"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3042,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"2157:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3044,"indexExpression":{"hexValue":"31","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3047,"nodeType":"ExpressionStatement","src":"2157:15:24"},{"body":{"id":3076,"nodeType":"Block","src":"2227:95:24","statements":[{"expression":{"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3062,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"2241:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3064,"indexExpression":{"id":3063,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"2248:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3065,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2253:10:24","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3069,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2264:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3071,"nodeType":"ExpressionStatement","src":"2241:40:24"},{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3072,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2295:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3075,"nodeType":"ExpressionStatement","src":"2295:16:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3056,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"2215:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3077,"initializationExpression":{"assignments":[3049],"declarations":[{"constant":false,"id":3049,"mutability":"mutable","name":"i","nameLocation":"2195:1:24","nodeType":"VariableDeclaration","scope":3077,"src":"2187:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3055,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3051,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"2203:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:24"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:24","subExpression":{"id":3059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"2224:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3061,"nodeType":"ExpressionStatement","src":"2222:3:24"},"nodeType":"ForStatement","src":"2182:140:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2335:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3087,"nodeType":"IfStatement","src":"2331:96:24","trueBody":{"id":3086,"nodeType":"Block","src":"2352:75:24","statements":[{"errorCall":{"arguments":[{"id":3082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"2402:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3083,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"2409:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3081,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2373:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3085,"nodeType":"RevertStatement","src":"2366:50:24"}]}},{"expression":{"arguments":[{"id":3090,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"2450:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3088,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:24","typeDescriptions":{}}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3020,"id":3092,"nodeType":"Return","src":"2436:21:24"}]},"documentation":{"id":3012,"nodeType":"StructuredDocumentation","src":"1822:112:24","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3094,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:24","nodeType":"FunctionDefinition","parameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"value","nameLocation":"1968:5:24","nodeType":"VariableDeclaration","scope":3094,"src":"1960:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3016,"mutability":"mutable","name":"length","nameLocation":"1983:6:24","nodeType":"VariableDeclaration","scope":3094,"src":"1975:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:24"},"returnParameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3094,"src":"2014:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3018,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:24"},"scope":3217,"src":"1939:525:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3113,"nodeType":"Block","src":"2696:75:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3107,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"2741:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3105,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:24","typeDescriptions":{}}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:24","typeDescriptions":{}}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3110,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"2749:14:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3102,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3011,3094,3114],"referencedDeclaration":3094,"src":"2713:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3101,"id":3112,"nodeType":"Return","src":"2706:58:24"}]},"documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"2470:148:24","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3114,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:24","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"addr","nameLocation":"2652:4:24","nodeType":"VariableDeclaration","scope":3114,"src":"2644:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3096,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:24"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3114,"src":"2681:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3099,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:24"},"scope":3217,"src":"2623:148:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3178,"nodeType":"Block","src":"3028:642:24","statements":[{"assignments":[3123],"declarations":[{"constant":false,"id":3123,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:24","nodeType":"VariableDeclaration","scope":3178,"src":"3038:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3122,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3130,"initialValue":{"arguments":[{"arguments":[{"id":3127,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"3078:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3126,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3011,3094,3114],"referencedDeclaration":3114,"src":"3066:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3124,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:24","typeDescriptions":{}}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:24"},{"assignments":[3132],"declarations":[{"constant":false,"id":3132,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:24","nodeType":"VariableDeclaration","scope":3178,"src":"3169:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3133,"nodeType":"VariableDeclarationStatement","src":"3169:17:24"},{"AST":{"nativeSrc":"3221:78:24","nodeType":"YulBlock","src":"3221:78:24","statements":[{"nativeSrc":"3235:54:24","nodeType":"YulAssignment","src":"3235:54:24","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:24","nodeType":"YulLiteral","src":"3252:2:24","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:24","nodeType":"YulIdentifier","src":"3270:6:24"},{"kind":"number","nativeSrc":"3278:4:24","nodeType":"YulLiteral","src":"3278:4:24","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:24","nodeType":"YulIdentifier","src":"3266:3:24"},"nativeSrc":"3266:17:24","nodeType":"YulFunctionCall","src":"3266:17:24"},{"kind":"number","nativeSrc":"3285:2:24","nodeType":"YulLiteral","src":"3285:2:24","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:24","nodeType":"YulIdentifier","src":"3256:9:24"},"nativeSrc":"3256:32:24","nodeType":"YulFunctionCall","src":"3256:32:24"}],"functionName":{"name":"shr","nativeSrc":"3248:3:24","nodeType":"YulIdentifier","src":"3248:3:24"},"nativeSrc":"3248:41:24","nodeType":"YulFunctionCall","src":"3248:41:24"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:24","nodeType":"YulIdentifier","src":"3235:9:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3123,"isOffset":false,"isSlot":false,"src":"3270:6:24","valueSize":1},{"declaration":3132,"isOffset":false,"isSlot":false,"src":"3235:9:24","valueSize":1}],"flags":["memory-safe"],"id":3134,"nodeType":"InlineAssembly","src":"3196:103:24"},{"body":{"id":3171,"nodeType":"Block","src":"3342:291:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3145,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"3448:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:24","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3152,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"3477:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3154,"indexExpression":{"id":3153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"3484:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3150,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:24","typeDescriptions":{}}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3166,"nodeType":"IfStatement","src":"3444:150:24","trueBody":{"id":3165,"nodeType":"Block","src":"3494:100:24","statements":[{"expression":{"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3159,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"3562:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3161,"indexExpression":{"id":3160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"3569:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3164,"nodeType":"ExpressionStatement","src":"3562:17:24"}]}},{"expression":{"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3167,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"3607:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3170,"nodeType":"ExpressionStatement","src":"3607:15:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3139,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"3330:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3172,"initializationExpression":{"assignments":[3136],"declarations":[{"constant":false,"id":3136,"mutability":"mutable","name":"i","nameLocation":"3322:1:24","nodeType":"VariableDeclaration","scope":3172,"src":"3314:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3138,"initialValue":{"hexValue":"3431","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:24","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:24"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:24","subExpression":{"id":3142,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"3339:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3144,"nodeType":"ExpressionStatement","src":"3337:3:24"},"nodeType":"ForStatement","src":"3309:324:24"},{"expression":{"arguments":[{"id":3175,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"3656:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3173,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:24","typeDescriptions":{}}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3121,"id":3177,"nodeType":"Return","src":"3642:21:24"}]},"documentation":{"id":3115,"nodeType":"StructuredDocumentation","src":"2777:165:24","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3179,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:24","nodeType":"FunctionDefinition","parameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"addr","nameLocation":"2984:4:24","nodeType":"VariableDeclaration","scope":3179,"src":"2976:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3116,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:24"},"returnParameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3179,"src":"3013:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3119,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:24"},"scope":3217,"src":"2947:723:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3215,"nodeType":"Block","src":"3825:104:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3191,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"3848:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3189,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:24","typeDescriptions":{}}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:24","memberName":"length","nodeType":"MemberAccess","src":"3842:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3196,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"3867:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3194,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:24","typeDescriptions":{}}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:24","memberName":"length","nodeType":"MemberAccess","src":"3861:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"3896:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3201,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:24","typeDescriptions":{}}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3200,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3209,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"3919:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3207,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:24","typeDescriptions":{}}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3206,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3188,"id":3214,"nodeType":"Return","src":"3835:87:24"}]},"documentation":{"id":3180,"nodeType":"StructuredDocumentation","src":"3676:66:24","text":" @dev Returns true if the two strings are equal."},"id":3216,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:24","nodeType":"FunctionDefinition","parameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"a","nameLocation":"3776:1:24","nodeType":"VariableDeclaration","scope":3216,"src":"3762:15:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3181,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"b","nameLocation":"3793:1:24","nodeType":"VariableDeclaration","scope":3216,"src":"3779:15:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3183,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:24"},"returnParameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3216,"src":"3819:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3186,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:24"},"scope":3217,"src":"3747:182:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3218,"src":"251:3680:24","usedErrors":[2917],"usedEvents":[]}],"src":"101:3831:24"},"id":24},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3565]},"id":3566,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3219,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"138:205:25","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3565,"linearizedBaseContracts":[3565],"name":"ECDSA","nameLocation":"352:5:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3225,"members":[{"id":3221,"name":"NoError","nameLocation":"392:7:25","nodeType":"EnumValue","src":"392:7:25"},{"id":3222,"name":"InvalidSignature","nameLocation":"409:16:25","nodeType":"EnumValue","src":"409:16:25"},{"id":3223,"name":"InvalidSignatureLength","nameLocation":"435:22:25","nodeType":"EnumValue","src":"435:22:25"},{"id":3224,"name":"InvalidSignatureS","nameLocation":"467:17:25","nodeType":"EnumValue","src":"467:17:25"}],"name":"RecoverError","nameLocation":"369:12:25","nodeType":"EnumDefinition","src":"364:126:25"},{"documentation":{"id":3226,"nodeType":"StructuredDocumentation","src":"496:63:25","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3228,"name":"ECDSAInvalidSignature","nameLocation":"570:21:25","nodeType":"ErrorDefinition","parameters":{"id":3227,"nodeType":"ParameterList","parameters":[],"src":"591:2:25"},"src":"564:30:25"},{"documentation":{"id":3229,"nodeType":"StructuredDocumentation","src":"600:60:25","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3233,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:25","nodeType":"ErrorDefinition","parameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"length","nameLocation":"707:6:25","nodeType":"VariableDeclaration","scope":3233,"src":"699:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:25"},"src":"665:50:25"},{"documentation":{"id":3234,"nodeType":"StructuredDocumentation","src":"721:85:25","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3238,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:25","nodeType":"ErrorDefinition","parameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"s","nameLocation":"848:1:25","nodeType":"VariableDeclaration","scope":3238,"src":"840:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:25"},"src":"811:40:25"},{"body":{"id":3290,"nodeType":"Block","src":"2285:622:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3253,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"2299:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:25","memberName":"length","nodeType":"MemberAccess","src":"2299:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:25","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3288,"nodeType":"Block","src":"2793:108:25","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3275,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:25","typeDescriptions":{}}},"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3279,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"2827:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3225_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:25","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3223,"src":"2827:35:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3283,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"2872:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:25","memberName":"length","nodeType":"MemberAccess","src":"2872:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:25","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3252,"id":3287,"nodeType":"Return","src":"2807:83:25"}]},"id":3289,"nodeType":"IfStatement","src":"2295:606:25","trueBody":{"id":3274,"nodeType":"Block","src":"2323:464:25","statements":[{"assignments":[3258],"declarations":[{"constant":false,"id":3258,"mutability":"mutable","name":"r","nameLocation":"2345:1:25","nodeType":"VariableDeclaration","scope":3274,"src":"2337:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3259,"nodeType":"VariableDeclarationStatement","src":"2337:9:25"},{"assignments":[3261],"declarations":[{"constant":false,"id":3261,"mutability":"mutable","name":"s","nameLocation":"2368:1:25","nodeType":"VariableDeclaration","scope":3274,"src":"2360:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3262,"nodeType":"VariableDeclarationStatement","src":"2360:9:25"},{"assignments":[3264],"declarations":[{"constant":false,"id":3264,"mutability":"mutable","name":"v","nameLocation":"2389:1:25","nodeType":"VariableDeclaration","scope":3274,"src":"2383:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3263,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3265,"nodeType":"VariableDeclarationStatement","src":"2383:7:25"},{"AST":{"nativeSrc":"2560:171:25","nodeType":"YulBlock","src":"2560:171:25","statements":[{"nativeSrc":"2578:32:25","nodeType":"YulAssignment","src":"2578:32:25","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:25","nodeType":"YulIdentifier","src":"2593:9:25"},{"kind":"number","nativeSrc":"2604:4:25","nodeType":"YulLiteral","src":"2604:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:25","nodeType":"YulIdentifier","src":"2589:3:25"},"nativeSrc":"2589:20:25","nodeType":"YulFunctionCall","src":"2589:20:25"}],"functionName":{"name":"mload","nativeSrc":"2583:5:25","nodeType":"YulIdentifier","src":"2583:5:25"},"nativeSrc":"2583:27:25","nodeType":"YulFunctionCall","src":"2583:27:25"},"variableNames":[{"name":"r","nativeSrc":"2578:1:25","nodeType":"YulIdentifier","src":"2578:1:25"}]},{"nativeSrc":"2627:32:25","nodeType":"YulAssignment","src":"2627:32:25","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:25","nodeType":"YulIdentifier","src":"2642:9:25"},{"kind":"number","nativeSrc":"2653:4:25","nodeType":"YulLiteral","src":"2653:4:25","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:25","nodeType":"YulIdentifier","src":"2638:3:25"},"nativeSrc":"2638:20:25","nodeType":"YulFunctionCall","src":"2638:20:25"}],"functionName":{"name":"mload","nativeSrc":"2632:5:25","nodeType":"YulIdentifier","src":"2632:5:25"},"nativeSrc":"2632:27:25","nodeType":"YulFunctionCall","src":"2632:27:25"},"variableNames":[{"name":"s","nativeSrc":"2627:1:25","nodeType":"YulIdentifier","src":"2627:1:25"}]},{"nativeSrc":"2676:41:25","nodeType":"YulAssignment","src":"2676:41:25","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:25","nodeType":"YulLiteral","src":"2686:1:25","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:25","nodeType":"YulIdentifier","src":"2699:9:25"},{"kind":"number","nativeSrc":"2710:4:25","nodeType":"YulLiteral","src":"2710:4:25","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:25","nodeType":"YulIdentifier","src":"2695:3:25"},"nativeSrc":"2695:20:25","nodeType":"YulFunctionCall","src":"2695:20:25"}],"functionName":{"name":"mload","nativeSrc":"2689:5:25","nodeType":"YulIdentifier","src":"2689:5:25"},"nativeSrc":"2689:27:25","nodeType":"YulFunctionCall","src":"2689:27:25"}],"functionName":{"name":"byte","nativeSrc":"2681:4:25","nodeType":"YulIdentifier","src":"2681:4:25"},"nativeSrc":"2681:36:25","nodeType":"YulFunctionCall","src":"2681:36:25"},"variableNames":[{"name":"v","nativeSrc":"2676:1:25","nodeType":"YulIdentifier","src":"2676:1:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3258,"isOffset":false,"isSlot":false,"src":"2578:1:25","valueSize":1},{"declaration":3261,"isOffset":false,"isSlot":false,"src":"2627:1:25","valueSize":1},{"declaration":3243,"isOffset":false,"isSlot":false,"src":"2593:9:25","valueSize":1},{"declaration":3243,"isOffset":false,"isSlot":false,"src":"2642:9:25","valueSize":1},{"declaration":3243,"isOffset":false,"isSlot":false,"src":"2699:9:25","valueSize":1},{"declaration":3264,"isOffset":false,"isSlot":false,"src":"2676:1:25","valueSize":1}],"flags":["memory-safe"],"id":3266,"nodeType":"InlineAssembly","src":"2535:196:25"},{"expression":{"arguments":[{"id":3268,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"2762:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3269,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"2768:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3270,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"2771:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3271,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"2774:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3267,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3291,3371,3479],"referencedDeclaration":3479,"src":"2751:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3252,"id":3273,"nodeType":"Return","src":"2744:32:25"}]}}]},"documentation":{"id":3239,"nodeType":"StructuredDocumentation","src":"857:1267:25","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3291,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:25","nodeType":"FunctionDefinition","parameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"hash","nameLocation":"2166:4:25","nodeType":"VariableDeclaration","scope":3291,"src":"2158:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3243,"mutability":"mutable","name":"signature","nameLocation":"2193:9:25","nodeType":"VariableDeclaration","scope":3291,"src":"2180:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3242,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:25"},"returnParameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:25","nodeType":"VariableDeclaration","scope":3291,"src":"2232:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3249,"mutability":"mutable","name":"err","nameLocation":"2264:3:25","nodeType":"VariableDeclaration","scope":3291,"src":"2251:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3248,"nodeType":"UserDefinedTypeName","pathNode":{"id":3247,"name":"RecoverError","nameLocations":["2251:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":3225,"src":"2251:12:25"},"referencedDeclaration":3225,"src":"2251:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3251,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:25","nodeType":"VariableDeclaration","scope":3291,"src":"2269:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:25"},"scope":3565,"src":"2129:778:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3320,"nodeType":"Block","src":"3801:168:25","statements":[{"assignments":[3302,3305,3307],"declarations":[{"constant":false,"id":3302,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:25","nodeType":"VariableDeclaration","scope":3320,"src":"3812:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3301,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3305,"mutability":"mutable","name":"error","nameLocation":"3844:5:25","nodeType":"VariableDeclaration","scope":3320,"src":"3831:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3304,"nodeType":"UserDefinedTypeName","pathNode":{"id":3303,"name":"RecoverError","nameLocations":["3831:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":3225,"src":"3831:12:25"},"referencedDeclaration":3225,"src":"3831:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:25","nodeType":"VariableDeclaration","scope":3320,"src":"3851:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3312,"initialValue":{"arguments":[{"id":3309,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"3882:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3310,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"3888:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3308,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3291,3371,3479],"referencedDeclaration":3291,"src":"3871:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:25"},{"expression":{"arguments":[{"id":3314,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"3920:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},{"id":3315,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"3927:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3313,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"3908:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3225_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3317,"nodeType":"ExpressionStatement","src":"3908:28:25"},{"expression":{"id":3318,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"3953:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3300,"id":3319,"nodeType":"Return","src":"3946:16:25"}]},"documentation":{"id":3292,"nodeType":"StructuredDocumentation","src":"2913:796:25","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3321,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:25","nodeType":"FunctionDefinition","parameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"hash","nameLocation":"3739:4:25","nodeType":"VariableDeclaration","scope":3321,"src":"3731:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"signature","nameLocation":"3758:9:25","nodeType":"VariableDeclaration","scope":3321,"src":"3745:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3295,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:25"},"returnParameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3321,"src":"3792:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3298,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:25"},"scope":3565,"src":"3714:255:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3370,"nodeType":"Block","src":"4348:342:25","statements":[{"id":3369,"nodeType":"UncheckedBlock","src":"4358:326:25","statements":[{"assignments":[3339],"declarations":[{"constant":false,"id":3339,"mutability":"mutable","name":"s","nameLocation":"4390:1:25","nodeType":"VariableDeclaration","scope":3369,"src":"4382:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3346,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3340,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"4394:2:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:25","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:25","typeDescriptions":{}}},"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:25"},{"assignments":[3348],"declarations":[{"constant":false,"id":3348,"mutability":"mutable","name":"v","nameLocation":"4591:1:25","nodeType":"VariableDeclaration","scope":3369,"src":"4585:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3347,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3361,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3353,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"4610:2:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:25","typeDescriptions":{}}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:25","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3349,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:25","typeDescriptions":{}}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:25"},{"expression":{"arguments":[{"id":3363,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"4659:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3364,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"4665:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3365,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"4668:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3366,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"4671:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3362,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3291,3371,3479],"referencedDeclaration":3479,"src":"4648:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3337,"id":3368,"nodeType":"Return","src":"4641:32:25"}]}]},"documentation":{"id":3322,"nodeType":"StructuredDocumentation","src":"3975:205:25","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3371,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:25","nodeType":"FunctionDefinition","parameters":{"id":3329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"hash","nameLocation":"4222:4:25","nodeType":"VariableDeclaration","scope":3371,"src":"4214:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"r","nameLocation":"4244:1:25","nodeType":"VariableDeclaration","scope":3371,"src":"4236:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3328,"mutability":"mutable","name":"vs","nameLocation":"4263:2:25","nodeType":"VariableDeclaration","scope":3371,"src":"4255:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:25"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:25","nodeType":"VariableDeclaration","scope":3371,"src":"4295:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3330,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"err","nameLocation":"4327:3:25","nodeType":"VariableDeclaration","scope":3371,"src":"4314:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3333,"nodeType":"UserDefinedTypeName","pathNode":{"id":3332,"name":"RecoverError","nameLocations":["4314:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":3225,"src":"4314:12:25"},"referencedDeclaration":3225,"src":"4314:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3336,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:25","nodeType":"VariableDeclaration","scope":3371,"src":"4332:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:25"},"scope":3565,"src":"4185:505:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3403,"nodeType":"Block","src":"4903:164:25","statements":[{"assignments":[3384,3387,3389],"declarations":[{"constant":false,"id":3384,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:25","nodeType":"VariableDeclaration","scope":3403,"src":"4914:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3383,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"error","nameLocation":"4946:5:25","nodeType":"VariableDeclaration","scope":3403,"src":"4933:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3386,"nodeType":"UserDefinedTypeName","pathNode":{"id":3385,"name":"RecoverError","nameLocations":["4933:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":3225,"src":"4933:12:25"},"referencedDeclaration":3225,"src":"4933:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:25","nodeType":"VariableDeclaration","scope":3403,"src":"4953:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3395,"initialValue":{"arguments":[{"id":3391,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"4984:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3392,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"4990:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3393,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"4993:2:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3390,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3291,3371,3479],"referencedDeclaration":3371,"src":"4973:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:25"},{"expression":{"arguments":[{"id":3397,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"5018:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},{"id":3398,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"5025:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3396,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"5006:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3225_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3400,"nodeType":"ExpressionStatement","src":"5006:28:25"},{"expression":{"id":3401,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"5051:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3382,"id":3402,"nodeType":"Return","src":"5044:16:25"}]},"documentation":{"id":3372,"nodeType":"StructuredDocumentation","src":"4696:116:25","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3404,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:25","nodeType":"FunctionDefinition","parameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"hash","nameLocation":"4842:4:25","nodeType":"VariableDeclaration","scope":3404,"src":"4834:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3376,"mutability":"mutable","name":"r","nameLocation":"4856:1:25","nodeType":"VariableDeclaration","scope":3404,"src":"4848:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3378,"mutability":"mutable","name":"vs","nameLocation":"4867:2:25","nodeType":"VariableDeclaration","scope":3404,"src":"4859:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:25"},"returnParameters":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3404,"src":"4894:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3380,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:25"},"scope":3565,"src":"4817:250:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3478,"nodeType":"Block","src":"5382:1372:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3425,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"6278:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3423,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:25","typeDescriptions":{}}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:25","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3439,"nodeType":"IfStatement","src":"6266:164:25","trueBody":{"id":3438,"nodeType":"Block","src":"6351:79:25","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3429,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:25","typeDescriptions":{}}},"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3433,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"6385:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3225_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:25","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3224,"src":"6385:30:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},{"id":3435,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"6417:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3422,"id":3437,"nodeType":"Return","src":"6365:54:25"}]}},{"assignments":[3441],"declarations":[{"constant":false,"id":3441,"mutability":"mutable","name":"signer","nameLocation":"6532:6:25","nodeType":"VariableDeclaration","scope":3478,"src":"6524:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3440,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3448,"initialValue":{"arguments":[{"id":3443,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"6551:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3444,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"6557:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3445,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"6560:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3446,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"6563:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3442,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:25","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:25"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3449,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"6579:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3450,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:25","typeDescriptions":{}}},"id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3468,"nodeType":"IfStatement","src":"6575:113:25","trueBody":{"id":3467,"nodeType":"Block","src":"6601:87:25","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3455,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:25","typeDescriptions":{}}},"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3459,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"6635:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3225_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:25","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"6635:29:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:25","typeDescriptions":{}}},"id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3422,"id":3466,"nodeType":"Return","src":"6615:62:25"}]}},{"expression":{"components":[{"id":3469,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"6706:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3470,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"6714:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3225_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:25","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3221,"src":"6714:20:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:25","typeDescriptions":{}}},"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3422,"id":3477,"nodeType":"Return","src":"6698:49:25"}]},"documentation":{"id":3405,"nodeType":"StructuredDocumentation","src":"5073:125:25","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3479,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:25","nodeType":"FunctionDefinition","parameters":{"id":3414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"hash","nameLocation":"5240:4:25","nodeType":"VariableDeclaration","scope":3479,"src":"5232:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"v","nameLocation":"5260:1:25","nodeType":"VariableDeclaration","scope":3479,"src":"5254:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3408,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3411,"mutability":"mutable","name":"r","nameLocation":"5279:1:25","nodeType":"VariableDeclaration","scope":3479,"src":"5271:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3413,"mutability":"mutable","name":"s","nameLocation":"5298:1:25","nodeType":"VariableDeclaration","scope":3479,"src":"5290:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:25"},"returnParameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3416,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:25","nodeType":"VariableDeclaration","scope":3479,"src":"5329:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3415,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3419,"mutability":"mutable","name":"err","nameLocation":"5361:3:25","nodeType":"VariableDeclaration","scope":3479,"src":"5348:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3418,"nodeType":"UserDefinedTypeName","pathNode":{"id":3417,"name":"RecoverError","nameLocations":["5348:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":3225,"src":"5348:12:25"},"referencedDeclaration":3225,"src":"5348:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3421,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:25","nodeType":"VariableDeclaration","scope":3479,"src":"5366:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:25"},"scope":3565,"src":"5203:1551:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3514,"nodeType":"Block","src":"6981:166:25","statements":[{"assignments":[3494,3497,3499],"declarations":[{"constant":false,"id":3494,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:25","nodeType":"VariableDeclaration","scope":3514,"src":"6992:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3493,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3497,"mutability":"mutable","name":"error","nameLocation":"7024:5:25","nodeType":"VariableDeclaration","scope":3514,"src":"7011:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3496,"nodeType":"UserDefinedTypeName","pathNode":{"id":3495,"name":"RecoverError","nameLocations":["7011:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":3225,"src":"7011:12:25"},"referencedDeclaration":3225,"src":"7011:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3499,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:25","nodeType":"VariableDeclaration","scope":3514,"src":"7031:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3506,"initialValue":{"arguments":[{"id":3501,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"7062:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3502,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"7068:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3503,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"7071:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3504,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"7074:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3500,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3291,3371,3479],"referencedDeclaration":3479,"src":"7051:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3225_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:25"},{"expression":{"arguments":[{"id":3508,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"7098:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},{"id":3509,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7105:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3507,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"7086:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3225_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3511,"nodeType":"ExpressionStatement","src":"7086:28:25"},{"expression":{"id":3512,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"7131:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3492,"id":3513,"nodeType":"Return","src":"7124:16:25"}]},"documentation":{"id":3480,"nodeType":"StructuredDocumentation","src":"6760:122:25","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3515,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:25","nodeType":"FunctionDefinition","parameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"hash","nameLocation":"6912:4:25","nodeType":"VariableDeclaration","scope":3515,"src":"6904:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3484,"mutability":"mutable","name":"v","nameLocation":"6924:1:25","nodeType":"VariableDeclaration","scope":3515,"src":"6918:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3483,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3486,"mutability":"mutable","name":"r","nameLocation":"6935:1:25","nodeType":"VariableDeclaration","scope":3515,"src":"6927:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"s","nameLocation":"6946:1:25","nodeType":"VariableDeclaration","scope":3515,"src":"6938:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:25"},"returnParameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3515,"src":"6972:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3490,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:25"},"scope":3565,"src":"6887:260:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3563,"nodeType":"Block","src":"7352:460:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3524,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"7366:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3525,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"7375:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3225_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:25","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3221,"src":"7375:20:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3530,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"7462:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3531,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"7471:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3225_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:25","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"7471:29:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3538,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"7567:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3539,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"7576:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3225_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:25","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3223,"src":"7576:35:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3550,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"7701:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3551,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"7710:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3225_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:25","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3224,"src":"7710:30:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3559,"nodeType":"IfStatement","src":"7697:109:25","trueBody":{"id":3558,"nodeType":"Block","src":"7742:64:25","statements":[{"errorCall":{"arguments":[{"id":3555,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"7786:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3554,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"7763:22:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3557,"nodeType":"RevertStatement","src":"7756:39:25"}]}},"id":3560,"nodeType":"IfStatement","src":"7563:243:25","trueBody":{"id":3549,"nodeType":"Block","src":"7613:78:25","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3545,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"7670:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:25","typeDescriptions":{}}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3542,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"7634:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3548,"nodeType":"RevertStatement","src":"7627:53:25"}]}},"id":3561,"nodeType":"IfStatement","src":"7458:348:25","trueBody":{"id":3537,"nodeType":"Block","src":"7502:55:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3534,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"7523:21:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3536,"nodeType":"RevertStatement","src":"7516:30:25"}]}},"id":3562,"nodeType":"IfStatement","src":"7362:444:25","trueBody":{"id":3529,"nodeType":"Block","src":"7397:55:25","statements":[{"functionReturnParameters":3523,"id":3528,"nodeType":"Return","src":"7411:7:25"}]}}]},"documentation":{"id":3516,"nodeType":"StructuredDocumentation","src":"7153:122:25","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3564,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:25","nodeType":"FunctionDefinition","parameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"error","nameLocation":"7314:5:25","nodeType":"VariableDeclaration","scope":3564,"src":"7301:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3518,"nodeType":"UserDefinedTypeName","pathNode":{"id":3517,"name":"RecoverError","nameLocations":["7301:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":3225,"src":"7301:12:25"},"referencedDeclaration":3225,"src":"7301:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3225","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3521,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:25","nodeType":"VariableDeclaration","scope":3564,"src":"7321:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:25"},"returnParameters":{"id":3523,"nodeType":"ParameterList","parameters":[],"src":"7352:0:25"},"scope":3565,"src":"7280:532:25","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3566,"src":"344:7470:25","usedErrors":[3228,3233,3238],"usedEvents":[]}],"src":"112:7703:25"},"id":25},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3792],"IERC5267":[861],"MessageHashUtils":[3866],"ShortString":[2562],"ShortStrings":[2773]},"id":3793,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3567,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3793,"sourceUnit":3867,"src":"139:56:26","symbolAliases":[{"foreign":{"id":3568,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"147:16:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3572,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3793,"sourceUnit":2774,"src":"196:62:26","symbolAliases":[{"foreign":{"id":3570,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"204:12:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3571,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"218:11:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3574,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3793,"sourceUnit":862,"src":"259:55:26","symbolAliases":[{"foreign":{"id":3573,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"267:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3576,"name":"IERC5267","nameLocations":["1988:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":861,"src":"1988:8:26"},"id":3577,"nodeType":"InheritanceSpecifier","src":"1988:8:26"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3575,"nodeType":"StructuredDocumentation","src":"316:1643:26","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3792,"linearizedBaseContracts":[3792,861],"name":"EIP712","nameLocation":"1978:6:26","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3579,"libraryName":{"id":3578,"name":"ShortStrings","nameLocations":["2009:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":2773,"src":"2009:12:26"},"nodeType":"UsingForDirective","src":"2003:25:26"},{"constant":true,"id":3584,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:26","nodeType":"VariableDeclaration","scope":3792,"src":"2034:140:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3581,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3586,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:26","nodeType":"VariableDeclaration","scope":3792,"src":"2373:48:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3588,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:26","nodeType":"VariableDeclaration","scope":3792,"src":"2427:40:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3590,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:26","nodeType":"VariableDeclaration","scope":3792,"src":"2473:37:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3589,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3592,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:26","nodeType":"VariableDeclaration","scope":3792,"src":"2517:37:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3594,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:26","nodeType":"VariableDeclaration","scope":3792,"src":"2560:40:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3597,"mutability":"immutable","name":"_name","nameLocation":"2637:5:26","nodeType":"VariableDeclaration","scope":3792,"src":"2607:35:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"},"typeName":{"id":3596,"nodeType":"UserDefinedTypeName","pathNode":{"id":3595,"name":"ShortString","nameLocations":["2607:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":2562,"src":"2607:11:26"},"referencedDeclaration":2562,"src":"2607:11:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3600,"mutability":"immutable","name":"_version","nameLocation":"2678:8:26","nodeType":"VariableDeclaration","scope":3792,"src":"2648:38:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"},"typeName":{"id":3599,"nodeType":"UserDefinedTypeName","pathNode":{"id":3598,"name":"ShortString","nameLocations":["2648:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":2562,"src":"2648:11:26"},"referencedDeclaration":2562,"src":"2648:11:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3602,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:26","nodeType":"VariableDeclaration","scope":3792,"src":"2692:28:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3601,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3604,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:26","nodeType":"VariableDeclaration","scope":3792,"src":"2726:31:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3603,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3661,"nodeType":"Block","src":"3383:376:26","statements":[{"expression":{"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3612,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"3393:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3615,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"3432:13:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3613,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"3401:4:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:26","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2714,"src":"3401:30:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2562_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"src":"3393:53:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"id":3618,"nodeType":"ExpressionStatement","src":"3393:53:26"},{"expression":{"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3619,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"3456:8:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3622,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"3501:16:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3620,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"3467:7:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:26","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2714,"src":"3467:33:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2562_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"src":"3456:62:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"id":3625,"nodeType":"ExpressionStatement","src":"3456:62:26"},{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3626,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"3528:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3630,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"3558:4:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3628,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:26","typeDescriptions":{}}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3627,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3634,"nodeType":"ExpressionStatement","src":"3528:36:26"},{"expression":{"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3635,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"3574:14:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3639,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"3607:7:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3637,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:26","typeDescriptions":{}}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3636,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3643,"nodeType":"ExpressionStatement","src":"3574:42:26"},{"expression":{"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3644,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"3627:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3645,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:26","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3648,"nodeType":"ExpressionStatement","src":"3627:30:26"},{"expression":{"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3649,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"3667:22:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3650,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"3692:21:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3653,"nodeType":"ExpressionStatement","src":"3667:48:26"},{"expression":{"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3654,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"3725:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3657,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3792","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3792","typeString":"contract EIP712"}],"id":3656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3655,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:26","typeDescriptions":{}}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3660,"nodeType":"ExpressionStatement","src":"3725:27:26"}]},"documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"2764:559:26","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3662,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"name","nameLocation":"3354:4:26","nodeType":"VariableDeclaration","scope":3662,"src":"3340:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3606,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3609,"mutability":"mutable","name":"version","nameLocation":"3374:7:26","nodeType":"VariableDeclaration","scope":3662,"src":"3360:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3608,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:26"},"returnParameters":{"id":3611,"nodeType":"ParameterList","parameters":[],"src":"3383:0:26"},"scope":3792,"src":"3328:431:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3687,"nodeType":"Block","src":"3907:200:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3670,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3792","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3792","typeString":"contract EIP712"}],"id":3669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3668,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:26","typeDescriptions":{}}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3672,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"3938:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3674,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:26","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3676,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"3970:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3685,"nodeType":"Block","src":"4046:55:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3682,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4067:21:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3667,"id":3684,"nodeType":"Return","src":"4060:30:26"}]},"id":3686,"nodeType":"IfStatement","src":"3917:184:26","trueBody":{"id":3681,"nodeType":"Block","src":"3986:54:26","statements":[{"expression":{"id":3679,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"4007:22:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3667,"id":3680,"nodeType":"Return","src":"4000:29:26"}]}}]},"documentation":{"id":3663,"nodeType":"StructuredDocumentation","src":"3765:75:26","text":" @dev Returns the domain separator for the current chain."},"id":3688,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:26","nodeType":"FunctionDefinition","parameters":{"id":3664,"nodeType":"ParameterList","parameters":[],"src":"3872:2:26"},"returnParameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3688,"src":"3898:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:26"},"scope":3792,"src":"3845:262:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3708,"nodeType":"Block","src":"4177:115:26","statements":[{"expression":{"arguments":[{"arguments":[{"id":3696,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"4215:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3697,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"4226:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3698,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"4239:14:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3699,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:26","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3703,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3792","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3792","typeString":"contract EIP712"}],"id":3702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3701,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:26","typeDescriptions":{}}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3694,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:26","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3693,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3692,"id":3707,"nodeType":"Return","src":"4187:98:26"}]},"id":3709,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:26","nodeType":"FunctionDefinition","parameters":{"id":3689,"nodeType":"ParameterList","parameters":[],"src":"4143:2:26"},"returnParameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3709,"src":"4168:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:26"},"scope":3792,"src":"4113:179:26","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3724,"nodeType":"Block","src":"5003:90:26","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3719,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"5053:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3721,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"5075:10:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3717,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"5020:16:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3866_$","typeString":"type(library MessageHashUtils)"}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:26","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3865,"src":"5020:32:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3716,"id":3723,"nodeType":"Return","src":"5013:73:26"}]},"documentation":{"id":3710,"nodeType":"StructuredDocumentation","src":"4298:614:26","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3725,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:26","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:26","nodeType":"VariableDeclaration","scope":3725,"src":"4943:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:26"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3725,"src":"4994:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:26"},"scope":3792,"src":"4917:176:26","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[860],"body":{"id":3766,"nodeType":"Block","src":"5472:229:26","statements":[{"expression":{"components":[{"hexValue":"0f","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3745,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"5533:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3747,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"5560:14:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3749,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:26","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3753,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3792","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3792","typeString":"contract EIP712"}],"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3751,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:26","typeDescriptions":{}}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:26","typeDescriptions":{}}},"id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3760,"nodeType":"ArrayTypeName","src":"5672:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3743,"id":3765,"nodeType":"Return","src":"5482:212:26"}]},"documentation":{"id":3726,"nodeType":"StructuredDocumentation","src":"5099:40:26","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3767,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:26","nodeType":"FunctionDefinition","parameters":{"id":3727,"nodeType":"ParameterList","parameters":[],"src":"5165:2:26"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"fields","nameLocation":"5249:6:26","nodeType":"VariableDeclaration","scope":3767,"src":"5242:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3728,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"name","nameLocation":"5283:4:26","nodeType":"VariableDeclaration","scope":3767,"src":"5269:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3730,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3733,"mutability":"mutable","name":"version","nameLocation":"5315:7:26","nodeType":"VariableDeclaration","scope":3767,"src":"5301:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3732,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3735,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:26","nodeType":"VariableDeclaration","scope":3767,"src":"5336:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3734,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:26","nodeType":"VariableDeclaration","scope":3767,"src":"5365:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3736,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3739,"mutability":"mutable","name":"salt","nameLocation":"5412:4:26","nodeType":"VariableDeclaration","scope":3767,"src":"5404:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3742,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:26","nodeType":"VariableDeclaration","scope":3767,"src":"5430:27:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3741,"nodeType":"ArrayTypeName","src":"5430:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:26"},"scope":3792,"src":"5144:557:26","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3778,"nodeType":"Block","src":"6082:65:26","statements":[{"expression":{"arguments":[{"id":3775,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"6126:13:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3773,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"6099:5:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:26","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2741,"src":"6099:26:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2562_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2562_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3772,"id":3777,"nodeType":"Return","src":"6092:48:26"}]},"documentation":{"id":3768,"nodeType":"StructuredDocumentation","src":"5707:256:26","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3779,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:26","nodeType":"FunctionDefinition","parameters":{"id":3769,"nodeType":"ParameterList","parameters":[],"src":"6041:2:26"},"returnParameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3779,"src":"6067:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3770,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:26"},"scope":3792,"src":"6021:126:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3790,"nodeType":"Block","src":"6537:71:26","statements":[{"expression":{"arguments":[{"id":3787,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"6584:16:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3785,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"6554:8:26","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2562","typeString":"ShortString"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:26","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2741,"src":"6554:29:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2562_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2562_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3784,"id":3789,"nodeType":"Return","src":"6547:54:26"}]},"documentation":{"id":3780,"nodeType":"StructuredDocumentation","src":"6153:262:26","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3791,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:26","nodeType":"FunctionDefinition","parameters":{"id":3781,"nodeType":"ParameterList","parameters":[],"src":"6496:2:26"},"returnParameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3791,"src":"6522:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3782,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:26"},"scope":3792,"src":"6473:135:26","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3793,"src":"1960:4650:26","usedErrors":[2570,2572],"usedEvents":[841]}],"src":"113:6498:26"},"id":26},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3866],"Strings":[3217]},"id":3867,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3794,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3867,"sourceUnit":3218,"src":"149:39:27","symbolAliases":[{"foreign":{"id":3795,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"157:7:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"190:330:27","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3866,"linearizedBaseContracts":[3866],"name":"MessageHashUtils","nameLocation":"529:16:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":3806,"nodeType":"Block","src":"1314:341:27","statements":[{"AST":{"nativeSrc":"1349:300:27","nodeType":"YulBlock","src":"1349:300:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:27","nodeType":"YulLiteral","src":"1370:4:27","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:27","nodeType":"YulLiteral","src":"1376:34:27","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:27","nodeType":"YulIdentifier","src":"1363:6:27"},"nativeSrc":"1363:48:27","nodeType":"YulFunctionCall","src":"1363:48:27"},"nativeSrc":"1363:48:27","nodeType":"YulExpressionStatement","src":"1363:48:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:27","nodeType":"YulLiteral","src":"1472:4:27","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:27","nodeType":"YulIdentifier","src":"1478:11:27"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:27","nodeType":"YulIdentifier","src":"1465:6:27"},"nativeSrc":"1465:25:27","nodeType":"YulFunctionCall","src":"1465:25:27"},"nativeSrc":"1465:25:27","nodeType":"YulExpressionStatement","src":"1465:25:27"},{"nativeSrc":"1544:31:27","nodeType":"YulAssignment","src":"1544:31:27","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:27","nodeType":"YulLiteral","src":"1564:4:27","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:27","nodeType":"YulLiteral","src":"1570:4:27","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:27","nodeType":"YulIdentifier","src":"1554:9:27"},"nativeSrc":"1554:21:27","nodeType":"YulFunctionCall","src":"1554:21:27"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:27","nodeType":"YulIdentifier","src":"1544:6:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3803,"isOffset":false,"isSlot":false,"src":"1544:6:27","valueSize":1},{"declaration":3800,"isOffset":false,"isSlot":false,"src":"1478:11:27","valueSize":1}],"flags":["memory-safe"],"id":3805,"nodeType":"InlineAssembly","src":"1324:325:27"}]},"documentation":{"id":3798,"nodeType":"StructuredDocumentation","src":"552:665:27","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:27","nodeType":"FunctionDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:27","nodeType":"VariableDeclaration","scope":3807,"src":"1254:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:27"},"returnParameters":{"id":3804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"digest","nameLocation":"1306:6:27","nodeType":"VariableDeclaration","scope":3807,"src":"1298:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:27"},"scope":3866,"src":"1222:433:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3832,"nodeType":"Block","src":"2207:143:27","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3824,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"2316:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:27","memberName":"length","nodeType":"MemberAccess","src":"2316:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3822,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"2299:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3217_$","typeString":"type(library Strings)"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:27","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2965,"src":"2299:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3820,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:27","typeDescriptions":{}}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3828,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"2334:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3816,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:27","typeDescriptions":{}}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:27","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:27","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3815,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3814,"id":3831,"nodeType":"Return","src":"2217:126:27"}]},"documentation":{"id":3808,"nodeType":"StructuredDocumentation","src":"1661:455:27","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3833,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:27","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"message","nameLocation":"2166:7:27","nodeType":"VariableDeclaration","scope":3833,"src":"2153:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3809,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:27"},"returnParameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3833,"src":"2198:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:27"},"scope":3866,"src":"2121:229:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3852,"nodeType":"Block","src":"2804:80:27","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3847,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"2860:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3848,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"2871:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3844,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:27","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3843,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3842,"id":3851,"nodeType":"Return","src":"2814:63:27"}]},"documentation":{"id":3834,"nodeType":"StructuredDocumentation","src":"2356:332:27","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3853,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:27","nodeType":"FunctionDefinition","parameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3836,"mutability":"mutable","name":"validator","nameLocation":"2742:9:27","nodeType":"VariableDeclaration","scope":3853,"src":"2734:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3835,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3838,"mutability":"mutable","name":"data","nameLocation":"2766:4:27","nodeType":"VariableDeclaration","scope":3853,"src":"2753:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3837,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:27"},"returnParameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3853,"src":"2795:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:27"},"scope":3866,"src":"2693:191:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3864,"nodeType":"Block","src":"3435:265:27","statements":[{"AST":{"nativeSrc":"3470:224:27","nodeType":"YulBlock","src":"3470:224:27","statements":[{"nativeSrc":"3484:22:27","nodeType":"YulVariableDeclaration","src":"3484:22:27","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:27","nodeType":"YulLiteral","src":"3501:4:27","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:27","nodeType":"YulIdentifier","src":"3495:5:27"},"nativeSrc":"3495:11:27","nodeType":"YulFunctionCall","src":"3495:11:27"},"variables":[{"name":"ptr","nativeSrc":"3488:3:27","nodeType":"YulTypedName","src":"3488:3:27","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:27","nodeType":"YulIdentifier","src":"3526:3:27"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:27","nodeType":"YulLiteral","src":"3531:10:27","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:27","nodeType":"YulIdentifier","src":"3519:6:27"},"nativeSrc":"3519:23:27","nodeType":"YulFunctionCall","src":"3519:23:27"},"nativeSrc":"3519:23:27","nodeType":"YulExpressionStatement","src":"3519:23:27"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:27","nodeType":"YulIdentifier","src":"3566:3:27"},{"kind":"number","nativeSrc":"3571:4:27","nodeType":"YulLiteral","src":"3571:4:27","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:27","nodeType":"YulIdentifier","src":"3562:3:27"},"nativeSrc":"3562:14:27","nodeType":"YulFunctionCall","src":"3562:14:27"},{"name":"domainSeparator","nativeSrc":"3578:15:27","nodeType":"YulIdentifier","src":"3578:15:27"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:27","nodeType":"YulIdentifier","src":"3555:6:27"},"nativeSrc":"3555:39:27","nodeType":"YulFunctionCall","src":"3555:39:27"},"nativeSrc":"3555:39:27","nodeType":"YulExpressionStatement","src":"3555:39:27"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:27","nodeType":"YulIdentifier","src":"3618:3:27"},{"kind":"number","nativeSrc":"3623:4:27","nodeType":"YulLiteral","src":"3623:4:27","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:27","nodeType":"YulIdentifier","src":"3614:3:27"},"nativeSrc":"3614:14:27","nodeType":"YulFunctionCall","src":"3614:14:27"},{"name":"structHash","nativeSrc":"3630:10:27","nodeType":"YulIdentifier","src":"3630:10:27"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:27","nodeType":"YulIdentifier","src":"3607:6:27"},"nativeSrc":"3607:34:27","nodeType":"YulFunctionCall","src":"3607:34:27"},"nativeSrc":"3607:34:27","nodeType":"YulExpressionStatement","src":"3607:34:27"},{"nativeSrc":"3654:30:27","nodeType":"YulAssignment","src":"3654:30:27","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:27","nodeType":"YulIdentifier","src":"3674:3:27"},{"kind":"number","nativeSrc":"3679:4:27","nodeType":"YulLiteral","src":"3679:4:27","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:27","nodeType":"YulIdentifier","src":"3664:9:27"},"nativeSrc":"3664:20:27","nodeType":"YulFunctionCall","src":"3664:20:27"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:27","nodeType":"YulIdentifier","src":"3654:6:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3861,"isOffset":false,"isSlot":false,"src":"3654:6:27","valueSize":1},{"declaration":3856,"isOffset":false,"isSlot":false,"src":"3578:15:27","valueSize":1},{"declaration":3858,"isOffset":false,"isSlot":false,"src":"3630:10:27","valueSize":1}],"flags":["memory-safe"],"id":3863,"nodeType":"InlineAssembly","src":"3445:249:27"}]},"documentation":{"id":3854,"nodeType":"StructuredDocumentation","src":"2890:431:27","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3865,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:27","nodeType":"FunctionDefinition","parameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:27","nodeType":"VariableDeclaration","scope":3865,"src":"3351:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:27","nodeType":"VariableDeclaration","scope":3865,"src":"3376:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:27"},"returnParameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3861,"mutability":"mutable","name":"digest","nameLocation":"3427:6:27","nodeType":"VariableDeclaration","scope":3865,"src":"3419:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:27"},"scope":3866,"src":"3326:374:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3867,"src":"521:3181:27","usedErrors":[],"usedEvents":[]}],"src":"123:3580:27"},"id":27},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5472],"Panic":[2439],"SafeCast":[7237]},"id":5473,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3868,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3870,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5473,"sourceUnit":2440,"src":"129:35:28","symbolAliases":[{"foreign":{"id":3869,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"137:5:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3872,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5473,"sourceUnit":7238,"src":"165:40:28","symbolAliases":[{"foreign":{"id":3871,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"173:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3873,"nodeType":"StructuredDocumentation","src":"207:73:28","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5472,"linearizedBaseContracts":[5472],"name":"Math","nameLocation":"289:4:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3878,"members":[{"id":3874,"name":"Floor","nameLocation":"324:5:28","nodeType":"EnumValue","src":"324:5:28"},{"id":3875,"name":"Ceil","nameLocation":"367:4:28","nodeType":"EnumValue","src":"367:4:28"},{"id":3876,"name":"Trunc","nameLocation":"409:5:28","nodeType":"EnumValue","src":"409:5:28"},{"id":3877,"name":"Expand","nameLocation":"439:6:28","nodeType":"EnumValue","src":"439:6:28"}],"name":"Rounding","nameLocation":"305:8:28","nodeType":"EnumDefinition","src":"300:169:28"},{"body":{"id":3909,"nodeType":"Block","src":"677:140:28","statements":[{"id":3908,"nodeType":"UncheckedBlock","src":"687:124:28","statements":[{"assignments":[3891],"declarations":[{"constant":false,"id":3891,"mutability":"mutable","name":"c","nameLocation":"719:1:28","nodeType":"VariableDeclaration","scope":3908,"src":"711:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3895,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3892,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"723:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3893,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"727:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3896,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"746:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"750:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3903,"nodeType":"IfStatement","src":"742:28:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3889,"id":3902,"nodeType":"Return","src":"753:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3905,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"798:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3889,"id":3907,"nodeType":"Return","src":"784:16:28"}]}]},"documentation":{"id":3879,"nodeType":"StructuredDocumentation","src":"475:106:28","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3910,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:28","nodeType":"FunctionDefinition","parameters":{"id":3884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3881,"mutability":"mutable","name":"a","nameLocation":"610:1:28","nodeType":"VariableDeclaration","scope":3910,"src":"602:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3883,"mutability":"mutable","name":"b","nameLocation":"621:1:28","nodeType":"VariableDeclaration","scope":3910,"src":"613:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:28"},"returnParameters":{"id":3889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"success","nameLocation":"652:7:28","nodeType":"VariableDeclaration","scope":3910,"src":"647:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3885,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"result","nameLocation":"669:6:28","nodeType":"VariableDeclaration","scope":3910,"src":"661:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:28"},"scope":5472,"src":"586:231:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3937,"nodeType":"Block","src":"1028:113:28","statements":[{"id":3936,"nodeType":"UncheckedBlock","src":"1038:97:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3922,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"1066:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3923,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"1070:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3929,"nodeType":"IfStatement","src":"1062:28:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3921,"id":3928,"nodeType":"Return","src":"1073:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"1118:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3932,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"1122:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3921,"id":3935,"nodeType":"Return","src":"1104:20:28"}]}]},"documentation":{"id":3911,"nodeType":"StructuredDocumentation","src":"823:109:28","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3938,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:28","nodeType":"FunctionDefinition","parameters":{"id":3916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3913,"mutability":"mutable","name":"a","nameLocation":"961:1:28","nodeType":"VariableDeclaration","scope":3938,"src":"953:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3915,"mutability":"mutable","name":"b","nameLocation":"972:1:28","nodeType":"VariableDeclaration","scope":3938,"src":"964:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:28"},"returnParameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"mutability":"mutable","name":"success","nameLocation":"1003:7:28","nodeType":"VariableDeclaration","scope":3938,"src":"998:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3917,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"result","nameLocation":"1020:6:28","nodeType":"VariableDeclaration","scope":3938,"src":"1012:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:28"},"scope":5472,"src":"937:204:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3979,"nodeType":"Block","src":"1355:417:28","statements":[{"id":3978,"nodeType":"UncheckedBlock","src":"1365:401:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3950,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"1623:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3957,"nodeType":"IfStatement","src":"1619:28:28","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3949,"id":3956,"nodeType":"Return","src":"1631:16:28"}},{"assignments":[3959],"declarations":[{"constant":false,"id":3959,"mutability":"mutable","name":"c","nameLocation":"1669:1:28","nodeType":"VariableDeclaration","scope":3978,"src":"1661:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3963,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3960,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"1673:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3961,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"1677:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3964,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"1696:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"1700:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3967,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"1705:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3973,"nodeType":"IfStatement","src":"1692:33:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3949,"id":3972,"nodeType":"Return","src":"1708:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3975,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"1753:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3949,"id":3977,"nodeType":"Return","src":"1739:16:28"}]}]},"documentation":{"id":3939,"nodeType":"StructuredDocumentation","src":"1147:112:28","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3980,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:28","nodeType":"FunctionDefinition","parameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"a","nameLocation":"1288:1:28","nodeType":"VariableDeclaration","scope":3980,"src":"1280:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3943,"mutability":"mutable","name":"b","nameLocation":"1299:1:28","nodeType":"VariableDeclaration","scope":3980,"src":"1291:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:28"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"success","nameLocation":"1330:7:28","nodeType":"VariableDeclaration","scope":3980,"src":"1325:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3945,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3948,"mutability":"mutable","name":"result","nameLocation":"1347:6:28","nodeType":"VariableDeclaration","scope":3980,"src":"1339:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:28"},"scope":5472,"src":"1264:508:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4007,"nodeType":"Block","src":"1987:114:28","statements":[{"id":4006,"nodeType":"UncheckedBlock","src":"1997:98:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3992,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"2025:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3999,"nodeType":"IfStatement","src":"2021:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3991,"id":3998,"nodeType":"Return","src":"2033:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4001,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"2078:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4002,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"2082:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3991,"id":4005,"nodeType":"Return","src":"2064:20:28"}]}]},"documentation":{"id":3981,"nodeType":"StructuredDocumentation","src":"1778:113:28","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4008,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:28","nodeType":"FunctionDefinition","parameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"a","nameLocation":"1920:1:28","nodeType":"VariableDeclaration","scope":4008,"src":"1912:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3985,"mutability":"mutable","name":"b","nameLocation":"1931:1:28","nodeType":"VariableDeclaration","scope":4008,"src":"1923:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:28"},"returnParameters":{"id":3991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"success","nameLocation":"1962:7:28","nodeType":"VariableDeclaration","scope":4008,"src":"1957:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3987,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3990,"mutability":"mutable","name":"result","nameLocation":"1979:6:28","nodeType":"VariableDeclaration","scope":4008,"src":"1971:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3989,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:28"},"scope":5472,"src":"1896:205:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4035,"nodeType":"Block","src":"2326:114:28","statements":[{"id":4034,"nodeType":"UncheckedBlock","src":"2336:98:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4020,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"2364:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4027,"nodeType":"IfStatement","src":"2360:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4019,"id":4026,"nodeType":"Return","src":"2372:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":4028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4029,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"2417:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4030,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"2421:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4019,"id":4033,"nodeType":"Return","src":"2403:20:28"}]}]},"documentation":{"id":4009,"nodeType":"StructuredDocumentation","src":"2107:123:28","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4036,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:28","nodeType":"FunctionDefinition","parameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4011,"mutability":"mutable","name":"a","nameLocation":"2259:1:28","nodeType":"VariableDeclaration","scope":4036,"src":"2251:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4013,"mutability":"mutable","name":"b","nameLocation":"2270:1:28","nodeType":"VariableDeclaration","scope":4036,"src":"2262:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4012,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:28"},"returnParameters":{"id":4019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"success","nameLocation":"2301:7:28","nodeType":"VariableDeclaration","scope":4036,"src":"2296:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4015,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4018,"mutability":"mutable","name":"result","nameLocation":"2318:6:28","nodeType":"VariableDeclaration","scope":4036,"src":"2310:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:28"},"scope":5472,"src":"2235:205:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4062,"nodeType":"Block","src":"2912:207:28","statements":[{"id":4061,"nodeType":"UncheckedBlock","src":"2922:191:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4048,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"3060:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4049,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"3066:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4050,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"3070:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4055,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"3091:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4053,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"3075:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"3075:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4047,"id":4060,"nodeType":"Return","src":"3053:49:28"}]}]},"documentation":{"id":4037,"nodeType":"StructuredDocumentation","src":"2446:374:28","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4063,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:28","nodeType":"FunctionDefinition","parameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4039,"mutability":"mutable","name":"condition","nameLocation":"2847:9:28","nodeType":"VariableDeclaration","scope":4063,"src":"2842:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4038,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4041,"mutability":"mutable","name":"a","nameLocation":"2866:1:28","nodeType":"VariableDeclaration","scope":4063,"src":"2858:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4040,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4043,"mutability":"mutable","name":"b","nameLocation":"2877:1:28","nodeType":"VariableDeclaration","scope":4063,"src":"2869:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:28"},"returnParameters":{"id":4047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4063,"src":"2903:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4045,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:28"},"scope":5472,"src":"2825:294:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4081,"nodeType":"Block","src":"3256:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"3281:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4075,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"3285:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4077,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"3288:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4078,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"3291:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4073,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"3273:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4072,"id":4080,"nodeType":"Return","src":"3266:27:28"}]},"documentation":{"id":4064,"nodeType":"StructuredDocumentation","src":"3125:59:28","text":" @dev Returns the largest of two numbers."},"id":4082,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:28","nodeType":"FunctionDefinition","parameters":{"id":4069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"a","nameLocation":"3210:1:28","nodeType":"VariableDeclaration","scope":4082,"src":"3202:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4068,"mutability":"mutable","name":"b","nameLocation":"3221:1:28","nodeType":"VariableDeclaration","scope":4082,"src":"3213:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4067,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:28"},"returnParameters":{"id":4072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4082,"src":"3247:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4070,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:28"},"scope":5472,"src":"3189:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4100,"nodeType":"Block","src":"3438:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4093,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"3463:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4094,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"3467:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"3470:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4097,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"3473:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4092,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"3455:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4091,"id":4099,"nodeType":"Return","src":"3448:27:28"}]},"documentation":{"id":4083,"nodeType":"StructuredDocumentation","src":"3306:60:28","text":" @dev Returns the smallest of two numbers."},"id":4101,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:28","nodeType":"FunctionDefinition","parameters":{"id":4088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4085,"mutability":"mutable","name":"a","nameLocation":"3392:1:28","nodeType":"VariableDeclaration","scope":4101,"src":"3384:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4084,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4087,"mutability":"mutable","name":"b","nameLocation":"3403:1:28","nodeType":"VariableDeclaration","scope":4101,"src":"3395:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4086,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:28"},"returnParameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4101,"src":"3429:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:28"},"scope":5472,"src":"3371:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4123,"nodeType":"Block","src":"3666:82:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"3721:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4112,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3725:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4115,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"3731:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4116,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3735:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4110,"id":4122,"nodeType":"Return","src":"3713:28:28"}]},"documentation":{"id":4102,"nodeType":"StructuredDocumentation","src":"3488:102:28","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4124,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:28","nodeType":"FunctionDefinition","parameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"a","nameLocation":"3620:1:28","nodeType":"VariableDeclaration","scope":4124,"src":"3612:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4103,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4106,"mutability":"mutable","name":"b","nameLocation":"3631:1:28","nodeType":"VariableDeclaration","scope":4124,"src":"3623:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4105,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:28"},"returnParameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4124,"src":"3657:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:28"},"scope":5472,"src":"3595:153:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4164,"nodeType":"Block","src":"4040:633:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4134,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"4054:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4145,"nodeType":"IfStatement","src":"4050:150:28","trueBody":{"id":4144,"nodeType":"Block","src":"4062:138:28","statements":[{"expression":{"arguments":[{"expression":{"id":4140,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4166:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2439_$","typeString":"type(library Panic)"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2406,"src":"4166:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4137,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4154:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2439_$","typeString":"type(library Panic)"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2438,"src":"4154:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4143,"nodeType":"ExpressionStatement","src":"4154:35:28"}]}},{"id":4163,"nodeType":"UncheckedBlock","src":"4583:84:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4148,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"4630:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4146,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"4614:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"4614:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"4641:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4156,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"4650:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4133,"id":4162,"nodeType":"Return","src":"4607:49:28"}]}]},"documentation":{"id":4125,"nodeType":"StructuredDocumentation","src":"3754:210:28","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4165,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:28","nodeType":"FunctionDefinition","parameters":{"id":4130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"a","nameLocation":"3994:1:28","nodeType":"VariableDeclaration","scope":4165,"src":"3986:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4129,"mutability":"mutable","name":"b","nameLocation":"4005:1:28","nodeType":"VariableDeclaration","scope":4165,"src":"3997:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:28"},"returnParameters":{"id":4133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4165,"src":"4031:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4131,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:28"},"scope":5472,"src":"3969:704:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4301,"nodeType":"Block","src":"5094:4128:28","statements":[{"id":4300,"nodeType":"UncheckedBlock","src":"5104:4112:28","statements":[{"assignments":[4178],"declarations":[{"constant":false,"id":4178,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:28","nodeType":"VariableDeclaration","scope":4300,"src":"5433:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4182,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4179,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"5449:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4180,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"5453:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:28"},{"assignments":[4184],"declarations":[{"constant":false,"id":4184,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:28","nodeType":"VariableDeclaration","scope":4300,"src":"5513:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4185,"nodeType":"VariableDeclarationStatement","src":"5513:13:28"},{"AST":{"nativeSrc":"5593:122:28","nodeType":"YulBlock","src":"5593:122:28","statements":[{"nativeSrc":"5611:30:28","nodeType":"YulVariableDeclaration","src":"5611:30:28","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:28","nodeType":"YulIdentifier","src":"5628:1:28"},{"name":"y","nativeSrc":"5631:1:28","nodeType":"YulIdentifier","src":"5631:1:28"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:28","nodeType":"YulLiteral","src":"5638:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:28","nodeType":"YulIdentifier","src":"5634:3:28"},"nativeSrc":"5634:6:28","nodeType":"YulFunctionCall","src":"5634:6:28"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:28","nodeType":"YulIdentifier","src":"5621:6:28"},"nativeSrc":"5621:20:28","nodeType":"YulFunctionCall","src":"5621:20:28"},"variables":[{"name":"mm","nativeSrc":"5615:2:28","nodeType":"YulTypedName","src":"5615:2:28","type":""}]},{"nativeSrc":"5658:43:28","nodeType":"YulAssignment","src":"5658:43:28","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:28","nodeType":"YulIdentifier","src":"5675:2:28"},{"name":"prod0","nativeSrc":"5679:5:28","nodeType":"YulIdentifier","src":"5679:5:28"}],"functionName":{"name":"sub","nativeSrc":"5671:3:28","nodeType":"YulIdentifier","src":"5671:3:28"},"nativeSrc":"5671:14:28","nodeType":"YulFunctionCall","src":"5671:14:28"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:28","nodeType":"YulIdentifier","src":"5690:2:28"},{"name":"prod0","nativeSrc":"5694:5:28","nodeType":"YulIdentifier","src":"5694:5:28"}],"functionName":{"name":"lt","nativeSrc":"5687:2:28","nodeType":"YulIdentifier","src":"5687:2:28"},"nativeSrc":"5687:13:28","nodeType":"YulFunctionCall","src":"5687:13:28"}],"functionName":{"name":"sub","nativeSrc":"5667:3:28","nodeType":"YulIdentifier","src":"5667:3:28"},"nativeSrc":"5667:34:28","nodeType":"YulFunctionCall","src":"5667:34:28"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:28","nodeType":"YulIdentifier","src":"5658:5:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4178,"isOffset":false,"isSlot":false,"src":"5679:5:28","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"5694:5:28","valueSize":1},{"declaration":4184,"isOffset":false,"isSlot":false,"src":"5658:5:28","valueSize":1},{"declaration":4168,"isOffset":false,"isSlot":false,"src":"5628:1:28","valueSize":1},{"declaration":4170,"isOffset":false,"isSlot":false,"src":"5631:1:28","valueSize":1}],"id":4186,"nodeType":"InlineAssembly","src":"5584:131:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4187,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"5796:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4195,"nodeType":"IfStatement","src":"5792:368:28","trueBody":{"id":4194,"nodeType":"Block","src":"5808:352:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4190,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"6126:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4191,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"6134:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4176,"id":4193,"nodeType":"Return","src":"6119:26:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4196,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"6270:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4197,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"6285:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4214,"nodeType":"IfStatement","src":"6266:143:28","trueBody":{"id":4213,"nodeType":"Block","src":"6292:117:28","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"6330:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4206,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"6348:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2439_$","typeString":"type(library Panic)"}},"id":4207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2406,"src":"6348:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4208,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"6372:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2439_$","typeString":"type(library Panic)"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:28","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2402,"src":"6372:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4202,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"6322:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4199,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"6310:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2439_$","typeString":"type(library Panic)"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2438,"src":"6310:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4212,"nodeType":"ExpressionStatement","src":"6310:84:28"}]}},{"assignments":[4216],"declarations":[{"constant":false,"id":4216,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:28","nodeType":"VariableDeclaration","scope":4300,"src":"6664:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4215,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4217,"nodeType":"VariableDeclarationStatement","src":"6664:17:28"},{"AST":{"nativeSrc":"6704:291:28","nodeType":"YulBlock","src":"6704:291:28","statements":[{"nativeSrc":"6773:38:28","nodeType":"YulAssignment","src":"6773:38:28","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:28","nodeType":"YulIdentifier","src":"6793:1:28"},{"name":"y","nativeSrc":"6796:1:28","nodeType":"YulIdentifier","src":"6796:1:28"},{"name":"denominator","nativeSrc":"6799:11:28","nodeType":"YulIdentifier","src":"6799:11:28"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:28","nodeType":"YulIdentifier","src":"6786:6:28"},"nativeSrc":"6786:25:28","nodeType":"YulFunctionCall","src":"6786:25:28"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:28","nodeType":"YulIdentifier","src":"6773:9:28"}]},{"nativeSrc":"6893:41:28","nodeType":"YulAssignment","src":"6893:41:28","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:28","nodeType":"YulIdentifier","src":"6906:5:28"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:28","nodeType":"YulIdentifier","src":"6916:9:28"},{"name":"prod0","nativeSrc":"6927:5:28","nodeType":"YulIdentifier","src":"6927:5:28"}],"functionName":{"name":"gt","nativeSrc":"6913:2:28","nodeType":"YulIdentifier","src":"6913:2:28"},"nativeSrc":"6913:20:28","nodeType":"YulFunctionCall","src":"6913:20:28"}],"functionName":{"name":"sub","nativeSrc":"6902:3:28","nodeType":"YulIdentifier","src":"6902:3:28"},"nativeSrc":"6902:32:28","nodeType":"YulFunctionCall","src":"6902:32:28"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:28","nodeType":"YulIdentifier","src":"6893:5:28"}]},{"nativeSrc":"6951:30:28","nodeType":"YulAssignment","src":"6951:30:28","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:28","nodeType":"YulIdentifier","src":"6964:5:28"},{"name":"remainder","nativeSrc":"6971:9:28","nodeType":"YulIdentifier","src":"6971:9:28"}],"functionName":{"name":"sub","nativeSrc":"6960:3:28","nodeType":"YulIdentifier","src":"6960:3:28"},"nativeSrc":"6960:21:28","nodeType":"YulFunctionCall","src":"6960:21:28"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:28","nodeType":"YulIdentifier","src":"6951:5:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4172,"isOffset":false,"isSlot":false,"src":"6799:11:28","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"6927:5:28","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"6951:5:28","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"6964:5:28","valueSize":1},{"declaration":4184,"isOffset":false,"isSlot":false,"src":"6893:5:28","valueSize":1},{"declaration":4184,"isOffset":false,"isSlot":false,"src":"6906:5:28","valueSize":1},{"declaration":4216,"isOffset":false,"isSlot":false,"src":"6773:9:28","valueSize":1},{"declaration":4216,"isOffset":false,"isSlot":false,"src":"6916:9:28","valueSize":1},{"declaration":4216,"isOffset":false,"isSlot":false,"src":"6971:9:28","valueSize":1},{"declaration":4168,"isOffset":false,"isSlot":false,"src":"6793:1:28","valueSize":1},{"declaration":4170,"isOffset":false,"isSlot":false,"src":"6796:1:28","valueSize":1}],"id":4218,"nodeType":"InlineAssembly","src":"6695:300:28"},{"assignments":[4220],"declarations":[{"constant":false,"id":4220,"mutability":"mutable","name":"twos","nameLocation":"7207:4:28","nodeType":"VariableDeclaration","scope":4300,"src":"7199:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4227,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4221,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"7214:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4223,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"7233:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:28"},{"AST":{"nativeSrc":"7268:366:28","nodeType":"YulBlock","src":"7268:366:28","statements":[{"nativeSrc":"7333:37:28","nodeType":"YulAssignment","src":"7333:37:28","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:28","nodeType":"YulIdentifier","src":"7352:11:28"},{"name":"twos","nativeSrc":"7365:4:28","nodeType":"YulIdentifier","src":"7365:4:28"}],"functionName":{"name":"div","nativeSrc":"7348:3:28","nodeType":"YulIdentifier","src":"7348:3:28"},"nativeSrc":"7348:22:28","nodeType":"YulFunctionCall","src":"7348:22:28"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:28","nodeType":"YulIdentifier","src":"7333:11:28"}]},{"nativeSrc":"7437:25:28","nodeType":"YulAssignment","src":"7437:25:28","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:28","nodeType":"YulIdentifier","src":"7450:5:28"},{"name":"twos","nativeSrc":"7457:4:28","nodeType":"YulIdentifier","src":"7457:4:28"}],"functionName":{"name":"div","nativeSrc":"7446:3:28","nodeType":"YulIdentifier","src":"7446:3:28"},"nativeSrc":"7446:16:28","nodeType":"YulFunctionCall","src":"7446:16:28"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:28","nodeType":"YulIdentifier","src":"7437:5:28"}]},{"nativeSrc":"7581:39:28","nodeType":"YulAssignment","src":"7581:39:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:28","nodeType":"YulLiteral","src":"7601:1:28","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:28","nodeType":"YulIdentifier","src":"7604:4:28"}],"functionName":{"name":"sub","nativeSrc":"7597:3:28","nodeType":"YulIdentifier","src":"7597:3:28"},"nativeSrc":"7597:12:28","nodeType":"YulFunctionCall","src":"7597:12:28"},{"name":"twos","nativeSrc":"7611:4:28","nodeType":"YulIdentifier","src":"7611:4:28"}],"functionName":{"name":"div","nativeSrc":"7593:3:28","nodeType":"YulIdentifier","src":"7593:3:28"},"nativeSrc":"7593:23:28","nodeType":"YulFunctionCall","src":"7593:23:28"},{"kind":"number","nativeSrc":"7618:1:28","nodeType":"YulLiteral","src":"7618:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:28","nodeType":"YulIdentifier","src":"7589:3:28"},"nativeSrc":"7589:31:28","nodeType":"YulFunctionCall","src":"7589:31:28"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:28","nodeType":"YulIdentifier","src":"7581:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4172,"isOffset":false,"isSlot":false,"src":"7333:11:28","valueSize":1},{"declaration":4172,"isOffset":false,"isSlot":false,"src":"7352:11:28","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"7437:5:28","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"7450:5:28","valueSize":1},{"declaration":4220,"isOffset":false,"isSlot":false,"src":"7365:4:28","valueSize":1},{"declaration":4220,"isOffset":false,"isSlot":false,"src":"7457:4:28","valueSize":1},{"declaration":4220,"isOffset":false,"isSlot":false,"src":"7581:4:28","valueSize":1},{"declaration":4220,"isOffset":false,"isSlot":false,"src":"7604:4:28","valueSize":1},{"declaration":4220,"isOffset":false,"isSlot":false,"src":"7611:4:28","valueSize":1}],"id":4228,"nodeType":"InlineAssembly","src":"7259:375:28"},{"expression":{"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4229,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"7700:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4230,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"7709:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4231,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"7717:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4234,"nodeType":"ExpressionStatement","src":"7700:21:28"},{"assignments":[4236],"declarations":[{"constant":false,"id":4236,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:28","nodeType":"VariableDeclaration","scope":4300,"src":"8056:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4243,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4238,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"8079:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:28"},{"expression":{"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4244,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8312:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"8327:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4247,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8341:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4251,"nodeType":"ExpressionStatement","src":"8312:36:28"},{"expression":{"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4252,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8382:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4254,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"8397:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4255,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8411:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4259,"nodeType":"ExpressionStatement","src":"8382:36:28"},{"expression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4260,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8454:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4262,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"8469:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4263,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8483:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4267,"nodeType":"ExpressionStatement","src":"8454:36:28"},{"expression":{"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4268,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8525:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4270,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"8540:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4271,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8554:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4275,"nodeType":"ExpressionStatement","src":"8525:36:28"},{"expression":{"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4276,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8598:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"8613:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4279,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8627:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4283,"nodeType":"ExpressionStatement","src":"8598:36:28"},{"expression":{"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4284,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8672:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4286,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"8687:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4287,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8701:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4291,"nodeType":"ExpressionStatement","src":"8672:36:28"},{"expression":{"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"9154:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4293,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"9163:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4294,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"9171:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4297,"nodeType":"ExpressionStatement","src":"9154:24:28"},{"expression":{"id":4298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"9199:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4176,"id":4299,"nodeType":"Return","src":"9192:13:28"}]}]},"documentation":{"id":4166,"nodeType":"StructuredDocumentation","src":"4679:312:28","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4302,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:28","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"x","nameLocation":"5020:1:28","nodeType":"VariableDeclaration","scope":4302,"src":"5012:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"y","nameLocation":"5031:1:28","nodeType":"VariableDeclaration","scope":4302,"src":"5023:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:28","nodeType":"VariableDeclaration","scope":4302,"src":"5034:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:28"},"returnParameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"result","nameLocation":"5086:6:28","nodeType":"VariableDeclaration","scope":4302,"src":"5078:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:28"},"scope":5472,"src":"4996:4226:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4338,"nodeType":"Block","src":"9461:128:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4318,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"9485:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4319,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"9488:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4320,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"9491:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4317,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4302,4339],"referencedDeclaration":4302,"src":"9478:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4325,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"9539:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}],"id":4324,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"9522:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3878_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4328,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"9559:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4329,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"9562:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4330,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"9565:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4327,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4322,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"9506:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"9506:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4316,"id":4337,"nodeType":"Return","src":"9471:111:28"}]},"documentation":{"id":4303,"nodeType":"StructuredDocumentation","src":"9228:118:28","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4339,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:28","nodeType":"FunctionDefinition","parameters":{"id":4313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"x","nameLocation":"9375:1:28","nodeType":"VariableDeclaration","scope":4339,"src":"9367:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4304,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4307,"mutability":"mutable","name":"y","nameLocation":"9386:1:28","nodeType":"VariableDeclaration","scope":4339,"src":"9378:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4309,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:28","nodeType":"VariableDeclaration","scope":4339,"src":"9389:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4312,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:28","nodeType":"VariableDeclaration","scope":4339,"src":"9410:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"},"typeName":{"id":4311,"nodeType":"UserDefinedTypeName","pathNode":{"id":4310,"name":"Rounding","nameLocations":["9410:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"9410:8:28"},"referencedDeclaration":3878,"src":"9410:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:28"},"returnParameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4339,"src":"9452:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:28"},"scope":5472,"src":"9351:238:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4435,"nodeType":"Block","src":"10223:1849:28","statements":[{"id":4434,"nodeType":"UncheckedBlock","src":"10233:1833:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4349,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"10261:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4354,"nodeType":"IfStatement","src":"10257:20:28","trueBody":{"expression":{"hexValue":"30","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4348,"id":4353,"nodeType":"Return","src":"10269:8:28"}},{"assignments":[4356],"declarations":[{"constant":false,"id":4356,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:28","nodeType":"VariableDeclaration","scope":4434,"src":"10748:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4360,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"10768:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4358,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"10772:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:28"},{"assignments":[4362],"declarations":[{"constant":false,"id":4362,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:28","nodeType":"VariableDeclaration","scope":4434,"src":"10787:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4361,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4364,"initialValue":{"id":4363,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"10801:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:28"},{"assignments":[4366],"declarations":[{"constant":false,"id":4366,"mutability":"mutable","name":"x","nameLocation":"10945:1:28","nodeType":"VariableDeclaration","scope":4434,"src":"10938:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4365,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4368,"initialValue":{"hexValue":"30","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:28"},{"assignments":[4370],"declarations":[{"constant":false,"id":4370,"mutability":"mutable","name":"y","nameLocation":"10971:1:28","nodeType":"VariableDeclaration","scope":4434,"src":"10964:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4369,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4372,"initialValue":{"hexValue":"31","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:28"},{"body":{"id":4409,"nodeType":"Block","src":"11014:882:28","statements":[{"assignments":[4377],"declarations":[{"constant":false,"id":4377,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:28","nodeType":"VariableDeclaration","scope":4409,"src":"11032:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4381,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4378,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"11051:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4379,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"11057:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:28"},{"expression":{"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4382,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"11086:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4383,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"11091:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4384,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4385,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"11191:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4386,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"11436:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4387,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"11442:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4388,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"11454:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4393,"nodeType":"ExpressionStatement","src":"11085:395:28"},{"expression":{"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4394,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"11500:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4395,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"11503:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4396,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4397,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"11585:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"11839:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"11843:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4402,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"11854:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4400,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:28","typeDescriptions":{}}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4408,"nodeType":"ExpressionStatement","src":"11499:382:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"10998:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4410,"nodeType":"WhileStatement","src":"10991:905:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4411,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"11914:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4416,"nodeType":"IfStatement","src":"11910:22:28","trueBody":{"expression":{"hexValue":"30","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4348,"id":4415,"nodeType":"Return","src":"11924:8:28"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4418,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"11983:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4421,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"11990:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:28","subExpression":{"id":4424,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"12003:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4422,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:28","typeDescriptions":{}}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4430,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"12015:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:28","typeDescriptions":{}}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4417,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"11975:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4348,"id":4433,"nodeType":"Return","src":"11968:50:28"}]}]},"documentation":{"id":4340,"nodeType":"StructuredDocumentation","src":"9595:553:28","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4436,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:28","nodeType":"FunctionDefinition","parameters":{"id":4345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"a","nameLocation":"10177:1:28","nodeType":"VariableDeclaration","scope":4436,"src":"10169:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4341,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4344,"mutability":"mutable","name":"n","nameLocation":"10188:1:28","nodeType":"VariableDeclaration","scope":4436,"src":"10180:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:28"},"returnParameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4436,"src":"10214:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:28"},"scope":5472,"src":"10153:1919:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4456,"nodeType":"Block","src":"12672:82:28","statements":[{"id":4455,"nodeType":"UncheckedBlock","src":"12682:66:28","statements":[{"expression":{"arguments":[{"id":4448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"12725:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4449,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"12728:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4452,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"12735:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4446,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"12713:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:28","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4493,"src":"12713:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4445,"id":4454,"nodeType":"Return","src":"12706:31:28"}]}]},"documentation":{"id":4437,"nodeType":"StructuredDocumentation","src":"12078:514:28","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4457,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:28","nodeType":"FunctionDefinition","parameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4439,"mutability":"mutable","name":"a","nameLocation":"12626:1:28","nodeType":"VariableDeclaration","scope":4457,"src":"12618:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4441,"mutability":"mutable","name":"p","nameLocation":"12637:1:28","nodeType":"VariableDeclaration","scope":4457,"src":"12629:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:28"},"returnParameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4457,"src":"12663:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:28"},"scope":5472,"src":"12597:157:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4492,"nodeType":"Block","src":"13524:174:28","statements":[{"assignments":[4470,4472],"declarations":[{"constant":false,"id":4470,"mutability":"mutable","name":"success","nameLocation":"13540:7:28","nodeType":"VariableDeclaration","scope":4492,"src":"13535:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4469,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4472,"mutability":"mutable","name":"result","nameLocation":"13557:6:28","nodeType":"VariableDeclaration","scope":4492,"src":"13549:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4471,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4478,"initialValue":{"arguments":[{"id":4474,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"13577:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4475,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"13580:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4476,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"13583:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4473,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4517,4599],"referencedDeclaration":4517,"src":"13567:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:28"},{"condition":{"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:28","subExpression":{"id":4479,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"13600:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4489,"nodeType":"IfStatement","src":"13595:74:28","trueBody":{"id":4488,"nodeType":"Block","src":"13609:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":4484,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"13635:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2439_$","typeString":"type(library Panic)"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2406,"src":"13635:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4481,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"13623:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2439_$","typeString":"type(library Panic)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2438,"src":"13623:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4487,"nodeType":"ExpressionStatement","src":"13623:35:28"}]}},{"expression":{"id":4490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"13685:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4468,"id":4491,"nodeType":"Return","src":"13678:13:28"}]},"documentation":{"id":4458,"nodeType":"StructuredDocumentation","src":"12760:678:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4493,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:28","nodeType":"FunctionDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4460,"mutability":"mutable","name":"b","nameLocation":"13467:1:28","nodeType":"VariableDeclaration","scope":4493,"src":"13459:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4459,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4462,"mutability":"mutable","name":"e","nameLocation":"13478:1:28","nodeType":"VariableDeclaration","scope":4493,"src":"13470:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4461,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4464,"mutability":"mutable","name":"m","nameLocation":"13489:1:28","nodeType":"VariableDeclaration","scope":4493,"src":"13481:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4463,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:28"},"returnParameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4493,"src":"13515:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:28"},"scope":5472,"src":"13443:255:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4516,"nodeType":"Block","src":"14552:1493:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4507,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"14566:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4514,"nodeType":"IfStatement","src":"14562:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4506,"id":4513,"nodeType":"Return","src":"14574:17:28"}},{"AST":{"nativeSrc":"14626:1413:28","nodeType":"YulBlock","src":"14626:1413:28","statements":[{"nativeSrc":"14640:22:28","nodeType":"YulVariableDeclaration","src":"14640:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:28","nodeType":"YulLiteral","src":"14657:4:28","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:28","nodeType":"YulIdentifier","src":"14651:5:28"},"nativeSrc":"14651:11:28","nodeType":"YulFunctionCall","src":"14651:11:28"},"variables":[{"name":"ptr","nativeSrc":"14644:3:28","nodeType":"YulTypedName","src":"14644:3:28","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:28","nodeType":"YulIdentifier","src":"15570:3:28"},{"kind":"number","nativeSrc":"15575:4:28","nodeType":"YulLiteral","src":"15575:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:28","nodeType":"YulIdentifier","src":"15563:6:28"},"nativeSrc":"15563:17:28","nodeType":"YulFunctionCall","src":"15563:17:28"},"nativeSrc":"15563:17:28","nodeType":"YulExpressionStatement","src":"15563:17:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:28","nodeType":"YulIdentifier","src":"15604:3:28"},{"kind":"number","nativeSrc":"15609:4:28","nodeType":"YulLiteral","src":"15609:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:28","nodeType":"YulIdentifier","src":"15600:3:28"},"nativeSrc":"15600:14:28","nodeType":"YulFunctionCall","src":"15600:14:28"},{"kind":"number","nativeSrc":"15616:4:28","nodeType":"YulLiteral","src":"15616:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:28","nodeType":"YulIdentifier","src":"15593:6:28"},"nativeSrc":"15593:28:28","nodeType":"YulFunctionCall","src":"15593:28:28"},"nativeSrc":"15593:28:28","nodeType":"YulExpressionStatement","src":"15593:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:28","nodeType":"YulIdentifier","src":"15645:3:28"},{"kind":"number","nativeSrc":"15650:4:28","nodeType":"YulLiteral","src":"15650:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:28","nodeType":"YulIdentifier","src":"15641:3:28"},"nativeSrc":"15641:14:28","nodeType":"YulFunctionCall","src":"15641:14:28"},{"kind":"number","nativeSrc":"15657:4:28","nodeType":"YulLiteral","src":"15657:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:28","nodeType":"YulIdentifier","src":"15634:6:28"},"nativeSrc":"15634:28:28","nodeType":"YulFunctionCall","src":"15634:28:28"},"nativeSrc":"15634:28:28","nodeType":"YulExpressionStatement","src":"15634:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:28","nodeType":"YulIdentifier","src":"15686:3:28"},{"kind":"number","nativeSrc":"15691:4:28","nodeType":"YulLiteral","src":"15691:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:28","nodeType":"YulIdentifier","src":"15682:3:28"},"nativeSrc":"15682:14:28","nodeType":"YulFunctionCall","src":"15682:14:28"},{"name":"b","nativeSrc":"15698:1:28","nodeType":"YulIdentifier","src":"15698:1:28"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:28","nodeType":"YulIdentifier","src":"15675:6:28"},"nativeSrc":"15675:25:28","nodeType":"YulFunctionCall","src":"15675:25:28"},"nativeSrc":"15675:25:28","nodeType":"YulExpressionStatement","src":"15675:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:28","nodeType":"YulIdentifier","src":"15724:3:28"},{"kind":"number","nativeSrc":"15729:4:28","nodeType":"YulLiteral","src":"15729:4:28","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:28","nodeType":"YulIdentifier","src":"15720:3:28"},"nativeSrc":"15720:14:28","nodeType":"YulFunctionCall","src":"15720:14:28"},{"name":"e","nativeSrc":"15736:1:28","nodeType":"YulIdentifier","src":"15736:1:28"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:28","nodeType":"YulIdentifier","src":"15713:6:28"},"nativeSrc":"15713:25:28","nodeType":"YulFunctionCall","src":"15713:25:28"},"nativeSrc":"15713:25:28","nodeType":"YulExpressionStatement","src":"15713:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:28","nodeType":"YulIdentifier","src":"15762:3:28"},{"kind":"number","nativeSrc":"15767:4:28","nodeType":"YulLiteral","src":"15767:4:28","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:28","nodeType":"YulIdentifier","src":"15758:3:28"},"nativeSrc":"15758:14:28","nodeType":"YulFunctionCall","src":"15758:14:28"},{"name":"m","nativeSrc":"15774:1:28","nodeType":"YulIdentifier","src":"15774:1:28"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:28","nodeType":"YulIdentifier","src":"15751:6:28"},"nativeSrc":"15751:25:28","nodeType":"YulFunctionCall","src":"15751:25:28"},"nativeSrc":"15751:25:28","nodeType":"YulExpressionStatement","src":"15751:25:28"},{"nativeSrc":"15938:57:28","nodeType":"YulAssignment","src":"15938:57:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:28","nodeType":"YulIdentifier","src":"15960:3:28"},"nativeSrc":"15960:5:28","nodeType":"YulFunctionCall","src":"15960:5:28"},{"kind":"number","nativeSrc":"15967:4:28","nodeType":"YulLiteral","src":"15967:4:28","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:28","nodeType":"YulIdentifier","src":"15973:3:28"},{"kind":"number","nativeSrc":"15978:4:28","nodeType":"YulLiteral","src":"15978:4:28","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:28","nodeType":"YulLiteral","src":"15984:4:28","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:28","nodeType":"YulLiteral","src":"15990:4:28","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:28","nodeType":"YulIdentifier","src":"15949:10:28"},"nativeSrc":"15949:46:28","nodeType":"YulFunctionCall","src":"15949:46:28"},"variableNames":[{"name":"success","nativeSrc":"15938:7:28","nodeType":"YulIdentifier","src":"15938:7:28"}]},{"nativeSrc":"16008:21:28","nodeType":"YulAssignment","src":"16008:21:28","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:28","nodeType":"YulLiteral","src":"16024:4:28","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:28","nodeType":"YulIdentifier","src":"16018:5:28"},"nativeSrc":"16018:11:28","nodeType":"YulFunctionCall","src":"16018:11:28"},"variableNames":[{"name":"result","nativeSrc":"16008:6:28","nodeType":"YulIdentifier","src":"16008:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4496,"isOffset":false,"isSlot":false,"src":"15698:1:28","valueSize":1},{"declaration":4498,"isOffset":false,"isSlot":false,"src":"15736:1:28","valueSize":1},{"declaration":4500,"isOffset":false,"isSlot":false,"src":"15774:1:28","valueSize":1},{"declaration":4505,"isOffset":false,"isSlot":false,"src":"16008:6:28","valueSize":1},{"declaration":4503,"isOffset":false,"isSlot":false,"src":"15938:7:28","valueSize":1}],"flags":["memory-safe"],"id":4515,"nodeType":"InlineAssembly","src":"14601:1438:28"}]},"documentation":{"id":4494,"nodeType":"StructuredDocumentation","src":"13704:738:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4517,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:28","nodeType":"FunctionDefinition","parameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4496,"mutability":"mutable","name":"b","nameLocation":"14474:1:28","nodeType":"VariableDeclaration","scope":4517,"src":"14466:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4495,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4498,"mutability":"mutable","name":"e","nameLocation":"14485:1:28","nodeType":"VariableDeclaration","scope":4517,"src":"14477:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"m","nameLocation":"14496:1:28","nodeType":"VariableDeclaration","scope":4517,"src":"14488:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:28"},"returnParameters":{"id":4506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"success","nameLocation":"14527:7:28","nodeType":"VariableDeclaration","scope":4517,"src":"14522:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4502,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4505,"mutability":"mutable","name":"result","nameLocation":"14544:6:28","nodeType":"VariableDeclaration","scope":4517,"src":"14536:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:28"},"scope":5472,"src":"14447:1598:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4552,"nodeType":"Block","src":"16242:179:28","statements":[{"assignments":[4530,4532],"declarations":[{"constant":false,"id":4530,"mutability":"mutable","name":"success","nameLocation":"16258:7:28","nodeType":"VariableDeclaration","scope":4552,"src":"16253:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4529,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4532,"mutability":"mutable","name":"result","nameLocation":"16280:6:28","nodeType":"VariableDeclaration","scope":4552,"src":"16267:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4531,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4538,"initialValue":{"arguments":[{"id":4534,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"16300:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4535,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"16303:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4536,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"16306:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4533,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4517,4599],"referencedDeclaration":4599,"src":"16290:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:28"},{"condition":{"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:28","subExpression":{"id":4539,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"16323:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4549,"nodeType":"IfStatement","src":"16318:74:28","trueBody":{"id":4548,"nodeType":"Block","src":"16332:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":4544,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"16358:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2439_$","typeString":"type(library Panic)"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2406,"src":"16358:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4541,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"16346:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2439_$","typeString":"type(library Panic)"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2438,"src":"16346:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4547,"nodeType":"ExpressionStatement","src":"16346:35:28"}]}},{"expression":{"id":4550,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"16408:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4528,"id":4551,"nodeType":"Return","src":"16401:13:28"}]},"documentation":{"id":4518,"nodeType":"StructuredDocumentation","src":"16051:85:28","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4553,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:28","nodeType":"FunctionDefinition","parameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4520,"mutability":"mutable","name":"b","nameLocation":"16170:1:28","nodeType":"VariableDeclaration","scope":4553,"src":"16157:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4519,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4522,"mutability":"mutable","name":"e","nameLocation":"16186:1:28","nodeType":"VariableDeclaration","scope":4553,"src":"16173:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4521,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4524,"mutability":"mutable","name":"m","nameLocation":"16202:1:28","nodeType":"VariableDeclaration","scope":4553,"src":"16189:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4523,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:28"},"returnParameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4553,"src":"16228:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4526,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:28"},"scope":5472,"src":"16141:280:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4598,"nodeType":"Block","src":"16675:771:28","statements":[{"condition":{"arguments":[{"id":4568,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"16700:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4567,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"16689:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4577,"nodeType":"IfStatement","src":"16685:47:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4571,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4575,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4566,"id":4576,"nodeType":"Return","src":"16704:28:28"}},{"assignments":[4579],"declarations":[{"constant":false,"id":4579,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:28","nodeType":"VariableDeclaration","scope":4598,"src":"16743:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4582,"initialValue":{"expression":{"id":4580,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"16758:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:28","memberName":"length","nodeType":"MemberAccess","src":"16758:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:28"},{"expression":{"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4583,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"16848:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4586,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"16874:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:28","memberName":"length","nodeType":"MemberAccess","src":"16874:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4588,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"16884:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:28","memberName":"length","nodeType":"MemberAccess","src":"16884:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4590,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"16894:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"16900:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4592,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"16903:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4593,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"16906:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4584,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4596,"nodeType":"ExpressionStatement","src":"16848:60:28"},{"AST":{"nativeSrc":"16944:496:28","nodeType":"YulBlock","src":"16944:496:28","statements":[{"nativeSrc":"16958:32:28","nodeType":"YulVariableDeclaration","src":"16958:32:28","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:28","nodeType":"YulIdentifier","src":"16977:6:28"},{"kind":"number","nativeSrc":"16985:4:28","nodeType":"YulLiteral","src":"16985:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:28","nodeType":"YulIdentifier","src":"16973:3:28"},"nativeSrc":"16973:17:28","nodeType":"YulFunctionCall","src":"16973:17:28"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:28","nodeType":"YulTypedName","src":"16962:7:28","type":""}]},{"nativeSrc":"17080:73:28","nodeType":"YulAssignment","src":"17080:73:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:28","nodeType":"YulIdentifier","src":"17102:3:28"},"nativeSrc":"17102:5:28","nodeType":"YulFunctionCall","src":"17102:5:28"},{"kind":"number","nativeSrc":"17109:4:28","nodeType":"YulLiteral","src":"17109:4:28","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:28","nodeType":"YulIdentifier","src":"17115:7:28"},{"arguments":[{"name":"result","nativeSrc":"17130:6:28","nodeType":"YulIdentifier","src":"17130:6:28"}],"functionName":{"name":"mload","nativeSrc":"17124:5:28","nodeType":"YulIdentifier","src":"17124:5:28"},"nativeSrc":"17124:13:28","nodeType":"YulFunctionCall","src":"17124:13:28"},{"name":"dataPtr","nativeSrc":"17139:7:28","nodeType":"YulIdentifier","src":"17139:7:28"},{"name":"mLen","nativeSrc":"17148:4:28","nodeType":"YulIdentifier","src":"17148:4:28"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:28","nodeType":"YulIdentifier","src":"17091:10:28"},"nativeSrc":"17091:62:28","nodeType":"YulFunctionCall","src":"17091:62:28"},"variableNames":[{"name":"success","nativeSrc":"17080:7:28","nodeType":"YulIdentifier","src":"17080:7:28"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:28","nodeType":"YulIdentifier","src":"17309:6:28"},{"name":"mLen","nativeSrc":"17317:4:28","nodeType":"YulIdentifier","src":"17317:4:28"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:28","nodeType":"YulIdentifier","src":"17302:6:28"},"nativeSrc":"17302:20:28","nodeType":"YulFunctionCall","src":"17302:20:28"},"nativeSrc":"17302:20:28","nodeType":"YulExpressionStatement","src":"17302:20:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:28","nodeType":"YulLiteral","src":"17405:4:28","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:28","nodeType":"YulIdentifier","src":"17415:7:28"},{"name":"mLen","nativeSrc":"17424:4:28","nodeType":"YulIdentifier","src":"17424:4:28"}],"functionName":{"name":"add","nativeSrc":"17411:3:28","nodeType":"YulIdentifier","src":"17411:3:28"},"nativeSrc":"17411:18:28","nodeType":"YulFunctionCall","src":"17411:18:28"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:28","nodeType":"YulIdentifier","src":"17398:6:28"},"nativeSrc":"17398:32:28","nodeType":"YulFunctionCall","src":"17398:32:28"},"nativeSrc":"17398:32:28","nodeType":"YulExpressionStatement","src":"17398:32:28"}]},"evmVersion":"paris","externalReferences":[{"declaration":4579,"isOffset":false,"isSlot":false,"src":"17148:4:28","valueSize":1},{"declaration":4579,"isOffset":false,"isSlot":false,"src":"17317:4:28","valueSize":1},{"declaration":4579,"isOffset":false,"isSlot":false,"src":"17424:4:28","valueSize":1},{"declaration":4565,"isOffset":false,"isSlot":false,"src":"16977:6:28","valueSize":1},{"declaration":4565,"isOffset":false,"isSlot":false,"src":"17130:6:28","valueSize":1},{"declaration":4565,"isOffset":false,"isSlot":false,"src":"17309:6:28","valueSize":1},{"declaration":4563,"isOffset":false,"isSlot":false,"src":"17080:7:28","valueSize":1}],"flags":["memory-safe"],"id":4597,"nodeType":"InlineAssembly","src":"16919:521:28"}]},"documentation":{"id":4554,"nodeType":"StructuredDocumentation","src":"16427:88:28","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4599,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:28","nodeType":"FunctionDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"b","nameLocation":"16561:1:28","nodeType":"VariableDeclaration","scope":4599,"src":"16548:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4555,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4558,"mutability":"mutable","name":"e","nameLocation":"16585:1:28","nodeType":"VariableDeclaration","scope":4599,"src":"16572:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4557,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4560,"mutability":"mutable","name":"m","nameLocation":"16609:1:28","nodeType":"VariableDeclaration","scope":4599,"src":"16596:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4559,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:28"},"returnParameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4563,"mutability":"mutable","name":"success","nameLocation":"16645:7:28","nodeType":"VariableDeclaration","scope":4599,"src":"16640:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4562,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4565,"mutability":"mutable","name":"result","nameLocation":"16667:6:28","nodeType":"VariableDeclaration","scope":4599,"src":"16654:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4564,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:28"},"scope":5472,"src":"16520:926:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4631,"nodeType":"Block","src":"17601:176:28","statements":[{"body":{"id":4627,"nodeType":"Block","src":"17658:92:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4618,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"17676:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4620,"indexExpression":{"id":4619,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"17686:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4626,"nodeType":"IfStatement","src":"17672:68:28","trueBody":{"id":4625,"nodeType":"Block","src":"17695:45:28","statements":[{"expression":{"hexValue":"66616c7365","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4606,"id":4624,"nodeType":"Return","src":"17713:12:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"17631:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4612,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"17635:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:28","memberName":"length","nodeType":"MemberAccess","src":"17635:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4628,"initializationExpression":{"assignments":[4608],"declarations":[{"constant":false,"id":4608,"mutability":"mutable","name":"i","nameLocation":"17624:1:28","nodeType":"VariableDeclaration","scope":4628,"src":"17616:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4607,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4610,"initialValue":{"hexValue":"30","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:28"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:28","subExpression":{"id":4615,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"17655:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4617,"nodeType":"ExpressionStatement","src":"17653:3:28"},"nodeType":"ForStatement","src":"17611:139:28"},{"expression":{"hexValue":"74727565","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4606,"id":4630,"nodeType":"Return","src":"17759:11:28"}]},"documentation":{"id":4600,"nodeType":"StructuredDocumentation","src":"17452:72:28","text":" @dev Returns whether the provided byte array is zero."},"id":4632,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:28","nodeType":"FunctionDefinition","parameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:28","nodeType":"VariableDeclaration","scope":4632,"src":"17549:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4601,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:28"},"returnParameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4632,"src":"17595:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4604,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:28"},"scope":5472,"src":"17529:248:28","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4850,"nodeType":"Block","src":"18137:5124:28","statements":[{"id":4849,"nodeType":"UncheckedBlock","src":"18147:5108:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"18241:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4646,"nodeType":"IfStatement","src":"18237:53:28","trueBody":{"id":4645,"nodeType":"Block","src":"18249:41:28","statements":[{"expression":{"id":4643,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"18274:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4639,"id":4644,"nodeType":"Return","src":"18267:8:28"}]}},{"assignments":[4648],"declarations":[{"constant":false,"id":4648,"mutability":"mutable","name":"aa","nameLocation":"19225:2:28","nodeType":"VariableDeclaration","scope":4849,"src":"19217:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4650,"initialValue":{"id":4649,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"19230:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:28"},{"assignments":[4652],"declarations":[{"constant":false,"id":4652,"mutability":"mutable","name":"xn","nameLocation":"19253:2:28","nodeType":"VariableDeclaration","scope":4849,"src":"19245:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4654,"initialValue":{"hexValue":"31","id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19278:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4670,"nodeType":"IfStatement","src":"19274:92:28","trueBody":{"id":4669,"nodeType":"Block","src":"19296:70:28","statements":[{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4661,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19314:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ExpressionStatement","src":"19314:10:28"},{"expression":{"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4665,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"19342:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4668,"nodeType":"ExpressionStatement","src":"19342:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19383:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4686,"nodeType":"IfStatement","src":"19379:90:28","trueBody":{"id":4685,"nodeType":"Block","src":"19400:69:28","statements":[{"expression":{"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4677,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19418:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4680,"nodeType":"ExpressionStatement","src":"19418:9:28"},{"expression":{"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4681,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"19445:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4684,"nodeType":"ExpressionStatement","src":"19445:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4687,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19486:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4702,"nodeType":"IfStatement","src":"19482:90:28","trueBody":{"id":4701,"nodeType":"Block","src":"19503:69:28","statements":[{"expression":{"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4693,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19521:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4696,"nodeType":"ExpressionStatement","src":"19521:9:28"},{"expression":{"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4697,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"19548:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4700,"nodeType":"ExpressionStatement","src":"19548:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4703,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19589:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"nodeType":"IfStatement","src":"19585:89:28","trueBody":{"id":4717,"nodeType":"Block","src":"19606:68:28","statements":[{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4709,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19624:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4712,"nodeType":"ExpressionStatement","src":"19624:9:28"},{"expression":{"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4713,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"19651:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4716,"nodeType":"ExpressionStatement","src":"19651:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4719,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19691:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4734,"nodeType":"IfStatement","src":"19687:87:28","trueBody":{"id":4733,"nodeType":"Block","src":"19707:67:28","statements":[{"expression":{"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4725,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19725:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4728,"nodeType":"ExpressionStatement","src":"19725:8:28"},{"expression":{"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4729,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"19751:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4732,"nodeType":"ExpressionStatement","src":"19751:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4735,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19791:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4750,"nodeType":"IfStatement","src":"19787:87:28","trueBody":{"id":4749,"nodeType":"Block","src":"19807:67:28","statements":[{"expression":{"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4741,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19825:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4744,"nodeType":"ExpressionStatement","src":"19825:8:28"},{"expression":{"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4745,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"19851:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4748,"nodeType":"ExpressionStatement","src":"19851:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4751,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"19891:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4762,"nodeType":"IfStatement","src":"19887:61:28","trueBody":{"id":4761,"nodeType":"Block","src":"19907:41:28","statements":[{"expression":{"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4757,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"19925:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4760,"nodeType":"ExpressionStatement","src":"19925:8:28"}]}},{"expression":{"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4763,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"20368:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4765,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"20378:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4771,"nodeType":"ExpressionStatement","src":"20368:18:28"},{"expression":{"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4772,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22273:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4773,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22279:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4774,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"22284:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4775,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22288:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4782,"nodeType":"ExpressionStatement","src":"22273:23:28"},{"expression":{"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4783,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22382:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4784,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22388:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4785,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"22393:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4786,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22397:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4793,"nodeType":"ExpressionStatement","src":"22382:23:28"},{"expression":{"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4794,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22493:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4795,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22499:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4796,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"22504:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4797,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22508:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4804,"nodeType":"ExpressionStatement","src":"22493:23:28"},{"expression":{"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4805,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22602:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4806,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22608:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"22613:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4808,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22617:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4815,"nodeType":"ExpressionStatement","src":"22602:23:28"},{"expression":{"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4816,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22712:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4817,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22718:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4818,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"22723:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4819,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22727:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4826,"nodeType":"ExpressionStatement","src":"22712:23:28"},{"expression":{"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4827,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22822:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4828,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22828:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4829,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"22833:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4830,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"22837:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4837,"nodeType":"ExpressionStatement","src":"22822:23:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"23211:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4841,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"23232:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"23237:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4843,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"23241:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4839,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"23216:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"23216:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4639,"id":4848,"nodeType":"Return","src":"23204:40:28"}]}]},"documentation":{"id":4633,"nodeType":"StructuredDocumentation","src":"17783:292:28","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4851,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:28","nodeType":"FunctionDefinition","parameters":{"id":4636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4635,"mutability":"mutable","name":"a","nameLocation":"18102:1:28","nodeType":"VariableDeclaration","scope":4851,"src":"18094:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4634,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:28"},"returnParameters":{"id":4639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4851,"src":"18128:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4637,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:28"},"scope":5472,"src":"18080:5181:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4884,"nodeType":"Block","src":"23434:171:28","statements":[{"id":4883,"nodeType":"UncheckedBlock","src":"23444:155:28","statements":[{"assignments":[4863],"declarations":[{"constant":false,"id":4863,"mutability":"mutable","name":"result","nameLocation":"23476:6:28","nodeType":"VariableDeclaration","scope":4883,"src":"23468:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4867,"initialValue":{"arguments":[{"id":4865,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"23490:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4864,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4851,4885],"referencedDeclaration":4851,"src":"23485:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"23513:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4872,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"23555:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}],"id":4871,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"23538:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3878_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4874,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"23568:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"23577:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4877,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"23586:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4869,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"23522:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"23522:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4861,"id":4882,"nodeType":"Return","src":"23506:82:28"}]}]},"documentation":{"id":4852,"nodeType":"StructuredDocumentation","src":"23267:86:28","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4885,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:28","nodeType":"FunctionDefinition","parameters":{"id":4858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4854,"mutability":"mutable","name":"a","nameLocation":"23380:1:28","nodeType":"VariableDeclaration","scope":4885,"src":"23372:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4853,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4857,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:28","nodeType":"VariableDeclaration","scope":4885,"src":"23383:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"},"typeName":{"id":4856,"nodeType":"UserDefinedTypeName","pathNode":{"id":4855,"name":"Rounding","nameLocations":["23383:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"23383:8:28"},"referencedDeclaration":3878,"src":"23383:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:28"},"returnParameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4885,"src":"23425:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:28"},"scope":5472,"src":"23358:247:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5080,"nodeType":"Block","src":"23796:981:28","statements":[{"assignments":[4894],"declarations":[{"constant":false,"id":4894,"mutability":"mutable","name":"result","nameLocation":"23814:6:28","nodeType":"VariableDeclaration","scope":5080,"src":"23806:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4893,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4896,"initialValue":{"hexValue":"30","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:28"},{"assignments":[4898],"declarations":[{"constant":false,"id":4898,"mutability":"mutable","name":"exp","nameLocation":"23842:3:28","nodeType":"VariableDeclaration","scope":5080,"src":"23834:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4897,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4899,"nodeType":"VariableDeclarationStatement","src":"23834:11:28"},{"id":5077,"nodeType":"UncheckedBlock","src":"23855:893:28","statements":[{"expression":{"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4900,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"23879:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"23907:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4902,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"23891:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"23891:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4915,"nodeType":"ExpressionStatement","src":"23879:51:28"},{"expression":{"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"23944:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4917,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"23954:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4919,"nodeType":"ExpressionStatement","src":"23944:13:28"},{"expression":{"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"23971:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4921,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"23981:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4923,"nodeType":"ExpressionStatement","src":"23971:13:28"},{"expression":{"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4924,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"23999:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24026:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4926,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"24010:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"24010:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4939,"nodeType":"ExpressionStatement","src":"23999:49:28"},{"expression":{"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24062:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4941,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24072:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4943,"nodeType":"ExpressionStatement","src":"24062:13:28"},{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"24089:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4945,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24099:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4947,"nodeType":"ExpressionStatement","src":"24089:13:28"},{"expression":{"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4948,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24117:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24144:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4950,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"24128:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"24128:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4963,"nodeType":"ExpressionStatement","src":"24117:49:28"},{"expression":{"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24180:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4965,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24190:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4967,"nodeType":"ExpressionStatement","src":"24180:13:28"},{"expression":{"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"24207:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4969,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24217:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4971,"nodeType":"ExpressionStatement","src":"24207:13:28"},{"expression":{"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4972,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24235:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24262:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4974,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"24246:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"24246:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4987,"nodeType":"ExpressionStatement","src":"24235:49:28"},{"expression":{"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24298:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4989,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24308:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4991,"nodeType":"ExpressionStatement","src":"24298:13:28"},{"expression":{"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"24325:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4993,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24335:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4995,"nodeType":"ExpressionStatement","src":"24325:13:28"},{"expression":{"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4996,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24353:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24379:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4998,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"24363:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"24363:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5011,"nodeType":"ExpressionStatement","src":"24353:47:28"},{"expression":{"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24414:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5013,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24424:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5015,"nodeType":"ExpressionStatement","src":"24414:13:28"},{"expression":{"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"24441:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5017,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24451:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5019,"nodeType":"ExpressionStatement","src":"24441:13:28"},{"expression":{"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5020,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24469:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24495:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":5030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:28","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5022,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"24479:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"24479:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5035,"nodeType":"ExpressionStatement","src":"24469:47:28"},{"expression":{"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24530:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5037,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24540:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5039,"nodeType":"ExpressionStatement","src":"24530:13:28"},{"expression":{"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5040,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"24557:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5041,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24567:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5043,"nodeType":"ExpressionStatement","src":"24557:13:28"},{"expression":{"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5044,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24585:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24611:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5046,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"24595:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"24595:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5059,"nodeType":"ExpressionStatement","src":"24585:47:28"},{"expression":{"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24646:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5061,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24656:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5063,"nodeType":"ExpressionStatement","src":"24646:13:28"},{"expression":{"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"24673:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5065,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"24683:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5067,"nodeType":"ExpressionStatement","src":"24673:13:28"},{"expression":{"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"24701:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"24727:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5069,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"24711:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"24711:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5076,"nodeType":"ExpressionStatement","src":"24701:36:28"}]},{"expression":{"id":5078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"24764:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4892,"id":5079,"nodeType":"Return","src":"24757:13:28"}]},"documentation":{"id":4886,"nodeType":"StructuredDocumentation","src":"23611:119:28","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5081,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:28","nodeType":"FunctionDefinition","parameters":{"id":4889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4888,"mutability":"mutable","name":"value","nameLocation":"23757:5:28","nodeType":"VariableDeclaration","scope":5081,"src":"23749:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4887,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:28"},"returnParameters":{"id":4892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5081,"src":"23787:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4890,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:28"},"scope":5472,"src":"23735:1042:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5114,"nodeType":"Block","src":"25010:175:28","statements":[{"id":5113,"nodeType":"UncheckedBlock","src":"25020:159:28","statements":[{"assignments":[5093],"declarations":[{"constant":false,"id":5093,"mutability":"mutable","name":"result","nameLocation":"25052:6:28","nodeType":"VariableDeclaration","scope":5113,"src":"25044:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5092,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5097,"initialValue":{"arguments":[{"id":5095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"25066:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5094,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5081,5115],"referencedDeclaration":5081,"src":"25061:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"25093:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5102,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"25135:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}],"id":5101,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"25118:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3878_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"25153:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"25162:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5099,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"25102:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"25102:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5091,"id":5112,"nodeType":"Return","src":"25086:82:28"}]}]},"documentation":{"id":5082,"nodeType":"StructuredDocumentation","src":"24783:142:28","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5115,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:28","nodeType":"FunctionDefinition","parameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5084,"mutability":"mutable","name":"value","nameLocation":"24952:5:28","nodeType":"VariableDeclaration","scope":5115,"src":"24944:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:28","nodeType":"VariableDeclaration","scope":5115,"src":"24959:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"},"typeName":{"id":5086,"nodeType":"UserDefinedTypeName","pathNode":{"id":5085,"name":"Rounding","nameLocations":["24959:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"24959:8:28"},"referencedDeclaration":3878,"src":"24959:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:28"},"returnParameters":{"id":5091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5115,"src":"25001:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5089,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:28"},"scope":5472,"src":"24930:255:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5243,"nodeType":"Block","src":"25378:854:28","statements":[{"assignments":[5124],"declarations":[{"constant":false,"id":5124,"mutability":"mutable","name":"result","nameLocation":"25396:6:28","nodeType":"VariableDeclaration","scope":5243,"src":"25388:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5123,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5126,"initialValue":{"hexValue":"30","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:28"},{"id":5240,"nodeType":"UncheckedBlock","src":"25416:787:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"25444:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5143,"nodeType":"IfStatement","src":"25440:103:28","trueBody":{"id":5142,"nodeType":"Block","src":"25463:80:28","statements":[{"expression":{"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"25481:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5137,"nodeType":"ExpressionStatement","src":"25481:17:28"},{"expression":{"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5138,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"25516:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5141,"nodeType":"ExpressionStatement","src":"25516:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"25560:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5160,"nodeType":"IfStatement","src":"25556:103:28","trueBody":{"id":5159,"nodeType":"Block","src":"25579:80:28","statements":[{"expression":{"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"25597:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5154,"nodeType":"ExpressionStatement","src":"25597:17:28"},{"expression":{"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5155,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"25632:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5158,"nodeType":"ExpressionStatement","src":"25632:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"25676:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5177,"nodeType":"IfStatement","src":"25672:103:28","trueBody":{"id":5176,"nodeType":"Block","src":"25695:80:28","statements":[{"expression":{"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"25713:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5171,"nodeType":"ExpressionStatement","src":"25713:17:28"},{"expression":{"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"25748:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5175,"nodeType":"ExpressionStatement","src":"25748:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"25792:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5194,"nodeType":"IfStatement","src":"25788:100:28","trueBody":{"id":5193,"nodeType":"Block","src":"25810:78:28","statements":[{"expression":{"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"25828:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5188,"nodeType":"ExpressionStatement","src":"25828:16:28"},{"expression":{"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5189,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"25862:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5192,"nodeType":"ExpressionStatement","src":"25862:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"25905:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5211,"nodeType":"IfStatement","src":"25901:100:28","trueBody":{"id":5210,"nodeType":"Block","src":"25923:78:28","statements":[{"expression":{"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"25941:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5205,"nodeType":"ExpressionStatement","src":"25941:16:28"},{"expression":{"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"25975:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5209,"nodeType":"ExpressionStatement","src":"25975:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"26018:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5228,"nodeType":"IfStatement","src":"26014:100:28","trueBody":{"id":5227,"nodeType":"Block","src":"26036:78:28","statements":[{"expression":{"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"26054:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5222,"nodeType":"ExpressionStatement","src":"26054:16:28"},{"expression":{"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5223,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"26088:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5226,"nodeType":"ExpressionStatement","src":"26088:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"26131:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5239,"nodeType":"IfStatement","src":"26127:66:28","trueBody":{"id":5238,"nodeType":"Block","src":"26149:44:28","statements":[{"expression":{"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"26167:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5237,"nodeType":"ExpressionStatement","src":"26167:11:28"}]}}]},{"expression":{"id":5241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"26219:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5122,"id":5242,"nodeType":"Return","src":"26212:13:28"}]},"documentation":{"id":5116,"nodeType":"StructuredDocumentation","src":"25191:120:28","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5244,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:28","nodeType":"FunctionDefinition","parameters":{"id":5119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5118,"mutability":"mutable","name":"value","nameLocation":"25339:5:28","nodeType":"VariableDeclaration","scope":5244,"src":"25331:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5117,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:28"},"returnParameters":{"id":5122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5244,"src":"25369:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5120,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:28"},"scope":5472,"src":"25316:916:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5277,"nodeType":"Block","src":"26467:177:28","statements":[{"id":5276,"nodeType":"UncheckedBlock","src":"26477:161:28","statements":[{"assignments":[5256],"declarations":[{"constant":false,"id":5256,"mutability":"mutable","name":"result","nameLocation":"26509:6:28","nodeType":"VariableDeclaration","scope":5276,"src":"26501:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5255,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5260,"initialValue":{"arguments":[{"id":5258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"26524:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5257,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5244,5278],"referencedDeclaration":5244,"src":"26518:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"26551:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5265,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"26593:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}],"id":5264,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"26576:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3878_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"26612:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"26621:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5262,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"26560:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"26560:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5254,"id":5275,"nodeType":"Return","src":"26544:83:28"}]}]},"documentation":{"id":5245,"nodeType":"StructuredDocumentation","src":"26238:143:28","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5278,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:28","nodeType":"FunctionDefinition","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5247,"mutability":"mutable","name":"value","nameLocation":"26409:5:28","nodeType":"VariableDeclaration","scope":5278,"src":"26401:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5250,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:28","nodeType":"VariableDeclaration","scope":5278,"src":"26416:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"},"typeName":{"id":5249,"nodeType":"UserDefinedTypeName","pathNode":{"id":5248,"name":"Rounding","nameLocations":["26416:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"26416:8:28"},"referencedDeclaration":3878,"src":"26416:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:28"},"returnParameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5278,"src":"26458:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5252,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:28"},"scope":5472,"src":"26386:258:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5414,"nodeType":"Block","src":"26964:674:28","statements":[{"assignments":[5287],"declarations":[{"constant":false,"id":5287,"mutability":"mutable","name":"result","nameLocation":"26982:6:28","nodeType":"VariableDeclaration","scope":5414,"src":"26974:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5289,"initialValue":{"hexValue":"30","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:28"},{"assignments":[5291],"declarations":[{"constant":false,"id":5291,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:28","nodeType":"VariableDeclaration","scope":5414,"src":"27002:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5290,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5292,"nodeType":"VariableDeclarationStatement","src":"27002:12:28"},{"id":5411,"nodeType":"UncheckedBlock","src":"27024:585:28","statements":[{"expression":{"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5293,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"27048:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"27071:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5294,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"27055:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"27055:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5306,"nodeType":"ExpressionStatement","src":"27048:46:28"},{"expression":{"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"27108:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"27118:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5312,"nodeType":"ExpressionStatement","src":"27108:20:28"},{"expression":{"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5313,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"27142:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5314,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"27152:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5318,"nodeType":"ExpressionStatement","src":"27142:19:28"},{"expression":{"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5319,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"27176:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"27199:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5320,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"27183:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"27183:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5332,"nodeType":"ExpressionStatement","src":"27176:45:28"},{"expression":{"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"27235:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5334,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"27245:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5338,"nodeType":"ExpressionStatement","src":"27235:19:28"},{"expression":{"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"27268:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5340,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"27278:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5344,"nodeType":"ExpressionStatement","src":"27268:18:28"},{"expression":{"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5345,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"27301:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"27324:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5346,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"27308:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"27308:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5358,"nodeType":"ExpressionStatement","src":"27301:45:28"},{"expression":{"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"27360:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5360,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"27370:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5364,"nodeType":"ExpressionStatement","src":"27360:19:28"},{"expression":{"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"27393:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5366,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"27403:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5370,"nodeType":"ExpressionStatement","src":"27393:18:28"},{"expression":{"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5371,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"27426:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"27449:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5372,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"27433:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"27433:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5384,"nodeType":"ExpressionStatement","src":"27426:45:28"},{"expression":{"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"27485:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5386,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"27495:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5390,"nodeType":"ExpressionStatement","src":"27485:19:28"},{"expression":{"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5391,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"27518:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"27528:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5396,"nodeType":"ExpressionStatement","src":"27518:18:28"},{"expression":{"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"27551:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"27577:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5398,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"27561:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"27561:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5410,"nodeType":"ExpressionStatement","src":"27551:47:28"}]},{"expression":{"id":5412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"27625:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5285,"id":5413,"nodeType":"Return","src":"27618:13:28"}]},"documentation":{"id":5279,"nodeType":"StructuredDocumentation","src":"26650:246:28","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5415,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:28","nodeType":"FunctionDefinition","parameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"value","nameLocation":"26925:5:28","nodeType":"VariableDeclaration","scope":5415,"src":"26917:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5280,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:28"},"returnParameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5415,"src":"26955:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5283,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:28"},"scope":5472,"src":"26901:737:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5451,"nodeType":"Block","src":"27875:184:28","statements":[{"id":5450,"nodeType":"UncheckedBlock","src":"27885:168:28","statements":[{"assignments":[5427],"declarations":[{"constant":false,"id":5427,"mutability":"mutable","name":"result","nameLocation":"27917:6:28","nodeType":"VariableDeclaration","scope":5450,"src":"27909:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5431,"initialValue":{"arguments":[{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"27933:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5428,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5415,5452],"referencedDeclaration":5415,"src":"27926:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"27960:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5436,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"28002:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}],"id":5435,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"27985:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3878_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5439,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"28021:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"28036:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5433,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"27969:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"27969:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5425,"id":5449,"nodeType":"Return","src":"27953:89:28"}]}]},"documentation":{"id":5416,"nodeType":"StructuredDocumentation","src":"27644:144:28","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5452,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:28","nodeType":"FunctionDefinition","parameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5418,"mutability":"mutable","name":"value","nameLocation":"27817:5:28","nodeType":"VariableDeclaration","scope":5452,"src":"27809:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5421,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:28","nodeType":"VariableDeclaration","scope":5452,"src":"27824:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"},"typeName":{"id":5420,"nodeType":"UserDefinedTypeName","pathNode":{"id":5419,"name":"Rounding","nameLocations":["27824:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"27824:8:28"},"referencedDeclaration":3878,"src":"27824:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:28"},"returnParameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5452,"src":"27866:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5423,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:28"},"scope":5472,"src":"27793:266:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5470,"nodeType":"Block","src":"28257:48:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5463,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"28280:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}],"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5461,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:28","typeDescriptions":{}}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5460,"id":5469,"nodeType":"Return","src":"28267:31:28"}]},"documentation":{"id":5453,"nodeType":"StructuredDocumentation","src":"28065:113:28","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5471,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:28","nodeType":"FunctionDefinition","parameters":{"id":5457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5456,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:28","nodeType":"VariableDeclaration","scope":5471,"src":"28209:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"},"typeName":{"id":5455,"nodeType":"UserDefinedTypeName","pathNode":{"id":5454,"name":"Rounding","nameLocations":["28209:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"28209:8:28"},"referencedDeclaration":3878,"src":"28209:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3878","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:28"},"returnParameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5471,"src":"28251:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5458,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:28"},"scope":5472,"src":"28183:122:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5473,"src":"281:28026:28","usedErrors":[],"usedEvents":[]}],"src":"103:28205:28"},"id":28},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7237]},"id":7238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5474,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:29"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5475,"nodeType":"StructuredDocumentation","src":"218:550:29","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7237,"linearizedBaseContracts":[7237],"name":"SafeCast","nameLocation":"777:8:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5476,"nodeType":"StructuredDocumentation","src":"792:68:29","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5482,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:29","nodeType":"ErrorDefinition","parameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5478,"mutability":"mutable","name":"bits","nameLocation":"908:4:29","nodeType":"VariableDeclaration","scope":5482,"src":"902:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5477,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5480,"mutability":"mutable","name":"value","nameLocation":"922:5:29","nodeType":"VariableDeclaration","scope":5482,"src":"914:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5479,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:29"},"src":"865:64:29"},{"documentation":{"id":5483,"nodeType":"StructuredDocumentation","src":"935:75:29","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5487,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:29","nodeType":"ErrorDefinition","parameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"mutability":"mutable","name":"value","nameLocation":"1056:5:29","nodeType":"VariableDeclaration","scope":5487,"src":"1049:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5484,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:29"},"src":"1015:48:29"},{"documentation":{"id":5488,"nodeType":"StructuredDocumentation","src":"1069:67:29","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5494,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:29","nodeType":"ErrorDefinition","parameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"bits","nameLocation":"1183:4:29","nodeType":"VariableDeclaration","scope":5494,"src":"1177:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5489,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5492,"mutability":"mutable","name":"value","nameLocation":"1196:5:29","nodeType":"VariableDeclaration","scope":5494,"src":"1189:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5491,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:29"},"src":"1141:62:29"},{"documentation":{"id":5495,"nodeType":"StructuredDocumentation","src":"1209:75:29","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5499,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:29","nodeType":"ErrorDefinition","parameters":{"id":5498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5497,"mutability":"mutable","name":"value","nameLocation":"1331:5:29","nodeType":"VariableDeclaration","scope":5499,"src":"1323:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:29"},"src":"1289:49:29"},{"body":{"id":5526,"nodeType":"Block","src":"1695:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"1709:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5509,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:29","memberName":"max","nodeType":"MemberAccess","src":"1717:17:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5520,"nodeType":"IfStatement","src":"1705:105:29","trueBody":{"id":5519,"nodeType":"Block","src":"1736:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"1793:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5514,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"1757:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5518,"nodeType":"RevertStatement","src":"1750:49:29"}]}},{"expression":{"arguments":[{"id":5523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"1834:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5521,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:29","typeDescriptions":{}}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5506,"id":5525,"nodeType":"Return","src":"1819:21:29"}]},"documentation":{"id":5500,"nodeType":"StructuredDocumentation","src":"1344:280:29","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5527,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:29","nodeType":"FunctionDefinition","parameters":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5502,"mutability":"mutable","name":"value","nameLocation":"1656:5:29","nodeType":"VariableDeclaration","scope":5527,"src":"1648:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:29"},"returnParameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5527,"src":"1686:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5504,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:29"},"scope":7237,"src":"1629:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5554,"nodeType":"Block","src":"2204:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"2218:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5537,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5536,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:29","memberName":"max","nodeType":"MemberAccess","src":"2226:17:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5548,"nodeType":"IfStatement","src":"2214:105:29","trueBody":{"id":5547,"nodeType":"Block","src":"2245:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"2302:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5542,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"2266:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5546,"nodeType":"RevertStatement","src":"2259:49:29"}]}},{"expression":{"arguments":[{"id":5551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"2343:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5549,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:29","typeDescriptions":{}}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5534,"id":5553,"nodeType":"Return","src":"2328:21:29"}]},"documentation":{"id":5528,"nodeType":"StructuredDocumentation","src":"1853:280:29","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5555,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:29","nodeType":"FunctionDefinition","parameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"value","nameLocation":"2165:5:29","nodeType":"VariableDeclaration","scope":5555,"src":"2157:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5529,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:29"},"returnParameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5555,"src":"2195:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5532,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:29"},"scope":7237,"src":"2138:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5582,"nodeType":"Block","src":"2713:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"2727:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5565,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5564,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:29","memberName":"max","nodeType":"MemberAccess","src":"2735:17:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5576,"nodeType":"IfStatement","src":"2723:105:29","trueBody":{"id":5575,"nodeType":"Block","src":"2754:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"2811:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5570,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"2775:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5574,"nodeType":"RevertStatement","src":"2768:49:29"}]}},{"expression":{"arguments":[{"id":5579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"2852:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5577,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:29","typeDescriptions":{}}},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5562,"id":5581,"nodeType":"Return","src":"2837:21:29"}]},"documentation":{"id":5556,"nodeType":"StructuredDocumentation","src":"2362:280:29","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5583,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:29","nodeType":"FunctionDefinition","parameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"value","nameLocation":"2674:5:29","nodeType":"VariableDeclaration","scope":5583,"src":"2666:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:29"},"returnParameters":{"id":5562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5583,"src":"2704:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5560,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:29"},"scope":7237,"src":"2647:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5610,"nodeType":"Block","src":"3222:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"3236:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5593,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5592,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:29","memberName":"max","nodeType":"MemberAccess","src":"3244:17:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5604,"nodeType":"IfStatement","src":"3232:105:29","trueBody":{"id":5603,"nodeType":"Block","src":"3263:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"3320:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5598,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"3284:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5602,"nodeType":"RevertStatement","src":"3277:49:29"}]}},{"expression":{"arguments":[{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"3361:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5605,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:29","typeDescriptions":{}}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5590,"id":5609,"nodeType":"Return","src":"3346:21:29"}]},"documentation":{"id":5584,"nodeType":"StructuredDocumentation","src":"2871:280:29","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5611,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:29","nodeType":"FunctionDefinition","parameters":{"id":5587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5586,"mutability":"mutable","name":"value","nameLocation":"3183:5:29","nodeType":"VariableDeclaration","scope":5611,"src":"3175:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5585,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:29"},"returnParameters":{"id":5590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5611,"src":"3213:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5588,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:29"},"scope":7237,"src":"3156:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5638,"nodeType":"Block","src":"3731:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"3745:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5621,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:29","memberName":"max","nodeType":"MemberAccess","src":"3753:17:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5632,"nodeType":"IfStatement","src":"3741:105:29","trueBody":{"id":5631,"nodeType":"Block","src":"3772:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"3829:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5626,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"3793:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5630,"nodeType":"RevertStatement","src":"3786:49:29"}]}},{"expression":{"arguments":[{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"3870:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5633,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:29","typeDescriptions":{}}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5618,"id":5637,"nodeType":"Return","src":"3855:21:29"}]},"documentation":{"id":5612,"nodeType":"StructuredDocumentation","src":"3380:280:29","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5639,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:29","nodeType":"FunctionDefinition","parameters":{"id":5615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5614,"mutability":"mutable","name":"value","nameLocation":"3692:5:29","nodeType":"VariableDeclaration","scope":5639,"src":"3684:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:29"},"returnParameters":{"id":5618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5639,"src":"3722:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5616,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:29"},"scope":7237,"src":"3665:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5666,"nodeType":"Block","src":"4240:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"4254:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5649,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5648,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:29","memberName":"max","nodeType":"MemberAccess","src":"4262:17:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5660,"nodeType":"IfStatement","src":"4250:105:29","trueBody":{"id":5659,"nodeType":"Block","src":"4281:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"4338:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5654,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"4302:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5658,"nodeType":"RevertStatement","src":"4295:49:29"}]}},{"expression":{"arguments":[{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"4379:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5661,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:29","typeDescriptions":{}}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5646,"id":5665,"nodeType":"Return","src":"4364:21:29"}]},"documentation":{"id":5640,"nodeType":"StructuredDocumentation","src":"3889:280:29","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5667,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:29","nodeType":"FunctionDefinition","parameters":{"id":5643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5642,"mutability":"mutable","name":"value","nameLocation":"4201:5:29","nodeType":"VariableDeclaration","scope":5667,"src":"4193:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5641,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:29"},"returnParameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5667,"src":"4231:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5644,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:29"},"scope":7237,"src":"4174:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5694,"nodeType":"Block","src":"4749:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"4763:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5677,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5676,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:29","memberName":"max","nodeType":"MemberAccess","src":"4771:17:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5688,"nodeType":"IfStatement","src":"4759:105:29","trueBody":{"id":5687,"nodeType":"Block","src":"4790:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"4847:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5682,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"4811:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5686,"nodeType":"RevertStatement","src":"4804:49:29"}]}},{"expression":{"arguments":[{"id":5691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"4888:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5689,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:29","typeDescriptions":{}}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5674,"id":5693,"nodeType":"Return","src":"4873:21:29"}]},"documentation":{"id":5668,"nodeType":"StructuredDocumentation","src":"4398:280:29","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5695,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:29","nodeType":"FunctionDefinition","parameters":{"id":5671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5670,"mutability":"mutable","name":"value","nameLocation":"4710:5:29","nodeType":"VariableDeclaration","scope":5695,"src":"4702:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5669,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:29"},"returnParameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5695,"src":"4740:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5672,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:29"},"scope":7237,"src":"4683:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5722,"nodeType":"Block","src":"5258:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"5272:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5705,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5704,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:29","memberName":"max","nodeType":"MemberAccess","src":"5280:17:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5716,"nodeType":"IfStatement","src":"5268:105:29","trueBody":{"id":5715,"nodeType":"Block","src":"5299:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"5356:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5710,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"5320:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5714,"nodeType":"RevertStatement","src":"5313:49:29"}]}},{"expression":{"arguments":[{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"5397:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5717,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:29","typeDescriptions":{}}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5702,"id":5721,"nodeType":"Return","src":"5382:21:29"}]},"documentation":{"id":5696,"nodeType":"StructuredDocumentation","src":"4907:280:29","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5723,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:29","nodeType":"FunctionDefinition","parameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5698,"mutability":"mutable","name":"value","nameLocation":"5219:5:29","nodeType":"VariableDeclaration","scope":5723,"src":"5211:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5697,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:29"},"returnParameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5723,"src":"5249:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5700,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:29"},"scope":7237,"src":"5192:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5750,"nodeType":"Block","src":"5767:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"5781:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5733,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5732,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:29","memberName":"max","nodeType":"MemberAccess","src":"5789:17:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5744,"nodeType":"IfStatement","src":"5777:105:29","trueBody":{"id":5743,"nodeType":"Block","src":"5808:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"5865:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5738,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"5829:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5742,"nodeType":"RevertStatement","src":"5822:49:29"}]}},{"expression":{"arguments":[{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"5906:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5745,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:29","typeDescriptions":{}}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5730,"id":5749,"nodeType":"Return","src":"5891:21:29"}]},"documentation":{"id":5724,"nodeType":"StructuredDocumentation","src":"5416:280:29","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5751,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:29","nodeType":"FunctionDefinition","parameters":{"id":5727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5726,"mutability":"mutable","name":"value","nameLocation":"5728:5:29","nodeType":"VariableDeclaration","scope":5751,"src":"5720:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:29"},"returnParameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5751,"src":"5758:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5728,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:29"},"scope":7237,"src":"5701:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5778,"nodeType":"Block","src":"6276:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"6290:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5761,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:29","memberName":"max","nodeType":"MemberAccess","src":"6298:17:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5772,"nodeType":"IfStatement","src":"6286:105:29","trueBody":{"id":5771,"nodeType":"Block","src":"6317:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"6374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5766,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"6338:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5770,"nodeType":"RevertStatement","src":"6331:49:29"}]}},{"expression":{"arguments":[{"id":5775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"6415:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5773,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:29","typeDescriptions":{}}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5758,"id":5777,"nodeType":"Return","src":"6400:21:29"}]},"documentation":{"id":5752,"nodeType":"StructuredDocumentation","src":"5925:280:29","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5779,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:29","nodeType":"FunctionDefinition","parameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"value","nameLocation":"6237:5:29","nodeType":"VariableDeclaration","scope":5779,"src":"6229:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5753,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:29"},"returnParameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5779,"src":"6267:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5756,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:29"},"scope":7237,"src":"6210:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5806,"nodeType":"Block","src":"6785:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"6799:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5789,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5788,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:29","memberName":"max","nodeType":"MemberAccess","src":"6807:17:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5800,"nodeType":"IfStatement","src":"6795:105:29","trueBody":{"id":5799,"nodeType":"Block","src":"6826:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"6883:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5794,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"6847:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5798,"nodeType":"RevertStatement","src":"6840:49:29"}]}},{"expression":{"arguments":[{"id":5803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"6924:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5801,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:29","typeDescriptions":{}}},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5786,"id":5805,"nodeType":"Return","src":"6909:21:29"}]},"documentation":{"id":5780,"nodeType":"StructuredDocumentation","src":"6434:280:29","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5807,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:29","nodeType":"FunctionDefinition","parameters":{"id":5783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"value","nameLocation":"6746:5:29","nodeType":"VariableDeclaration","scope":5807,"src":"6738:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:29"},"returnParameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5807,"src":"6776:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5784,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:29"},"scope":7237,"src":"6719:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5834,"nodeType":"Block","src":"7294:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"7308:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5817,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5816,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:29","memberName":"max","nodeType":"MemberAccess","src":"7316:17:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5828,"nodeType":"IfStatement","src":"7304:105:29","trueBody":{"id":5827,"nodeType":"Block","src":"7335:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"7392:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5822,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"7356:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5826,"nodeType":"RevertStatement","src":"7349:49:29"}]}},{"expression":{"arguments":[{"id":5831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"7433:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5829,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:29","typeDescriptions":{}}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5814,"id":5833,"nodeType":"Return","src":"7418:21:29"}]},"documentation":{"id":5808,"nodeType":"StructuredDocumentation","src":"6943:280:29","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5835,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:29","nodeType":"FunctionDefinition","parameters":{"id":5811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5810,"mutability":"mutable","name":"value","nameLocation":"7255:5:29","nodeType":"VariableDeclaration","scope":5835,"src":"7247:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5809,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:29"},"returnParameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5835,"src":"7285:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5812,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:29"},"scope":7237,"src":"7228:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5862,"nodeType":"Block","src":"7803:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"7817:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5845,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5844,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:29","memberName":"max","nodeType":"MemberAccess","src":"7825:17:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5856,"nodeType":"IfStatement","src":"7813:105:29","trueBody":{"id":5855,"nodeType":"Block","src":"7844:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"7901:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5850,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"7865:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5854,"nodeType":"RevertStatement","src":"7858:49:29"}]}},{"expression":{"arguments":[{"id":5859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"7942:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5857,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:29","typeDescriptions":{}}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5842,"id":5861,"nodeType":"Return","src":"7927:21:29"}]},"documentation":{"id":5836,"nodeType":"StructuredDocumentation","src":"7452:280:29","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5863,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:29","nodeType":"FunctionDefinition","parameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5838,"mutability":"mutable","name":"value","nameLocation":"7764:5:29","nodeType":"VariableDeclaration","scope":5863,"src":"7756:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5837,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:29"},"returnParameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5863,"src":"7794:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5840,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:29"},"scope":7237,"src":"7737:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5890,"nodeType":"Block","src":"8312:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"8326:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5873,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5872,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:29","memberName":"max","nodeType":"MemberAccess","src":"8334:17:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5884,"nodeType":"IfStatement","src":"8322:105:29","trueBody":{"id":5883,"nodeType":"Block","src":"8353:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"8410:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5878,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"8374:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5882,"nodeType":"RevertStatement","src":"8367:49:29"}]}},{"expression":{"arguments":[{"id":5887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"8451:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5885,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:29","typeDescriptions":{}}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5870,"id":5889,"nodeType":"Return","src":"8436:21:29"}]},"documentation":{"id":5864,"nodeType":"StructuredDocumentation","src":"7961:280:29","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5891,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:29","nodeType":"FunctionDefinition","parameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"value","nameLocation":"8273:5:29","nodeType":"VariableDeclaration","scope":5891,"src":"8265:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5865,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:29"},"returnParameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5891,"src":"8303:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5868,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:29"},"scope":7237,"src":"8246:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5918,"nodeType":"Block","src":"8821:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"8835:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5901,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5900,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:29","memberName":"max","nodeType":"MemberAccess","src":"8843:17:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5912,"nodeType":"IfStatement","src":"8831:105:29","trueBody":{"id":5911,"nodeType":"Block","src":"8862:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"8919:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5906,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"8883:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5910,"nodeType":"RevertStatement","src":"8876:49:29"}]}},{"expression":{"arguments":[{"id":5915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"8960:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5913,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:29","typeDescriptions":{}}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5898,"id":5917,"nodeType":"Return","src":"8945:21:29"}]},"documentation":{"id":5892,"nodeType":"StructuredDocumentation","src":"8470:280:29","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5919,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:29","nodeType":"FunctionDefinition","parameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"value","nameLocation":"8782:5:29","nodeType":"VariableDeclaration","scope":5919,"src":"8774:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5893,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:29"},"returnParameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5919,"src":"8812:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5896,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:29"},"scope":7237,"src":"8755:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5946,"nodeType":"Block","src":"9330:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"9344:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5929,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5928,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:29","memberName":"max","nodeType":"MemberAccess","src":"9352:17:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5940,"nodeType":"IfStatement","src":"9340:105:29","trueBody":{"id":5939,"nodeType":"Block","src":"9371:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"9428:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5934,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"9392:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5938,"nodeType":"RevertStatement","src":"9385:49:29"}]}},{"expression":{"arguments":[{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"9469:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5941,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:29","typeDescriptions":{}}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5926,"id":5945,"nodeType":"Return","src":"9454:21:29"}]},"documentation":{"id":5920,"nodeType":"StructuredDocumentation","src":"8979:280:29","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5947,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:29","nodeType":"FunctionDefinition","parameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"value","nameLocation":"9291:5:29","nodeType":"VariableDeclaration","scope":5947,"src":"9283:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:29"},"returnParameters":{"id":5926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5947,"src":"9321:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5924,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:29"},"scope":7237,"src":"9264:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5974,"nodeType":"Block","src":"9839:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"9853:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5957,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:29","memberName":"max","nodeType":"MemberAccess","src":"9861:17:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5968,"nodeType":"IfStatement","src":"9849:105:29","trueBody":{"id":5967,"nodeType":"Block","src":"9880:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"9937:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5962,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"9901:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5966,"nodeType":"RevertStatement","src":"9894:49:29"}]}},{"expression":{"arguments":[{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"9978:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5969,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:29","typeDescriptions":{}}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5954,"id":5973,"nodeType":"Return","src":"9963:21:29"}]},"documentation":{"id":5948,"nodeType":"StructuredDocumentation","src":"9488:280:29","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:29","nodeType":"FunctionDefinition","parameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"value","nameLocation":"9800:5:29","nodeType":"VariableDeclaration","scope":5975,"src":"9792:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5949,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:29"},"returnParameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5975,"src":"9830:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5952,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:29"},"scope":7237,"src":"9773:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6002,"nodeType":"Block","src":"10348:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"10362:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5985,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:29","memberName":"max","nodeType":"MemberAccess","src":"10370:17:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5996,"nodeType":"IfStatement","src":"10358:105:29","trueBody":{"id":5995,"nodeType":"Block","src":"10389:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"10446:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5990,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"10410:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5994,"nodeType":"RevertStatement","src":"10403:49:29"}]}},{"expression":{"arguments":[{"id":5999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"10487:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5997,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:29","typeDescriptions":{}}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5982,"id":6001,"nodeType":"Return","src":"10472:21:29"}]},"documentation":{"id":5976,"nodeType":"StructuredDocumentation","src":"9997:280:29","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6003,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:29","nodeType":"FunctionDefinition","parameters":{"id":5979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5978,"mutability":"mutable","name":"value","nameLocation":"10309:5:29","nodeType":"VariableDeclaration","scope":6003,"src":"10301:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5977,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:29"},"returnParameters":{"id":5982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6003,"src":"10339:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5980,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:29"},"scope":7237,"src":"10282:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6030,"nodeType":"Block","src":"10857:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"10871:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6013,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:29","memberName":"max","nodeType":"MemberAccess","src":"10879:17:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6024,"nodeType":"IfStatement","src":"10867:105:29","trueBody":{"id":6023,"nodeType":"Block","src":"10898:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"10955:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6018,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"10919:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6022,"nodeType":"RevertStatement","src":"10912:49:29"}]}},{"expression":{"arguments":[{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"10996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6025,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:29","typeDescriptions":{}}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6010,"id":6029,"nodeType":"Return","src":"10981:21:29"}]},"documentation":{"id":6004,"nodeType":"StructuredDocumentation","src":"10506:280:29","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6031,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:29","nodeType":"FunctionDefinition","parameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"value","nameLocation":"10818:5:29","nodeType":"VariableDeclaration","scope":6031,"src":"10810:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:29"},"returnParameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6031,"src":"10848:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6008,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:29"},"scope":7237,"src":"10791:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6058,"nodeType":"Block","src":"11360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"11374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6041,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6040,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:29","memberName":"max","nodeType":"MemberAccess","src":"11382:16:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6052,"nodeType":"IfStatement","src":"11370:103:29","trueBody":{"id":6051,"nodeType":"Block","src":"11400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"11456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6046,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"11421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6050,"nodeType":"RevertStatement","src":"11414:48:29"}]}},{"expression":{"arguments":[{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"11496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6053,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:29","typeDescriptions":{}}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6038,"id":6057,"nodeType":"Return","src":"11482:20:29"}]},"documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"11015:276:29","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6059,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"value","nameLocation":"11322:5:29","nodeType":"VariableDeclaration","scope":6059,"src":"11314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6033,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:29"},"returnParameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6059,"src":"11352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6036,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:29"},"scope":7237,"src":"11296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6086,"nodeType":"Block","src":"11860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"11874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6069,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6068,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:29","memberName":"max","nodeType":"MemberAccess","src":"11882:16:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6080,"nodeType":"IfStatement","src":"11870:103:29","trueBody":{"id":6079,"nodeType":"Block","src":"11900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"11956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6074,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"11921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6078,"nodeType":"RevertStatement","src":"11914:48:29"}]}},{"expression":{"arguments":[{"id":6083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"11996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6081,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:29","typeDescriptions":{}}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6066,"id":6085,"nodeType":"Return","src":"11982:20:29"}]},"documentation":{"id":6060,"nodeType":"StructuredDocumentation","src":"11515:276:29","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6087,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6062,"mutability":"mutable","name":"value","nameLocation":"11822:5:29","nodeType":"VariableDeclaration","scope":6087,"src":"11814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6061,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:29"},"returnParameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6087,"src":"11852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6064,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:29"},"scope":7237,"src":"11796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6114,"nodeType":"Block","src":"12360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"12374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6097,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:29","memberName":"max","nodeType":"MemberAccess","src":"12382:16:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6108,"nodeType":"IfStatement","src":"12370:103:29","trueBody":{"id":6107,"nodeType":"Block","src":"12400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"12456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6102,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"12421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6106,"nodeType":"RevertStatement","src":"12414:48:29"}]}},{"expression":{"arguments":[{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"12496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6109,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:29","typeDescriptions":{}}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6094,"id":6113,"nodeType":"Return","src":"12482:20:29"}]},"documentation":{"id":6088,"nodeType":"StructuredDocumentation","src":"12015:276:29","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"value","nameLocation":"12322:5:29","nodeType":"VariableDeclaration","scope":6115,"src":"12314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6089,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:29"},"returnParameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6115,"src":"12352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6092,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:29"},"scope":7237,"src":"12296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6142,"nodeType":"Block","src":"12860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"12874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6125,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:29","memberName":"max","nodeType":"MemberAccess","src":"12882:16:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6136,"nodeType":"IfStatement","src":"12870:103:29","trueBody":{"id":6135,"nodeType":"Block","src":"12900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"12956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6130,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"12921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6134,"nodeType":"RevertStatement","src":"12914:48:29"}]}},{"expression":{"arguments":[{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"12996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6137,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:29","typeDescriptions":{}}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6122,"id":6141,"nodeType":"Return","src":"12982:20:29"}]},"documentation":{"id":6116,"nodeType":"StructuredDocumentation","src":"12515:276:29","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6143,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"value","nameLocation":"12822:5:29","nodeType":"VariableDeclaration","scope":6143,"src":"12814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6117,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:29"},"returnParameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6143,"src":"12852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6120,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:29"},"scope":7237,"src":"12796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6170,"nodeType":"Block","src":"13360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"13374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6153,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:29","memberName":"max","nodeType":"MemberAccess","src":"13382:16:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6164,"nodeType":"IfStatement","src":"13370:103:29","trueBody":{"id":6163,"nodeType":"Block","src":"13400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"13456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6158,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"13421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6162,"nodeType":"RevertStatement","src":"13414:48:29"}]}},{"expression":{"arguments":[{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"13496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6165,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:29","typeDescriptions":{}}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6150,"id":6169,"nodeType":"Return","src":"13482:20:29"}]},"documentation":{"id":6144,"nodeType":"StructuredDocumentation","src":"13015:276:29","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6146,"mutability":"mutable","name":"value","nameLocation":"13322:5:29","nodeType":"VariableDeclaration","scope":6171,"src":"13314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6145,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:29"},"returnParameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6171,"src":"13352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6148,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:29"},"scope":7237,"src":"13296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6198,"nodeType":"Block","src":"13860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"13874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6181,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:29","memberName":"max","nodeType":"MemberAccess","src":"13882:16:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6192,"nodeType":"IfStatement","src":"13870:103:29","trueBody":{"id":6191,"nodeType":"Block","src":"13900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"13956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6186,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"13921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6190,"nodeType":"RevertStatement","src":"13914:48:29"}]}},{"expression":{"arguments":[{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"13996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6193,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:29","typeDescriptions":{}}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6178,"id":6197,"nodeType":"Return","src":"13982:20:29"}]},"documentation":{"id":6172,"nodeType":"StructuredDocumentation","src":"13515:276:29","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6199,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"value","nameLocation":"13822:5:29","nodeType":"VariableDeclaration","scope":6199,"src":"13814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6173,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:29"},"returnParameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6199,"src":"13852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6176,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:29"},"scope":7237,"src":"13796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6226,"nodeType":"Block","src":"14360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"14374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6209,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:29","memberName":"max","nodeType":"MemberAccess","src":"14382:16:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6220,"nodeType":"IfStatement","src":"14370:103:29","trueBody":{"id":6219,"nodeType":"Block","src":"14400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"14456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6214,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"14421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6218,"nodeType":"RevertStatement","src":"14414:48:29"}]}},{"expression":{"arguments":[{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"14496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6221,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:29","typeDescriptions":{}}},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6206,"id":6225,"nodeType":"Return","src":"14482:20:29"}]},"documentation":{"id":6200,"nodeType":"StructuredDocumentation","src":"14015:276:29","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"value","nameLocation":"14322:5:29","nodeType":"VariableDeclaration","scope":6227,"src":"14314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6201,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:29"},"returnParameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6227,"src":"14352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6204,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:29"},"scope":7237,"src":"14296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6254,"nodeType":"Block","src":"14860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"14874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6237,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6236,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:29","memberName":"max","nodeType":"MemberAccess","src":"14882:16:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6248,"nodeType":"IfStatement","src":"14870:103:29","trueBody":{"id":6247,"nodeType":"Block","src":"14900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"14956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6242,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"14921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6246,"nodeType":"RevertStatement","src":"14914:48:29"}]}},{"expression":{"arguments":[{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"14996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6249,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:29","typeDescriptions":{}}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6234,"id":6253,"nodeType":"Return","src":"14982:20:29"}]},"documentation":{"id":6228,"nodeType":"StructuredDocumentation","src":"14515:276:29","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6255,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"value","nameLocation":"14822:5:29","nodeType":"VariableDeclaration","scope":6255,"src":"14814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6229,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:29"},"returnParameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6255,"src":"14852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6232,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:29"},"scope":7237,"src":"14796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6282,"nodeType":"Block","src":"15360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"15374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6265,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:29","memberName":"max","nodeType":"MemberAccess","src":"15382:16:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6276,"nodeType":"IfStatement","src":"15370:103:29","trueBody":{"id":6275,"nodeType":"Block","src":"15400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"15456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6270,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"15421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6274,"nodeType":"RevertStatement","src":"15414:48:29"}]}},{"expression":{"arguments":[{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"15496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6277,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:29","typeDescriptions":{}}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6262,"id":6281,"nodeType":"Return","src":"15482:20:29"}]},"documentation":{"id":6256,"nodeType":"StructuredDocumentation","src":"15015:276:29","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6283,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"value","nameLocation":"15322:5:29","nodeType":"VariableDeclaration","scope":6283,"src":"15314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6257,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:29"},"returnParameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6283,"src":"15352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6260,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:29"},"scope":7237,"src":"15296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6310,"nodeType":"Block","src":"15860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"15874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6293,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:29","memberName":"max","nodeType":"MemberAccess","src":"15882:16:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6304,"nodeType":"IfStatement","src":"15870:103:29","trueBody":{"id":6303,"nodeType":"Block","src":"15900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"15956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6298,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"15921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6302,"nodeType":"RevertStatement","src":"15914:48:29"}]}},{"expression":{"arguments":[{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"15996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6305,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:29","typeDescriptions":{}}},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6290,"id":6309,"nodeType":"Return","src":"15982:20:29"}]},"documentation":{"id":6284,"nodeType":"StructuredDocumentation","src":"15515:276:29","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6311,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"value","nameLocation":"15822:5:29","nodeType":"VariableDeclaration","scope":6311,"src":"15814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6285,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:29"},"returnParameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6311,"src":"15852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6288,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:29"},"scope":7237,"src":"15796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6338,"nodeType":"Block","src":"16360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"16374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6321,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:29","memberName":"max","nodeType":"MemberAccess","src":"16382:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6332,"nodeType":"IfStatement","src":"16370:103:29","trueBody":{"id":6331,"nodeType":"Block","src":"16400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"16456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"16421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6330,"nodeType":"RevertStatement","src":"16414:48:29"}]}},{"expression":{"arguments":[{"id":6335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"16496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6333,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:29","typeDescriptions":{}}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6318,"id":6337,"nodeType":"Return","src":"16482:20:29"}]},"documentation":{"id":6312,"nodeType":"StructuredDocumentation","src":"16015:276:29","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6314,"mutability":"mutable","name":"value","nameLocation":"16322:5:29","nodeType":"VariableDeclaration","scope":6339,"src":"16314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6313,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:29"},"returnParameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6339,"src":"16352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6316,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:29"},"scope":7237,"src":"16296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6366,"nodeType":"Block","src":"16854:146:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"16868:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6349,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:29","memberName":"max","nodeType":"MemberAccess","src":"16876:15:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6360,"nodeType":"IfStatement","src":"16864:101:29","trueBody":{"id":6359,"nodeType":"Block","src":"16893:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"16948:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"16914:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6358,"nodeType":"RevertStatement","src":"16907:47:29"}]}},{"expression":{"arguments":[{"id":6363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"16987:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6361,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:29","typeDescriptions":{}}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6346,"id":6365,"nodeType":"Return","src":"16974:19:29"}]},"documentation":{"id":6340,"nodeType":"StructuredDocumentation","src":"16515:272:29","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:29","nodeType":"FunctionDefinition","parameters":{"id":6343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6342,"mutability":"mutable","name":"value","nameLocation":"16817:5:29","nodeType":"VariableDeclaration","scope":6367,"src":"16809:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6341,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:29"},"returnParameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6367,"src":"16847:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6344,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:29"},"scope":7237,"src":"16792:208:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6389,"nodeType":"Block","src":"17236:128:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"17250:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6383,"nodeType":"IfStatement","src":"17246:81:29","trueBody":{"id":6382,"nodeType":"Block","src":"17261:66:29","statements":[{"errorCall":{"arguments":[{"id":6379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"17310:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6378,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"17282:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6381,"nodeType":"RevertStatement","src":"17275:41:29"}]}},{"expression":{"arguments":[{"id":6386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"17351:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6384,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:29","typeDescriptions":{}}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6374,"id":6388,"nodeType":"Return","src":"17336:21:29"}]},"documentation":{"id":6368,"nodeType":"StructuredDocumentation","src":"17006:160:29","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6390,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:29","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"value","nameLocation":"17197:5:29","nodeType":"VariableDeclaration","scope":6390,"src":"17190:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6369,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:29"},"returnParameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6390,"src":"17227:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6372,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:29"},"scope":7237,"src":"17171:193:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6415,"nodeType":"Block","src":"17761:150:29","statements":[{"expression":{"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"17771:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"17791:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6399,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:29","typeDescriptions":{}}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6404,"nodeType":"ExpressionStatement","src":"17771:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6405,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"17811:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"17825:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6414,"nodeType":"IfStatement","src":"17807:98:29","trueBody":{"id":6413,"nodeType":"Block","src":"17832:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"17888:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6408,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"17853:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6412,"nodeType":"RevertStatement","src":"17846:48:29"}]}}]},"documentation":{"id":6391,"nodeType":"StructuredDocumentation","src":"17370:312:29","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6416,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:29","nodeType":"FunctionDefinition","parameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6393,"mutability":"mutable","name":"value","nameLocation":"17712:5:29","nodeType":"VariableDeclaration","scope":6416,"src":"17705:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6392,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:29"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:29","nodeType":"VariableDeclaration","scope":6416,"src":"17742:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6395,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:29"},"scope":7237,"src":"17687:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6441,"nodeType":"Block","src":"18308:150:29","statements":[{"expression":{"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"18318:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"18338:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6425,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:29","typeDescriptions":{}}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6430,"nodeType":"ExpressionStatement","src":"18318:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6431,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"18358:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"18372:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6440,"nodeType":"IfStatement","src":"18354:98:29","trueBody":{"id":6439,"nodeType":"Block","src":"18379:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"18435:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6434,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"18400:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6438,"nodeType":"RevertStatement","src":"18393:48:29"}]}}]},"documentation":{"id":6417,"nodeType":"StructuredDocumentation","src":"17917:312:29","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6442,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:29","nodeType":"FunctionDefinition","parameters":{"id":6420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6419,"mutability":"mutable","name":"value","nameLocation":"18259:5:29","nodeType":"VariableDeclaration","scope":6442,"src":"18252:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6418,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:29"},"returnParameters":{"id":6423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6422,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:29","nodeType":"VariableDeclaration","scope":6442,"src":"18289:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6421,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:29"},"scope":7237,"src":"18234:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6467,"nodeType":"Block","src":"18855:150:29","statements":[{"expression":{"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"18865:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"18885:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6451,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:29","typeDescriptions":{}}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6456,"nodeType":"ExpressionStatement","src":"18865:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6457,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"18905:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"18919:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6466,"nodeType":"IfStatement","src":"18901:98:29","trueBody":{"id":6465,"nodeType":"Block","src":"18926:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"18982:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6460,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"18947:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6464,"nodeType":"RevertStatement","src":"18940:48:29"}]}}]},"documentation":{"id":6443,"nodeType":"StructuredDocumentation","src":"18464:312:29","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6468,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:29","nodeType":"FunctionDefinition","parameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"value","nameLocation":"18806:5:29","nodeType":"VariableDeclaration","scope":6468,"src":"18799:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6444,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:29"},"returnParameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:29","nodeType":"VariableDeclaration","scope":6468,"src":"18836:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6447,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:29"},"scope":7237,"src":"18781:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6493,"nodeType":"Block","src":"19402:150:29","statements":[{"expression":{"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"19412:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"19432:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6477,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:29","typeDescriptions":{}}},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6482,"nodeType":"ExpressionStatement","src":"19412:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6483,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"19452:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"19466:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6492,"nodeType":"IfStatement","src":"19448:98:29","trueBody":{"id":6491,"nodeType":"Block","src":"19473:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"19529:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6486,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"19494:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6490,"nodeType":"RevertStatement","src":"19487:48:29"}]}}]},"documentation":{"id":6469,"nodeType":"StructuredDocumentation","src":"19011:312:29","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6494,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:29","nodeType":"FunctionDefinition","parameters":{"id":6472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6471,"mutability":"mutable","name":"value","nameLocation":"19353:5:29","nodeType":"VariableDeclaration","scope":6494,"src":"19346:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6470,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:29"},"returnParameters":{"id":6475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6474,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:29","nodeType":"VariableDeclaration","scope":6494,"src":"19383:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6473,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:29"},"scope":7237,"src":"19328:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6519,"nodeType":"Block","src":"19949:150:29","statements":[{"expression":{"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"19959:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"19979:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6503,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:29","typeDescriptions":{}}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6508,"nodeType":"ExpressionStatement","src":"19959:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6509,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"19999:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"20013:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6518,"nodeType":"IfStatement","src":"19995:98:29","trueBody":{"id":6517,"nodeType":"Block","src":"20020:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"20076:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6512,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"20041:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6516,"nodeType":"RevertStatement","src":"20034:48:29"}]}}]},"documentation":{"id":6495,"nodeType":"StructuredDocumentation","src":"19558:312:29","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6520,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:29","nodeType":"FunctionDefinition","parameters":{"id":6498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6497,"mutability":"mutable","name":"value","nameLocation":"19900:5:29","nodeType":"VariableDeclaration","scope":6520,"src":"19893:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6496,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:29"},"returnParameters":{"id":6501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6500,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:29","nodeType":"VariableDeclaration","scope":6520,"src":"19930:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6499,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:29"},"scope":7237,"src":"19875:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6545,"nodeType":"Block","src":"20496:150:29","statements":[{"expression":{"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"20506:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"20526:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6529,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:29","typeDescriptions":{}}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6534,"nodeType":"ExpressionStatement","src":"20506:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6535,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"20546:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"20560:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6544,"nodeType":"IfStatement","src":"20542:98:29","trueBody":{"id":6543,"nodeType":"Block","src":"20567:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"20623:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6538,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"20588:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6542,"nodeType":"RevertStatement","src":"20581:48:29"}]}}]},"documentation":{"id":6521,"nodeType":"StructuredDocumentation","src":"20105:312:29","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6546,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:29","nodeType":"FunctionDefinition","parameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"value","nameLocation":"20447:5:29","nodeType":"VariableDeclaration","scope":6546,"src":"20440:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6522,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:29"},"returnParameters":{"id":6527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6526,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:29","nodeType":"VariableDeclaration","scope":6546,"src":"20477:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6525,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:29"},"scope":7237,"src":"20422:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6571,"nodeType":"Block","src":"21043:150:29","statements":[{"expression":{"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"21053:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"21073:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6555,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:29","typeDescriptions":{}}},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6560,"nodeType":"ExpressionStatement","src":"21053:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6561,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"21093:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"21107:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6570,"nodeType":"IfStatement","src":"21089:98:29","trueBody":{"id":6569,"nodeType":"Block","src":"21114:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"21170:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6564,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"21135:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6568,"nodeType":"RevertStatement","src":"21128:48:29"}]}}]},"documentation":{"id":6547,"nodeType":"StructuredDocumentation","src":"20652:312:29","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6572,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:29","nodeType":"FunctionDefinition","parameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"value","nameLocation":"20994:5:29","nodeType":"VariableDeclaration","scope":6572,"src":"20987:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6548,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:29"},"returnParameters":{"id":6553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6552,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:29","nodeType":"VariableDeclaration","scope":6572,"src":"21024:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6551,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:29"},"scope":7237,"src":"20969:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6597,"nodeType":"Block","src":"21590:150:29","statements":[{"expression":{"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"21600:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"21620:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6581,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:29","typeDescriptions":{}}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6586,"nodeType":"ExpressionStatement","src":"21600:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6587,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"21640:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"21654:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6596,"nodeType":"IfStatement","src":"21636:98:29","trueBody":{"id":6595,"nodeType":"Block","src":"21661:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"21717:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6590,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"21682:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6594,"nodeType":"RevertStatement","src":"21675:48:29"}]}}]},"documentation":{"id":6573,"nodeType":"StructuredDocumentation","src":"21199:312:29","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6598,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:29","nodeType":"FunctionDefinition","parameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6575,"mutability":"mutable","name":"value","nameLocation":"21541:5:29","nodeType":"VariableDeclaration","scope":6598,"src":"21534:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6574,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:29"},"returnParameters":{"id":6579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6578,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:29","nodeType":"VariableDeclaration","scope":6598,"src":"21571:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6577,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:29"},"scope":7237,"src":"21516:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6623,"nodeType":"Block","src":"22137:150:29","statements":[{"expression":{"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"22147:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"22167:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6607,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:29","typeDescriptions":{}}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6612,"nodeType":"ExpressionStatement","src":"22147:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6613,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"22187:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"22201:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6622,"nodeType":"IfStatement","src":"22183:98:29","trueBody":{"id":6621,"nodeType":"Block","src":"22208:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"22264:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6616,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"22229:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6620,"nodeType":"RevertStatement","src":"22222:48:29"}]}}]},"documentation":{"id":6599,"nodeType":"StructuredDocumentation","src":"21746:312:29","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6624,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:29","nodeType":"FunctionDefinition","parameters":{"id":6602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6601,"mutability":"mutable","name":"value","nameLocation":"22088:5:29","nodeType":"VariableDeclaration","scope":6624,"src":"22081:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6600,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:29"},"returnParameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:29","nodeType":"VariableDeclaration","scope":6624,"src":"22118:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6603,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:29"},"scope":7237,"src":"22063:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6649,"nodeType":"Block","src":"22684:150:29","statements":[{"expression":{"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"22694:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"22714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6633,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:29","typeDescriptions":{}}},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6638,"nodeType":"ExpressionStatement","src":"22694:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6639,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"22734:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"22748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6648,"nodeType":"IfStatement","src":"22730:98:29","trueBody":{"id":6647,"nodeType":"Block","src":"22755:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"22811:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6642,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"22776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6646,"nodeType":"RevertStatement","src":"22769:48:29"}]}}]},"documentation":{"id":6625,"nodeType":"StructuredDocumentation","src":"22293:312:29","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6650,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:29","nodeType":"FunctionDefinition","parameters":{"id":6628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6627,"mutability":"mutable","name":"value","nameLocation":"22635:5:29","nodeType":"VariableDeclaration","scope":6650,"src":"22628:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6626,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:29"},"returnParameters":{"id":6631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6630,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:29","nodeType":"VariableDeclaration","scope":6650,"src":"22665:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6629,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:29"},"scope":7237,"src":"22610:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6675,"nodeType":"Block","src":"23231:150:29","statements":[{"expression":{"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"23241:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"23261:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6659,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:29","typeDescriptions":{}}},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6664,"nodeType":"ExpressionStatement","src":"23241:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6665,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"23281:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"23295:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6674,"nodeType":"IfStatement","src":"23277:98:29","trueBody":{"id":6673,"nodeType":"Block","src":"23302:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"23358:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6668,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"23323:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6672,"nodeType":"RevertStatement","src":"23316:48:29"}]}}]},"documentation":{"id":6651,"nodeType":"StructuredDocumentation","src":"22840:312:29","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6676,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:29","nodeType":"FunctionDefinition","parameters":{"id":6654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6653,"mutability":"mutable","name":"value","nameLocation":"23182:5:29","nodeType":"VariableDeclaration","scope":6676,"src":"23175:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6652,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:29"},"returnParameters":{"id":6657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6656,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:29","nodeType":"VariableDeclaration","scope":6676,"src":"23212:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6655,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:29"},"scope":7237,"src":"23157:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6701,"nodeType":"Block","src":"23778:150:29","statements":[{"expression":{"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"23788:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"23808:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6685,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:29","typeDescriptions":{}}},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6690,"nodeType":"ExpressionStatement","src":"23788:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"23828:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"23842:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6700,"nodeType":"IfStatement","src":"23824:98:29","trueBody":{"id":6699,"nodeType":"Block","src":"23849:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"23905:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6694,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"23870:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6698,"nodeType":"RevertStatement","src":"23863:48:29"}]}}]},"documentation":{"id":6677,"nodeType":"StructuredDocumentation","src":"23387:312:29","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6702,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:29","nodeType":"FunctionDefinition","parameters":{"id":6680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6679,"mutability":"mutable","name":"value","nameLocation":"23729:5:29","nodeType":"VariableDeclaration","scope":6702,"src":"23722:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6678,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:29"},"returnParameters":{"id":6683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6682,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:29","nodeType":"VariableDeclaration","scope":6702,"src":"23759:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6681,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:29"},"scope":7237,"src":"23704:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6727,"nodeType":"Block","src":"24325:150:29","statements":[{"expression":{"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"24335:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"24355:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6711,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:29","typeDescriptions":{}}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6716,"nodeType":"ExpressionStatement","src":"24335:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6717,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"24375:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"24389:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6726,"nodeType":"IfStatement","src":"24371:98:29","trueBody":{"id":6725,"nodeType":"Block","src":"24396:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"24452:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6720,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"24417:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6724,"nodeType":"RevertStatement","src":"24410:48:29"}]}}]},"documentation":{"id":6703,"nodeType":"StructuredDocumentation","src":"23934:312:29","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6728,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:29","nodeType":"FunctionDefinition","parameters":{"id":6706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6705,"mutability":"mutable","name":"value","nameLocation":"24276:5:29","nodeType":"VariableDeclaration","scope":6728,"src":"24269:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6704,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:29"},"returnParameters":{"id":6709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6708,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:29","nodeType":"VariableDeclaration","scope":6728,"src":"24306:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6707,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:29"},"scope":7237,"src":"24251:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6753,"nodeType":"Block","src":"24872:150:29","statements":[{"expression":{"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"24882:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"24902:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6737,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:29","typeDescriptions":{}}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6742,"nodeType":"ExpressionStatement","src":"24882:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6743,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"24922:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"24936:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6752,"nodeType":"IfStatement","src":"24918:98:29","trueBody":{"id":6751,"nodeType":"Block","src":"24943:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"24999:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6746,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"24964:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6750,"nodeType":"RevertStatement","src":"24957:48:29"}]}}]},"documentation":{"id":6729,"nodeType":"StructuredDocumentation","src":"24481:312:29","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6754,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:29","nodeType":"FunctionDefinition","parameters":{"id":6732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6731,"mutability":"mutable","name":"value","nameLocation":"24823:5:29","nodeType":"VariableDeclaration","scope":6754,"src":"24816:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6730,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:29"},"returnParameters":{"id":6735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6734,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:29","nodeType":"VariableDeclaration","scope":6754,"src":"24853:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6733,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:29"},"scope":7237,"src":"24798:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6779,"nodeType":"Block","src":"25419:150:29","statements":[{"expression":{"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6762,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"25429:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"25449:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6763,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:29","typeDescriptions":{}}},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6768,"nodeType":"ExpressionStatement","src":"25429:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6769,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"25469:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"25483:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6778,"nodeType":"IfStatement","src":"25465:98:29","trueBody":{"id":6777,"nodeType":"Block","src":"25490:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"25546:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6772,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"25511:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6776,"nodeType":"RevertStatement","src":"25504:48:29"}]}}]},"documentation":{"id":6755,"nodeType":"StructuredDocumentation","src":"25028:312:29","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6780,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:29","nodeType":"FunctionDefinition","parameters":{"id":6758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6757,"mutability":"mutable","name":"value","nameLocation":"25370:5:29","nodeType":"VariableDeclaration","scope":6780,"src":"25363:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6756,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:29"},"returnParameters":{"id":6761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6760,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:29","nodeType":"VariableDeclaration","scope":6780,"src":"25400:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6759,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:29"},"scope":7237,"src":"25345:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6805,"nodeType":"Block","src":"25966:150:29","statements":[{"expression":{"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6788,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"25976:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"25996:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6789,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:29","typeDescriptions":{}}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6794,"nodeType":"ExpressionStatement","src":"25976:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6795,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"26016:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"26030:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6804,"nodeType":"IfStatement","src":"26012:98:29","trueBody":{"id":6803,"nodeType":"Block","src":"26037:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"26093:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6798,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"26058:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6802,"nodeType":"RevertStatement","src":"26051:48:29"}]}}]},"documentation":{"id":6781,"nodeType":"StructuredDocumentation","src":"25575:312:29","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6806,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:29","nodeType":"FunctionDefinition","parameters":{"id":6784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6783,"mutability":"mutable","name":"value","nameLocation":"25917:5:29","nodeType":"VariableDeclaration","scope":6806,"src":"25910:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6782,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:29"},"returnParameters":{"id":6787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6786,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:29","nodeType":"VariableDeclaration","scope":6806,"src":"25947:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6785,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:29"},"scope":7237,"src":"25892:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6831,"nodeType":"Block","src":"26513:150:29","statements":[{"expression":{"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6814,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"26523:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"26543:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6815,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:29","typeDescriptions":{}}},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6820,"nodeType":"ExpressionStatement","src":"26523:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6821,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"26563:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"26577:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6830,"nodeType":"IfStatement","src":"26559:98:29","trueBody":{"id":6829,"nodeType":"Block","src":"26584:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"26640:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6824,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"26605:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6828,"nodeType":"RevertStatement","src":"26598:48:29"}]}}]},"documentation":{"id":6807,"nodeType":"StructuredDocumentation","src":"26122:312:29","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6832,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:29","nodeType":"FunctionDefinition","parameters":{"id":6810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6809,"mutability":"mutable","name":"value","nameLocation":"26464:5:29","nodeType":"VariableDeclaration","scope":6832,"src":"26457:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6808,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:29"},"returnParameters":{"id":6813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6812,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:29","nodeType":"VariableDeclaration","scope":6832,"src":"26494:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6811,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:29"},"scope":7237,"src":"26439:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6857,"nodeType":"Block","src":"27060:150:29","statements":[{"expression":{"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6840,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"27070:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"27090:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6841,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:29","typeDescriptions":{}}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6846,"nodeType":"ExpressionStatement","src":"27070:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6847,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"27110:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"27124:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6856,"nodeType":"IfStatement","src":"27106:98:29","trueBody":{"id":6855,"nodeType":"Block","src":"27131:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"27187:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6850,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"27152:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6854,"nodeType":"RevertStatement","src":"27145:48:29"}]}}]},"documentation":{"id":6833,"nodeType":"StructuredDocumentation","src":"26669:312:29","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6858,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:29","nodeType":"FunctionDefinition","parameters":{"id":6836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6835,"mutability":"mutable","name":"value","nameLocation":"27011:5:29","nodeType":"VariableDeclaration","scope":6858,"src":"27004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6834,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:29"},"returnParameters":{"id":6839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6838,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:29","nodeType":"VariableDeclaration","scope":6858,"src":"27041:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6837,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:29"},"scope":7237,"src":"26986:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6883,"nodeType":"Block","src":"27607:150:29","statements":[{"expression":{"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6866,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"27617:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"27637:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6867,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:29","typeDescriptions":{}}},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6872,"nodeType":"ExpressionStatement","src":"27617:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6873,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"27657:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"27671:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6882,"nodeType":"IfStatement","src":"27653:98:29","trueBody":{"id":6881,"nodeType":"Block","src":"27678:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"27734:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6876,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"27699:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6880,"nodeType":"RevertStatement","src":"27692:48:29"}]}}]},"documentation":{"id":6859,"nodeType":"StructuredDocumentation","src":"27216:312:29","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6884,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:29","nodeType":"FunctionDefinition","parameters":{"id":6862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6861,"mutability":"mutable","name":"value","nameLocation":"27558:5:29","nodeType":"VariableDeclaration","scope":6884,"src":"27551:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6860,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:29"},"returnParameters":{"id":6865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6864,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:29","nodeType":"VariableDeclaration","scope":6884,"src":"27588:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6863,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:29"},"scope":7237,"src":"27533:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6909,"nodeType":"Block","src":"28147:148:29","statements":[{"expression":{"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6892,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"28157:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"28176:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6893,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:29","typeDescriptions":{}}},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6898,"nodeType":"ExpressionStatement","src":"28157:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6899,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"28196:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"28210:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6908,"nodeType":"IfStatement","src":"28192:97:29","trueBody":{"id":6907,"nodeType":"Block","src":"28217:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"28272:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6902,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"28238:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6906,"nodeType":"RevertStatement","src":"28231:47:29"}]}}]},"documentation":{"id":6885,"nodeType":"StructuredDocumentation","src":"27763:307:29","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6910,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:29","nodeType":"FunctionDefinition","parameters":{"id":6888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6887,"mutability":"mutable","name":"value","nameLocation":"28099:5:29","nodeType":"VariableDeclaration","scope":6910,"src":"28092:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6886,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:29"},"returnParameters":{"id":6891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6890,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:29","nodeType":"VariableDeclaration","scope":6910,"src":"28129:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6889,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:29"},"scope":7237,"src":"28075:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6935,"nodeType":"Block","src":"28685:148:29","statements":[{"expression":{"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6918,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"28695:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"28714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6919,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:29","typeDescriptions":{}}},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6924,"nodeType":"ExpressionStatement","src":"28695:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6925,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"28734:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"28748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6934,"nodeType":"IfStatement","src":"28730:97:29","trueBody":{"id":6933,"nodeType":"Block","src":"28755:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"28810:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6928,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"28776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6932,"nodeType":"RevertStatement","src":"28769:47:29"}]}}]},"documentation":{"id":6911,"nodeType":"StructuredDocumentation","src":"28301:307:29","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6936,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:29","nodeType":"FunctionDefinition","parameters":{"id":6914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6913,"mutability":"mutable","name":"value","nameLocation":"28637:5:29","nodeType":"VariableDeclaration","scope":6936,"src":"28630:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6912,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:29"},"returnParameters":{"id":6917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6916,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:29","nodeType":"VariableDeclaration","scope":6936,"src":"28667:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6915,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:29"},"scope":7237,"src":"28613:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6961,"nodeType":"Block","src":"29223:148:29","statements":[{"expression":{"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6944,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"29233:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"29252:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6945,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:29","typeDescriptions":{}}},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6950,"nodeType":"ExpressionStatement","src":"29233:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6951,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"29272:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"29286:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6960,"nodeType":"IfStatement","src":"29268:97:29","trueBody":{"id":6959,"nodeType":"Block","src":"29293:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"29348:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6954,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"29314:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6958,"nodeType":"RevertStatement","src":"29307:47:29"}]}}]},"documentation":{"id":6937,"nodeType":"StructuredDocumentation","src":"28839:307:29","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6962,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:29","nodeType":"FunctionDefinition","parameters":{"id":6940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6939,"mutability":"mutable","name":"value","nameLocation":"29175:5:29","nodeType":"VariableDeclaration","scope":6962,"src":"29168:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6938,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:29"},"returnParameters":{"id":6943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6942,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:29","nodeType":"VariableDeclaration","scope":6962,"src":"29205:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6941,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:29"},"scope":7237,"src":"29151:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6987,"nodeType":"Block","src":"29761:148:29","statements":[{"expression":{"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6970,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"29771:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"29790:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6971,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:29","typeDescriptions":{}}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6976,"nodeType":"ExpressionStatement","src":"29771:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6977,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"29810:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"29824:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6986,"nodeType":"IfStatement","src":"29806:97:29","trueBody":{"id":6985,"nodeType":"Block","src":"29831:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"29886:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6980,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"29852:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6984,"nodeType":"RevertStatement","src":"29845:47:29"}]}}]},"documentation":{"id":6963,"nodeType":"StructuredDocumentation","src":"29377:307:29","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6988,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:29","nodeType":"FunctionDefinition","parameters":{"id":6966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6965,"mutability":"mutable","name":"value","nameLocation":"29713:5:29","nodeType":"VariableDeclaration","scope":6988,"src":"29706:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6964,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:29"},"returnParameters":{"id":6969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6968,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:29","nodeType":"VariableDeclaration","scope":6988,"src":"29743:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6967,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:29"},"scope":7237,"src":"29689:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7013,"nodeType":"Block","src":"30299:148:29","statements":[{"expression":{"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6996,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"30309:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"30328:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6997,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:29","typeDescriptions":{}}},"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7002,"nodeType":"ExpressionStatement","src":"30309:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7003,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"30348:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"30362:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7012,"nodeType":"IfStatement","src":"30344:97:29","trueBody":{"id":7011,"nodeType":"Block","src":"30369:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"30424:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7006,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"30390:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7010,"nodeType":"RevertStatement","src":"30383:47:29"}]}}]},"documentation":{"id":6989,"nodeType":"StructuredDocumentation","src":"29915:307:29","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7014,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:29","nodeType":"FunctionDefinition","parameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6991,"mutability":"mutable","name":"value","nameLocation":"30251:5:29","nodeType":"VariableDeclaration","scope":7014,"src":"30244:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6990,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:29"},"returnParameters":{"id":6995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6994,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:29","nodeType":"VariableDeclaration","scope":7014,"src":"30281:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6993,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:29"},"scope":7237,"src":"30227:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7039,"nodeType":"Block","src":"30837:148:29","statements":[{"expression":{"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7022,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"30847:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"30866:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7023,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:29","typeDescriptions":{}}},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7028,"nodeType":"ExpressionStatement","src":"30847:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7029,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"30886:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"30900:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7038,"nodeType":"IfStatement","src":"30882:97:29","trueBody":{"id":7037,"nodeType":"Block","src":"30907:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"30962:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7032,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"30928:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7036,"nodeType":"RevertStatement","src":"30921:47:29"}]}}]},"documentation":{"id":7015,"nodeType":"StructuredDocumentation","src":"30453:307:29","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7040,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:29","nodeType":"FunctionDefinition","parameters":{"id":7018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7017,"mutability":"mutable","name":"value","nameLocation":"30789:5:29","nodeType":"VariableDeclaration","scope":7040,"src":"30782:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7016,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:29"},"returnParameters":{"id":7021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7020,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:29","nodeType":"VariableDeclaration","scope":7040,"src":"30819:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7019,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:29"},"scope":7237,"src":"30765:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7065,"nodeType":"Block","src":"31375:148:29","statements":[{"expression":{"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7048,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"31385:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"31404:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7049,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:29","typeDescriptions":{}}},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7054,"nodeType":"ExpressionStatement","src":"31385:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7055,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"31424:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"31438:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7064,"nodeType":"IfStatement","src":"31420:97:29","trueBody":{"id":7063,"nodeType":"Block","src":"31445:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"31500:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7058,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"31466:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7062,"nodeType":"RevertStatement","src":"31459:47:29"}]}}]},"documentation":{"id":7041,"nodeType":"StructuredDocumentation","src":"30991:307:29","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7066,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:29","nodeType":"FunctionDefinition","parameters":{"id":7044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7043,"mutability":"mutable","name":"value","nameLocation":"31327:5:29","nodeType":"VariableDeclaration","scope":7066,"src":"31320:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7042,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:29"},"returnParameters":{"id":7047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7046,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:29","nodeType":"VariableDeclaration","scope":7066,"src":"31357:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7045,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:29"},"scope":7237,"src":"31303:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7091,"nodeType":"Block","src":"31913:148:29","statements":[{"expression":{"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7074,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"31923:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"31942:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7075,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:29","typeDescriptions":{}}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7080,"nodeType":"ExpressionStatement","src":"31923:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7081,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"31962:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"31976:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7090,"nodeType":"IfStatement","src":"31958:97:29","trueBody":{"id":7089,"nodeType":"Block","src":"31983:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"32038:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7084,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"32004:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7088,"nodeType":"RevertStatement","src":"31997:47:29"}]}}]},"documentation":{"id":7067,"nodeType":"StructuredDocumentation","src":"31529:307:29","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7092,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:29","nodeType":"FunctionDefinition","parameters":{"id":7070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7069,"mutability":"mutable","name":"value","nameLocation":"31865:5:29","nodeType":"VariableDeclaration","scope":7092,"src":"31858:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7068,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:29"},"returnParameters":{"id":7073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7072,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:29","nodeType":"VariableDeclaration","scope":7092,"src":"31895:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7071,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:29"},"scope":7237,"src":"31841:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7117,"nodeType":"Block","src":"32451:148:29","statements":[{"expression":{"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7100,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"32461:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"32480:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7101,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:29","typeDescriptions":{}}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7106,"nodeType":"ExpressionStatement","src":"32461:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7107,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"32500:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"32514:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7116,"nodeType":"IfStatement","src":"32496:97:29","trueBody":{"id":7115,"nodeType":"Block","src":"32521:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"32576:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7110,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"32542:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7114,"nodeType":"RevertStatement","src":"32535:47:29"}]}}]},"documentation":{"id":7093,"nodeType":"StructuredDocumentation","src":"32067:307:29","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7118,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:29","nodeType":"FunctionDefinition","parameters":{"id":7096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7095,"mutability":"mutable","name":"value","nameLocation":"32403:5:29","nodeType":"VariableDeclaration","scope":7118,"src":"32396:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7094,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:29"},"returnParameters":{"id":7099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7098,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:29","nodeType":"VariableDeclaration","scope":7118,"src":"32433:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7097,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:29"},"scope":7237,"src":"32379:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7143,"nodeType":"Block","src":"32989:148:29","statements":[{"expression":{"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7126,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"32999:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"33018:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7127,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:29","typeDescriptions":{}}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7132,"nodeType":"ExpressionStatement","src":"32999:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7133,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"33038:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"33052:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7142,"nodeType":"IfStatement","src":"33034:97:29","trueBody":{"id":7141,"nodeType":"Block","src":"33059:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"33114:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7136,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"33080:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7140,"nodeType":"RevertStatement","src":"33073:47:29"}]}}]},"documentation":{"id":7119,"nodeType":"StructuredDocumentation","src":"32605:307:29","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7144,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:29","nodeType":"FunctionDefinition","parameters":{"id":7122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7121,"mutability":"mutable","name":"value","nameLocation":"32941:5:29","nodeType":"VariableDeclaration","scope":7144,"src":"32934:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7120,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:29"},"returnParameters":{"id":7125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7124,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:29","nodeType":"VariableDeclaration","scope":7144,"src":"32971:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7123,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:29"},"scope":7237,"src":"32917:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7169,"nodeType":"Block","src":"33527:148:29","statements":[{"expression":{"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7152,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"33537:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"33556:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7153,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:29","typeDescriptions":{}}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7158,"nodeType":"ExpressionStatement","src":"33537:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7159,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"33576:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"33590:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7168,"nodeType":"IfStatement","src":"33572:97:29","trueBody":{"id":7167,"nodeType":"Block","src":"33597:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"33652:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7162,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"33618:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7166,"nodeType":"RevertStatement","src":"33611:47:29"}]}}]},"documentation":{"id":7145,"nodeType":"StructuredDocumentation","src":"33143:307:29","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7170,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:29","nodeType":"FunctionDefinition","parameters":{"id":7148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7147,"mutability":"mutable","name":"value","nameLocation":"33479:5:29","nodeType":"VariableDeclaration","scope":7170,"src":"33472:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7146,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:29"},"returnParameters":{"id":7151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7150,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:29","nodeType":"VariableDeclaration","scope":7170,"src":"33509:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7149,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:29"},"scope":7237,"src":"33455:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7195,"nodeType":"Block","src":"34058:146:29","statements":[{"expression":{"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7178,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"34068:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"34086:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7179,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:29","typeDescriptions":{}}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7184,"nodeType":"ExpressionStatement","src":"34068:24:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7185,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"34106:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"34120:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7194,"nodeType":"IfStatement","src":"34102:96:29","trueBody":{"id":7193,"nodeType":"Block","src":"34127:71:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"34181:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7188,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"34148:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7192,"nodeType":"RevertStatement","src":"34141:46:29"}]}}]},"documentation":{"id":7171,"nodeType":"StructuredDocumentation","src":"33681:302:29","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7196,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:29","nodeType":"FunctionDefinition","parameters":{"id":7174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7173,"mutability":"mutable","name":"value","nameLocation":"34011:5:29","nodeType":"VariableDeclaration","scope":7196,"src":"34004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7172,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:29"},"returnParameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7176,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:29","nodeType":"VariableDeclaration","scope":7196,"src":"34041:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7175,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:29"},"scope":7237,"src":"33988:216:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7225,"nodeType":"Block","src":"34444:250:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"34557:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7208,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7207,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:29","memberName":"max","nodeType":"MemberAccess","src":"34573:16:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7205,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:29","typeDescriptions":{}}},"id":7212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7219,"nodeType":"IfStatement","src":"34553:105:29","trueBody":{"id":7218,"nodeType":"Block","src":"34592:66:29","statements":[{"errorCall":{"arguments":[{"id":7215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"34641:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7214,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"34613:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7217,"nodeType":"RevertStatement","src":"34606:41:29"}]}},{"expression":{"arguments":[{"id":7222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"34681:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7220,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:29","typeDescriptions":{}}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7203,"id":7224,"nodeType":"Return","src":"34667:20:29"}]},"documentation":{"id":7197,"nodeType":"StructuredDocumentation","src":"34210:165:29","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7226,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:29","nodeType":"FunctionDefinition","parameters":{"id":7200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7199,"mutability":"mutable","name":"value","nameLocation":"34406:5:29","nodeType":"VariableDeclaration","scope":7226,"src":"34398:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7198,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:29"},"returnParameters":{"id":7203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7226,"src":"34436:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7201,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:29"},"scope":7237,"src":"34380:314:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7235,"nodeType":"Block","src":"34853:87:29","statements":[{"AST":{"nativeSrc":"34888:46:29","nodeType":"YulBlock","src":"34888:46:29","statements":[{"nativeSrc":"34902:22:29","nodeType":"YulAssignment","src":"34902:22:29","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:29","nodeType":"YulIdentifier","src":"34921:1:29"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:29","nodeType":"YulIdentifier","src":"34914:6:29"},"nativeSrc":"34914:9:29","nodeType":"YulFunctionCall","src":"34914:9:29"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:29","nodeType":"YulIdentifier","src":"34907:6:29"},"nativeSrc":"34907:17:29","nodeType":"YulFunctionCall","src":"34907:17:29"},"variableNames":[{"name":"u","nativeSrc":"34902:1:29","nodeType":"YulIdentifier","src":"34902:1:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7229,"isOffset":false,"isSlot":false,"src":"34921:1:29","valueSize":1},{"declaration":7232,"isOffset":false,"isSlot":false,"src":"34902:1:29","valueSize":1}],"flags":["memory-safe"],"id":7234,"nodeType":"InlineAssembly","src":"34863:71:29"}]},"documentation":{"id":7227,"nodeType":"StructuredDocumentation","src":"34700:90:29","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7236,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:29","nodeType":"FunctionDefinition","parameters":{"id":7230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7229,"mutability":"mutable","name":"b","nameLocation":"34816:1:29","nodeType":"VariableDeclaration","scope":7236,"src":"34811:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7228,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:29"},"returnParameters":{"id":7233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7232,"mutability":"mutable","name":"u","nameLocation":"34850:1:29","nodeType":"VariableDeclaration","scope":7236,"src":"34842:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7231,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:29"},"scope":7237,"src":"34795:145:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7238,"src":"769:34173:29","usedErrors":[5482,5487,5494,5499],"usedEvents":[]}],"src":"192:34751:29"},"id":29},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7237],"SignedMath":[7381]},"id":7382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7239,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7241,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7382,"sourceUnit":7238,"src":"135:40:30","symbolAliases":[{"foreign":{"id":7240,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"143:8:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7242,"nodeType":"StructuredDocumentation","src":"177:80:30","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7381,"linearizedBaseContracts":[7381],"name":"SignedMath","nameLocation":"266:10:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":7271,"nodeType":"Block","src":"746:215:30","statements":[{"id":7270,"nodeType":"UncheckedBlock","src":"756:199:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7254,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"894:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"900:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"904:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7263,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"932:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7261,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"916:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"916:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7259,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:30","typeDescriptions":{}}},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7253,"id":7269,"nodeType":"Return","src":"887:57:30"}]}]},"documentation":{"id":7243,"nodeType":"StructuredDocumentation","src":"283:374:30","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7272,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:30","nodeType":"FunctionDefinition","parameters":{"id":7250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7245,"mutability":"mutable","name":"condition","nameLocation":"684:9:30","nodeType":"VariableDeclaration","scope":7272,"src":"679:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7244,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7247,"mutability":"mutable","name":"a","nameLocation":"702:1:30","nodeType":"VariableDeclaration","scope":7272,"src":"695:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7246,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7249,"mutability":"mutable","name":"b","nameLocation":"712:1:30","nodeType":"VariableDeclaration","scope":7272,"src":"705:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7248,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:30"},"returnParameters":{"id":7253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7272,"src":"738:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7251,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:30"},"scope":7381,"src":"662:299:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7290,"nodeType":"Block","src":"1102:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7283,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"1127:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7284,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"1131:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7286,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"1134:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7287,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"1137:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7282,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"1119:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7281,"id":7289,"nodeType":"Return","src":"1112:27:30"}]},"documentation":{"id":7273,"nodeType":"StructuredDocumentation","src":"967:66:30","text":" @dev Returns the largest of two signed numbers."},"id":7291,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:30","nodeType":"FunctionDefinition","parameters":{"id":7278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7275,"mutability":"mutable","name":"a","nameLocation":"1058:1:30","nodeType":"VariableDeclaration","scope":7291,"src":"1051:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7274,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7277,"mutability":"mutable","name":"b","nameLocation":"1068:1:30","nodeType":"VariableDeclaration","scope":7291,"src":"1061:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7276,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:30"},"returnParameters":{"id":7281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7291,"src":"1094:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7279,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:30"},"scope":7381,"src":"1038:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7309,"nodeType":"Block","src":"1288:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7302,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"1313:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7303,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"1317:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"1320:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7306,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"1323:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7301,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"1305:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7300,"id":7308,"nodeType":"Return","src":"1298:27:30"}]},"documentation":{"id":7292,"nodeType":"StructuredDocumentation","src":"1152:67:30","text":" @dev Returns the smallest of two signed numbers."},"id":7310,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:30","nodeType":"FunctionDefinition","parameters":{"id":7297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7294,"mutability":"mutable","name":"a","nameLocation":"1244:1:30","nodeType":"VariableDeclaration","scope":7310,"src":"1237:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7293,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7296,"mutability":"mutable","name":"b","nameLocation":"1254:1:30","nodeType":"VariableDeclaration","scope":7310,"src":"1247:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7295,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:30"},"returnParameters":{"id":7300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7310,"src":"1280:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7298,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:30"},"scope":7381,"src":"1224:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7353,"nodeType":"Block","src":"1537:162:30","statements":[{"assignments":[7321],"declarations":[{"constant":false,"id":7321,"mutability":"mutable","name":"x","nameLocation":"1606:1:30","nodeType":"VariableDeclaration","scope":7353,"src":"1599:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7320,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7334,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7322,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"1611:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7323,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"1615:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7326,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"1622:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7327,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"1626:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:30"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7335,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"1651:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7340,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"1671:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:30","typeDescriptions":{}}},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7336,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:30","typeDescriptions":{}}},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"1685:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7346,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"1689:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7319,"id":7352,"nodeType":"Return","src":"1644:48:30"}]},"documentation":{"id":7311,"nodeType":"StructuredDocumentation","src":"1338:126:30","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7354,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:30","nodeType":"FunctionDefinition","parameters":{"id":7316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7313,"mutability":"mutable","name":"a","nameLocation":"1493:1:30","nodeType":"VariableDeclaration","scope":7354,"src":"1486:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7312,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7315,"mutability":"mutable","name":"b","nameLocation":"1503:1:30","nodeType":"VariableDeclaration","scope":7354,"src":"1496:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7314,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:30"},"returnParameters":{"id":7319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7354,"src":"1529:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7317,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:30"},"scope":7381,"src":"1469:230:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7379,"nodeType":"Block","src":"1843:767:30","statements":[{"id":7378,"nodeType":"UncheckedBlock","src":"1853:751:30","statements":[{"assignments":[7363],"declarations":[{"constant":false,"id":7363,"mutability":"mutable","name":"mask","nameLocation":"2424:4:30","nodeType":"VariableDeclaration","scope":7378,"src":"2417:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7362,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7367,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7364,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"2431:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7370,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"2576:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7371,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"2580:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7374,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"2588:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7368,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:30","typeDescriptions":{}}},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7361,"id":7377,"nodeType":"Return","src":"2560:33:30"}]}]},"documentation":{"id":7355,"nodeType":"StructuredDocumentation","src":"1705:78:30","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7380,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:30","nodeType":"FunctionDefinition","parameters":{"id":7358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7357,"mutability":"mutable","name":"n","nameLocation":"1808:1:30","nodeType":"VariableDeclaration","scope":7380,"src":"1801:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7356,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:30"},"returnParameters":{"id":7361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7380,"src":"1834:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:30"},"scope":7381,"src":"1788:822:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7382,"src":"258:2354:30","usedErrors":[],"usedEvents":[]}],"src":"109:2504:30"},"id":30},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","exportedSymbols":{"Checkpoints":[8962],"Math":[5472]},"id":8963,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7383,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"201:24:31"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":7385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8963,"sourceUnit":5473,"src":"227:38:31","symbolAliases":[{"foreign":{"id":7384,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"235:4:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":7386,"nodeType":"StructuredDocumentation","src":"267:400:31","text":" @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function."},"fullyImplemented":true,"id":8962,"linearizedBaseContracts":[8962],"name":"Checkpoints","nameLocation":"676:11:31","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7387,"nodeType":"StructuredDocumentation","src":"694:82:31","text":" @dev A value was attempted to be inserted on a past checkpoint."},"errorSelector":"2520601d","id":7389,"name":"CheckpointUnorderedInsertion","nameLocation":"787:28:31","nodeType":"ErrorDefinition","parameters":{"id":7388,"nodeType":"ParameterList","parameters":[],"src":"815:2:31"},"src":"781:37:31"},{"canonicalName":"Checkpoints.Trace224","id":7394,"members":[{"constant":false,"id":7393,"mutability":"mutable","name":"_checkpoints","nameLocation":"866:12:31","nodeType":"VariableDeclaration","scope":7394,"src":"850:28:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7391,"nodeType":"UserDefinedTypeName","pathNode":{"id":7390,"name":"Checkpoint224","nameLocations":["850:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7399,"src":"850:13:31"},"referencedDeclaration":7399,"src":"850:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7392,"nodeType":"ArrayTypeName","src":"850:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"831:8:31","nodeType":"StructDefinition","scope":8962,"src":"824:61:31","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":7399,"members":[{"constant":false,"id":7396,"mutability":"mutable","name":"_key","nameLocation":"929:4:31","nodeType":"VariableDeclaration","scope":7399,"src":"922:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7395,"name":"uint32","nodeType":"ElementaryTypeName","src":"922:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7398,"mutability":"mutable","name":"_value","nameLocation":"951:6:31","nodeType":"VariableDeclaration","scope":7399,"src":"943:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7397,"name":"uint224","nodeType":"ElementaryTypeName","src":"943:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"898:13:31","nodeType":"StructDefinition","scope":8962,"src":"891:73:31","visibility":"public"},{"body":{"id":7421,"nodeType":"Block","src":"1425:62:31","statements":[{"expression":{"arguments":[{"expression":{"id":7415,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7403,"src":"1450:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1455:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"1450:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7417,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"1469:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"1474:5:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7414,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[7794,8318,8842],"referencedDeclaration":7794,"src":"1442:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1442:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":7413,"id":7420,"nodeType":"Return","src":"1435:45:31"}]},"documentation":{"id":7400,"nodeType":"StructuredDocumentation","src":"970:302:31","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n library."},"id":7422,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1286:4:31","nodeType":"FunctionDefinition","parameters":{"id":7408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7403,"mutability":"mutable","name":"self","nameLocation":"1317:4:31","nodeType":"VariableDeclaration","scope":7422,"src":"1300:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7402,"nodeType":"UserDefinedTypeName","pathNode":{"id":7401,"name":"Trace224","nameLocations":["1300:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7394,"src":"1300:8:31"},"referencedDeclaration":7394,"src":"1300:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7405,"mutability":"mutable","name":"key","nameLocation":"1338:3:31","nodeType":"VariableDeclaration","scope":7422,"src":"1331:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7404,"name":"uint32","nodeType":"ElementaryTypeName","src":"1331:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7407,"mutability":"mutable","name":"value","nameLocation":"1359:5:31","nodeType":"VariableDeclaration","scope":7422,"src":"1351:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7406,"name":"uint224","nodeType":"ElementaryTypeName","src":"1351:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1290:80:31"},"returnParameters":{"id":7413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7410,"mutability":"mutable","name":"oldValue","nameLocation":"1397:8:31","nodeType":"VariableDeclaration","scope":7422,"src":"1389:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7409,"name":"uint224","nodeType":"ElementaryTypeName","src":"1389:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":7412,"mutability":"mutable","name":"newValue","nameLocation":"1415:8:31","nodeType":"VariableDeclaration","scope":7422,"src":"1407:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7411,"name":"uint224","nodeType":"ElementaryTypeName","src":"1407:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1388:36:31"},"scope":8962,"src":"1277:210:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7461,"nodeType":"Block","src":"1740:207:31","statements":[{"assignments":[7434],"declarations":[{"constant":false,"id":7434,"mutability":"mutable","name":"len","nameLocation":"1758:3:31","nodeType":"VariableDeclaration","scope":7461,"src":"1750:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7438,"initialValue":{"expression":{"expression":{"id":7435,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"1764:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1769:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"1764:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1782:6:31","memberName":"length","nodeType":"MemberAccess","src":"1764:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:38:31"},{"assignments":[7440],"declarations":[{"constant":false,"id":7440,"mutability":"mutable","name":"pos","nameLocation":"1806:3:31","nodeType":"VariableDeclaration","scope":7461,"src":"1798:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1798:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7448,"initialValue":{"arguments":[{"expression":{"id":7442,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"1831:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1836:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"1831:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7444,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7428,"src":"1850:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":7445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1855:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7446,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"1858:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7441,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7898,8422,8946],"referencedDeclaration":7898,"src":"1812:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1798:64:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7449,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"1879:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7450,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"1886:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7454,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"1910:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1915:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"1910:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7456,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"1929:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7453,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":7913,"src":"1896:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7399_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1896:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1934:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7398,"src":"1896:44:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1879:61:31","trueExpression":{"hexValue":"30","id":7452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1892:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7432,"id":7460,"nodeType":"Return","src":"1872:68:31"}]},"documentation":{"id":7423,"nodeType":"StructuredDocumentation","src":"1493:154:31","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":7462,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"1661:11:31","nodeType":"FunctionDefinition","parameters":{"id":7429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7426,"mutability":"mutable","name":"self","nameLocation":"1690:4:31","nodeType":"VariableDeclaration","scope":7462,"src":"1673:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7425,"nodeType":"UserDefinedTypeName","pathNode":{"id":7424,"name":"Trace224","nameLocations":["1673:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7394,"src":"1673:8:31"},"referencedDeclaration":7394,"src":"1673:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7428,"mutability":"mutable","name":"key","nameLocation":"1703:3:31","nodeType":"VariableDeclaration","scope":7462,"src":"1696:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7427,"name":"uint32","nodeType":"ElementaryTypeName","src":"1696:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1672:35:31"},"returnParameters":{"id":7432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7462,"src":"1731:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7430,"name":"uint224","nodeType":"ElementaryTypeName","src":"1731:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1730:9:31"},"scope":8962,"src":"1652:295:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7503,"nodeType":"Block","src":"2202:209:31","statements":[{"assignments":[7474],"declarations":[{"constant":false,"id":7474,"mutability":"mutable","name":"len","nameLocation":"2220:3:31","nodeType":"VariableDeclaration","scope":7503,"src":"2212:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7473,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7478,"initialValue":{"expression":{"expression":{"id":7475,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"2226:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2231:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"2226:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2244:6:31","memberName":"length","nodeType":"MemberAccess","src":"2226:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2212:38:31"},{"assignments":[7480],"declarations":[{"constant":false,"id":7480,"mutability":"mutable","name":"pos","nameLocation":"2268:3:31","nodeType":"VariableDeclaration","scope":7503,"src":"2260:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7479,"name":"uint256","nodeType":"ElementaryTypeName","src":"2260:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7488,"initialValue":{"arguments":[{"expression":{"id":7482,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"2293:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2298:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"2293:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7484,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"2312:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":7485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7486,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"2320:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7481,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7846,8370,8894],"referencedDeclaration":7846,"src":"2274:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2260:64:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7489,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"2341:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2341:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7494,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"2370:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2375:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"2370:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7496,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"2389:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2395:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2389:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7493,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":7913,"src":"2356:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7399_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2398:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7398,"src":"2356:48:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2341:63:31","trueExpression":{"hexValue":"30","id":7492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2352:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7472,"id":7502,"nodeType":"Return","src":"2334:70:31"}]},"documentation":{"id":7463,"nodeType":"StructuredDocumentation","src":"1953:156:31","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":7504,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"2123:11:31","nodeType":"FunctionDefinition","parameters":{"id":7469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7466,"mutability":"mutable","name":"self","nameLocation":"2152:4:31","nodeType":"VariableDeclaration","scope":7504,"src":"2135:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7465,"nodeType":"UserDefinedTypeName","pathNode":{"id":7464,"name":"Trace224","nameLocations":["2135:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7394,"src":"2135:8:31"},"referencedDeclaration":7394,"src":"2135:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7468,"mutability":"mutable","name":"key","nameLocation":"2165:3:31","nodeType":"VariableDeclaration","scope":7504,"src":"2158:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7467,"name":"uint32","nodeType":"ElementaryTypeName","src":"2158:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2134:35:31"},"returnParameters":{"id":7472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7504,"src":"2193:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7470,"name":"uint224","nodeType":"ElementaryTypeName","src":"2193:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2192:9:31"},"scope":8962,"src":"2114:297:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7588,"nodeType":"Block","src":"2810:512:31","statements":[{"assignments":[7516],"declarations":[{"constant":false,"id":7516,"mutability":"mutable","name":"len","nameLocation":"2828:3:31","nodeType":"VariableDeclaration","scope":7588,"src":"2820:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2820:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7520,"initialValue":{"expression":{"expression":{"id":7517,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"2834:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2839:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"2834:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:6:31","memberName":"length","nodeType":"MemberAccess","src":"2834:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2820:38:31"},{"assignments":[7522],"declarations":[{"constant":false,"id":7522,"mutability":"mutable","name":"low","nameLocation":"2877:3:31","nodeType":"VariableDeclaration","scope":7588,"src":"2869:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7524,"initialValue":{"hexValue":"30","id":7523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2869:15:31"},{"assignments":[7526],"declarations":[{"constant":false,"id":7526,"mutability":"mutable","name":"high","nameLocation":"2902:4:31","nodeType":"VariableDeclaration","scope":7588,"src":"2894:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7525,"name":"uint256","nodeType":"ElementaryTypeName","src":"2894:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7528,"initialValue":{"id":7527,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"2909:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2894:18:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7529,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"2927:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":7530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2933:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2927:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7563,"nodeType":"IfStatement","src":"2923:234:31","trueBody":{"id":7562,"nodeType":"Block","src":"2936:221:31","statements":[{"assignments":[7533],"declarations":[{"constant":false,"id":7533,"mutability":"mutable","name":"mid","nameLocation":"2958:3:31","nodeType":"VariableDeclaration","scope":7562,"src":"2950:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2950:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7540,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7534,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"2964:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7537,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"2980:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7535,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"2970:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2975:4:31","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4851,"src":"2970:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2964:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2950:34:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7541,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7510,"src":"3002:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":7543,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"3022:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3027:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"3022:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7545,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"3041:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7542,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":7913,"src":"3008:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7399_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3008:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3046:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7396,"src":"3008:42:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3002:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7560,"nodeType":"Block","src":"3101:46:31","statements":[{"expression":{"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7554,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7522,"src":"3119:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7555,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"3125:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3131:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3125:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3119:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7559,"nodeType":"ExpressionStatement","src":"3119:13:31"}]},"id":7561,"nodeType":"IfStatement","src":"2998:149:31","trueBody":{"id":7553,"nodeType":"Block","src":"3052:43:31","statements":[{"expression":{"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7549,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"3070:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7550,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"3077:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3070:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7552,"nodeType":"ExpressionStatement","src":"3070:10:31"}]}}]}},{"assignments":[7565],"declarations":[{"constant":false,"id":7565,"mutability":"mutable","name":"pos","nameLocation":"3175:3:31","nodeType":"VariableDeclaration","scope":7588,"src":"3167:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7564,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7573,"initialValue":{"arguments":[{"expression":{"id":7567,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"3200:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3205:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"3200:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7569,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7510,"src":"3219:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7570,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7522,"src":"3224:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7571,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"3229:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7566,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7846,8370,8894],"referencedDeclaration":7846,"src":"3181:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:53:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3167:67:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7574,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"3252:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3259:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3252:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7579,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"3281:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3286:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"3281:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7581,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"3300:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3306:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3300:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7578,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":7913,"src":"3267:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7399_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3267:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3309:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7398,"src":"3267:48:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3252:63:31","trueExpression":{"hexValue":"30","id":7577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3263:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7514,"id":7587,"nodeType":"Return","src":"3245:70:31"}]},"documentation":{"id":7505,"nodeType":"StructuredDocumentation","src":"2417:294:31","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":7589,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"2725:17:31","nodeType":"FunctionDefinition","parameters":{"id":7511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7508,"mutability":"mutable","name":"self","nameLocation":"2760:4:31","nodeType":"VariableDeclaration","scope":7589,"src":"2743:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7507,"nodeType":"UserDefinedTypeName","pathNode":{"id":7506,"name":"Trace224","nameLocations":["2743:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7394,"src":"2743:8:31"},"referencedDeclaration":7394,"src":"2743:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7510,"mutability":"mutable","name":"key","nameLocation":"2773:3:31","nodeType":"VariableDeclaration","scope":7589,"src":"2766:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7509,"name":"uint32","nodeType":"ElementaryTypeName","src":"2766:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2742:35:31"},"returnParameters":{"id":7514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7589,"src":"2801:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7512,"name":"uint224","nodeType":"ElementaryTypeName","src":"2801:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2800:9:31"},"scope":8962,"src":"2716:606:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7618,"nodeType":"Block","src":"3513:135:31","statements":[{"assignments":[7599],"declarations":[{"constant":false,"id":7599,"mutability":"mutable","name":"pos","nameLocation":"3531:3:31","nodeType":"VariableDeclaration","scope":7618,"src":"3523:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7598,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7603,"initialValue":{"expression":{"expression":{"id":7600,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"3537:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3542:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"3537:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3555:6:31","memberName":"length","nodeType":"MemberAccess","src":"3537:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3523:38:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7604,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"3578:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3585:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3578:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7609,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"3607:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3612:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"3607:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7611,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"3626:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3632:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3626:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7608,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":7913,"src":"3593:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7399_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3593:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3635:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7398,"src":"3593:48:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3578:63:31","trueExpression":{"hexValue":"30","id":7607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3589:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7597,"id":7617,"nodeType":"Return","src":"3571:70:31"}]},"documentation":{"id":7590,"nodeType":"StructuredDocumentation","src":"3328:109:31","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":7619,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3451:6:31","nodeType":"FunctionDefinition","parameters":{"id":7594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7593,"mutability":"mutable","name":"self","nameLocation":"3475:4:31","nodeType":"VariableDeclaration","scope":7619,"src":"3458:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7592,"nodeType":"UserDefinedTypeName","pathNode":{"id":7591,"name":"Trace224","nameLocations":["3458:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7394,"src":"3458:8:31"},"referencedDeclaration":7394,"src":"3458:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3457:23:31"},"returnParameters":{"id":7597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7619,"src":"3504:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7595,"name":"uint224","nodeType":"ElementaryTypeName","src":"3504:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3503:9:31"},"scope":8962,"src":"3442:206:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7667,"nodeType":"Block","src":"3941:275:31","statements":[{"assignments":[7633],"declarations":[{"constant":false,"id":7633,"mutability":"mutable","name":"pos","nameLocation":"3959:3:31","nodeType":"VariableDeclaration","scope":7667,"src":"3951:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7632,"name":"uint256","nodeType":"ElementaryTypeName","src":"3951:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7637,"initialValue":{"expression":{"expression":{"id":7634,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"3965:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3970:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"3965:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3983:6:31","memberName":"length","nodeType":"MemberAccess","src":"3965:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3951:38:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7638,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"4003:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4010:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4003:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7665,"nodeType":"Block","src":"4064:146:31","statements":[{"assignments":[7649],"declarations":[{"constant":false,"id":7649,"mutability":"mutable","name":"ckpt","nameLocation":"4100:4:31","nodeType":"VariableDeclaration","scope":7665,"src":"4078:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7648,"nodeType":"UserDefinedTypeName","pathNode":{"id":7647,"name":"Checkpoint224","nameLocations":["4078:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7399,"src":"4078:13:31"},"referencedDeclaration":7399,"src":"4078:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":7657,"initialValue":{"arguments":[{"expression":{"id":7651,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"4121:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4126:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"4121:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7653,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"4140:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4146:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4140:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7650,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":7913,"src":"4107:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7399_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4078:70:31"},{"expression":{"components":[{"hexValue":"74727565","id":7658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4170:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":7659,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"4176:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4181:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7396,"src":"4176:9:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":7661,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"4187:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4192:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7398,"src":"4187:11:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":7663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4169:30:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":7631,"id":7664,"nodeType":"Return","src":"4162:37:31"}]},"id":7666,"nodeType":"IfStatement","src":"3999:211:31","trueBody":{"id":7646,"nodeType":"Block","src":"4013:45:31","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4035:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4042:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4045:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4034:13:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":7631,"id":7645,"nodeType":"Return","src":"4027:20:31"}]}}]},"documentation":{"id":7620,"nodeType":"StructuredDocumentation","src":"3654:168:31","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":7668,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"3836:16:31","nodeType":"FunctionDefinition","parameters":{"id":7624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7623,"mutability":"mutable","name":"self","nameLocation":"3870:4:31","nodeType":"VariableDeclaration","scope":7668,"src":"3853:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7622,"nodeType":"UserDefinedTypeName","pathNode":{"id":7621,"name":"Trace224","nameLocations":["3853:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7394,"src":"3853:8:31"},"referencedDeclaration":7394,"src":"3853:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3852:23:31"},"returnParameters":{"id":7631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7626,"mutability":"mutable","name":"exists","nameLocation":"3904:6:31","nodeType":"VariableDeclaration","scope":7668,"src":"3899:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7625,"name":"bool","nodeType":"ElementaryTypeName","src":"3899:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7628,"mutability":"mutable","name":"_key","nameLocation":"3919:4:31","nodeType":"VariableDeclaration","scope":7668,"src":"3912:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7627,"name":"uint32","nodeType":"ElementaryTypeName","src":"3912:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7630,"mutability":"mutable","name":"_value","nameLocation":"3933:6:31","nodeType":"VariableDeclaration","scope":7668,"src":"3925:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7629,"name":"uint224","nodeType":"ElementaryTypeName","src":"3925:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3898:42:31"},"scope":8962,"src":"3827:389:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7681,"nodeType":"Block","src":"4355:48:31","statements":[{"expression":{"expression":{"expression":{"id":7677,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"4372:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4377:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"4372:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4390:6:31","memberName":"length","nodeType":"MemberAccess","src":"4372:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7676,"id":7680,"nodeType":"Return","src":"4365:31:31"}]},"documentation":{"id":7669,"nodeType":"StructuredDocumentation","src":"4222:57:31","text":" @dev Returns the number of checkpoint."},"id":7682,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4293:6:31","nodeType":"FunctionDefinition","parameters":{"id":7673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7672,"mutability":"mutable","name":"self","nameLocation":"4317:4:31","nodeType":"VariableDeclaration","scope":7682,"src":"4300:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7671,"nodeType":"UserDefinedTypeName","pathNode":{"id":7670,"name":"Trace224","nameLocations":["4300:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7394,"src":"4300:8:31"},"referencedDeclaration":7394,"src":"4300:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"4299:23:31"},"returnParameters":{"id":7676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7682,"src":"4346:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7674,"name":"uint256","nodeType":"ElementaryTypeName","src":"4346:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4345:9:31"},"scope":8962,"src":"4284:119:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7699,"nodeType":"Block","src":"4567:46:31","statements":[{"expression":{"baseExpression":{"expression":{"id":7694,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7686,"src":"4584:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4589:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7393,"src":"4584:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7697,"indexExpression":{"id":7696,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7688,"src":"4602:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4584:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref"}},"functionReturnParameters":7693,"id":7698,"nodeType":"Return","src":"4577:29:31"}]},"documentation":{"id":7683,"nodeType":"StructuredDocumentation","src":"4409:61:31","text":" @dev Returns checkpoint at given position."},"id":7700,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4484:2:31","nodeType":"FunctionDefinition","parameters":{"id":7689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7686,"mutability":"mutable","name":"self","nameLocation":"4504:4:31","nodeType":"VariableDeclaration","scope":7700,"src":"4487:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7685,"nodeType":"UserDefinedTypeName","pathNode":{"id":7684,"name":"Trace224","nameLocations":["4487:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7394,"src":"4487:8:31"},"referencedDeclaration":7394,"src":"4487:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7394_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7688,"mutability":"mutable","name":"pos","nameLocation":"4517:3:31","nodeType":"VariableDeclaration","scope":7700,"src":"4510:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7687,"name":"uint32","nodeType":"ElementaryTypeName","src":"4510:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4486:35:31"},"returnParameters":{"id":7693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7700,"src":"4545:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7691,"nodeType":"UserDefinedTypeName","pathNode":{"id":7690,"name":"Checkpoint224","nameLocations":["4545:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7399,"src":"4545:13:31"},"referencedDeclaration":7399,"src":"4545:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"4544:22:31"},"scope":8962,"src":"4475:138:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7793,"nodeType":"Block","src":"4946:765:31","statements":[{"assignments":[7717],"declarations":[{"constant":false,"id":7717,"mutability":"mutable","name":"pos","nameLocation":"4964:3:31","nodeType":"VariableDeclaration","scope":7793,"src":"4956:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7716,"name":"uint256","nodeType":"ElementaryTypeName","src":"4956:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7720,"initialValue":{"expression":{"id":7718,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7705,"src":"4970:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4975:6:31","memberName":"length","nodeType":"MemberAccess","src":"4970:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4956:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7721,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"4996:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5002:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4996:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7791,"nodeType":"Block","src":"5597:108:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":7782,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"5642:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"5655:5:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7781,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7399,"src":"5621:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$7399_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5636:4:31","5647:6:31"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5621:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$7399_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":7778,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7705,"src":"5611:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5616:4:31","memberName":"push","nodeType":"MemberAccess","src":"5611:9:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$7399_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5611:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7786,"nodeType":"ExpressionStatement","src":"5611:52:31"},{"expression":{"components":[{"hexValue":"30","id":7787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5685:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"5688:5:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":7789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5684:10:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":7715,"id":7790,"nodeType":"Return","src":"5677:17:31"}]},"id":7792,"nodeType":"IfStatement","src":"4992:713:31","trueBody":{"id":7777,"nodeType":"Block","src":"5005:586:31","statements":[{"assignments":[7726],"declarations":[{"constant":false,"id":7726,"mutability":"mutable","name":"last","nameLocation":"5041:4:31","nodeType":"VariableDeclaration","scope":7777,"src":"5019:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7725,"nodeType":"UserDefinedTypeName","pathNode":{"id":7724,"name":"Checkpoint224","nameLocations":["5019:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7399,"src":"5019:13:31"},"referencedDeclaration":7399,"src":"5019:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":7733,"initialValue":{"arguments":[{"id":7728,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7705,"src":"5062:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7729,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"5068:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5074:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5068:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7727,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":7913,"src":"5048:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7399_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5048:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5019:57:31"},{"assignments":[7735],"declarations":[{"constant":false,"id":7735,"mutability":"mutable","name":"lastKey","nameLocation":"5097:7:31","nodeType":"VariableDeclaration","scope":7777,"src":"5090:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7734,"name":"uint32","nodeType":"ElementaryTypeName","src":"5090:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":7738,"initialValue":{"expression":{"id":7736,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"5107:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5112:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7396,"src":"5107:9:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"5090:26:31"},{"assignments":[7740],"declarations":[{"constant":false,"id":7740,"mutability":"mutable","name":"lastValue","nameLocation":"5138:9:31","nodeType":"VariableDeclaration","scope":7777,"src":"5130:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7739,"name":"uint224","nodeType":"ElementaryTypeName","src":"5130:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"id":7743,"initialValue":{"expression":{"id":7741,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"5150:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5155:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7398,"src":"5150:11:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"VariableDeclarationStatement","src":"5130:31:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7744,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"5235:7:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7745,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"5245:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5235:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7751,"nodeType":"IfStatement","src":"5231:89:31","trueBody":{"id":7750,"nodeType":"Block","src":"5250:70:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7747,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"5275:28:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7749,"nodeType":"RevertStatement","src":"5268:37:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7752,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"5383:7:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7753,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"5394:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5383:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7771,"nodeType":"Block","src":"5457:85:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":7766,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"5506:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"5519:5:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7765,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7399,"src":"5485:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$7399_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5500:4:31","5511:6:31"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5485:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$7399_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":7762,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7705,"src":"5475:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5480:4:31","memberName":"push","nodeType":"MemberAccess","src":"5475:9:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$7399_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":7769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5475:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7770,"nodeType":"ExpressionStatement","src":"5475:52:31"}]},"id":7772,"nodeType":"IfStatement","src":"5379:163:31","trueBody":{"id":7761,"nodeType":"Block","src":"5399:52:31","statements":[{"expression":{"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7755,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"5417:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5422:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7398,"src":"5417:11:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"5431:5:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5417:19:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7760,"nodeType":"ExpressionStatement","src":"5417:19:31"}]}},{"expression":{"components":[{"id":7773,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"5563:9:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":7774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"5574:5:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":7775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5562:18:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":7715,"id":7776,"nodeType":"Return","src":"5555:25:31"}]}}]},"documentation":{"id":7701,"nodeType":"StructuredDocumentation","src":"4619:165:31","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":7794,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4798:7:31","nodeType":"FunctionDefinition","parameters":{"id":7710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7705,"mutability":"mutable","name":"self","nameLocation":"4839:4:31","nodeType":"VariableDeclaration","scope":7794,"src":"4815:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7703,"nodeType":"UserDefinedTypeName","pathNode":{"id":7702,"name":"Checkpoint224","nameLocations":["4815:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7399,"src":"4815:13:31"},"referencedDeclaration":7399,"src":"4815:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7704,"nodeType":"ArrayTypeName","src":"4815:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7707,"mutability":"mutable","name":"key","nameLocation":"4860:3:31","nodeType":"VariableDeclaration","scope":7794,"src":"4853:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7706,"name":"uint32","nodeType":"ElementaryTypeName","src":"4853:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7709,"mutability":"mutable","name":"value","nameLocation":"4881:5:31","nodeType":"VariableDeclaration","scope":7794,"src":"4873:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7708,"name":"uint224","nodeType":"ElementaryTypeName","src":"4873:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4805:87:31"},"returnParameters":{"id":7715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7712,"mutability":"mutable","name":"oldValue","nameLocation":"4918:8:31","nodeType":"VariableDeclaration","scope":7794,"src":"4910:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7711,"name":"uint224","nodeType":"ElementaryTypeName","src":"4910:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":7714,"mutability":"mutable","name":"newValue","nameLocation":"4936:8:31","nodeType":"VariableDeclaration","scope":7794,"src":"4928:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7713,"name":"uint224","nodeType":"ElementaryTypeName","src":"4928:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4909:36:31"},"scope":8962,"src":"4789:922:31","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7845,"nodeType":"Block","src":"6227:267:31","statements":[{"body":{"id":7841,"nodeType":"Block","src":"6256:211:31","statements":[{"assignments":[7814],"declarations":[{"constant":false,"id":7814,"mutability":"mutable","name":"mid","nameLocation":"6278:3:31","nodeType":"VariableDeclaration","scope":7841,"src":"6270:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7813,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7820,"initialValue":{"arguments":[{"id":7817,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"6297:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7818,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"6302:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7815,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"6284:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6289:7:31","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4124,"src":"6284:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6284:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6270:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7822,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"6339:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":7823,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7814,"src":"6345:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7821,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":7913,"src":"6325:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7399_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6325:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6350:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7396,"src":"6325:29:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7826,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"6357:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6325:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7839,"nodeType":"Block","src":"6411:46:31","statements":[{"expression":{"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7833,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"6429:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7834,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7814,"src":"6435:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6441:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6435:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6429:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7838,"nodeType":"ExpressionStatement","src":"6429:13:31"}]},"id":7840,"nodeType":"IfStatement","src":"6321:136:31","trueBody":{"id":7832,"nodeType":"Block","src":"6362:43:31","statements":[{"expression":{"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7828,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"6380:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7829,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7814,"src":"6387:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6380:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7831,"nodeType":"ExpressionStatement","src":"6380:10:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7810,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"6244:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7811,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"6250:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7842,"nodeType":"WhileStatement","src":"6237:230:31"},{"expression":{"id":7843,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"6483:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7809,"id":7844,"nodeType":"Return","src":"6476:11:31"}]},"documentation":{"id":7795,"nodeType":"StructuredDocumentation","src":"5717:339:31","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7846,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"6070:18:31","nodeType":"FunctionDefinition","parameters":{"id":7806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7799,"mutability":"mutable","name":"self","nameLocation":"6122:4:31","nodeType":"VariableDeclaration","scope":7846,"src":"6098:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7797,"nodeType":"UserDefinedTypeName","pathNode":{"id":7796,"name":"Checkpoint224","nameLocations":["6098:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7399,"src":"6098:13:31"},"referencedDeclaration":7399,"src":"6098:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7798,"nodeType":"ArrayTypeName","src":"6098:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7801,"mutability":"mutable","name":"key","nameLocation":"6143:3:31","nodeType":"VariableDeclaration","scope":7846,"src":"6136:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7800,"name":"uint32","nodeType":"ElementaryTypeName","src":"6136:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7803,"mutability":"mutable","name":"low","nameLocation":"6164:3:31","nodeType":"VariableDeclaration","scope":7846,"src":"6156:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7802,"name":"uint256","nodeType":"ElementaryTypeName","src":"6156:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7805,"mutability":"mutable","name":"high","nameLocation":"6185:4:31","nodeType":"VariableDeclaration","scope":7846,"src":"6177:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7804,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6088:107:31"},"returnParameters":{"id":7809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7846,"src":"6218:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7807,"name":"uint256","nodeType":"ElementaryTypeName","src":"6218:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6217:9:31"},"scope":8962,"src":"6061:433:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7897,"nodeType":"Block","src":"7011:267:31","statements":[{"body":{"id":7893,"nodeType":"Block","src":"7040:211:31","statements":[{"assignments":[7866],"declarations":[{"constant":false,"id":7866,"mutability":"mutable","name":"mid","nameLocation":"7062:3:31","nodeType":"VariableDeclaration","scope":7893,"src":"7054:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7865,"name":"uint256","nodeType":"ElementaryTypeName","src":"7054:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7872,"initialValue":{"arguments":[{"id":7869,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"7081:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7870,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"7086:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7867,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"7068:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":7868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7073:7:31","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4124,"src":"7068:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7068:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7054:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7874,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7851,"src":"7123:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":7875,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"7129:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7873,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":7913,"src":"7109:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7399_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7109:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7134:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7396,"src":"7109:29:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7878,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"7141:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7109:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7891,"nodeType":"Block","src":"7198:43:31","statements":[{"expression":{"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7887,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"7216:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7888,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"7223:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7216:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7890,"nodeType":"ExpressionStatement","src":"7216:10:31"}]},"id":7892,"nodeType":"IfStatement","src":"7105:136:31","trueBody":{"id":7886,"nodeType":"Block","src":"7146:46:31","statements":[{"expression":{"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7880,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"7164:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7881,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"7170:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7176:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7170:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7164:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7885,"nodeType":"ExpressionStatement","src":"7164:13:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7862,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"7028:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7863,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"7034:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7028:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7894,"nodeType":"WhileStatement","src":"7021:230:31"},{"expression":{"id":7895,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"7267:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7861,"id":7896,"nodeType":"Return","src":"7260:11:31"}]},"documentation":{"id":7847,"nodeType":"StructuredDocumentation","src":"6500:340:31","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7898,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6854:18:31","nodeType":"FunctionDefinition","parameters":{"id":7858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7851,"mutability":"mutable","name":"self","nameLocation":"6906:4:31","nodeType":"VariableDeclaration","scope":7898,"src":"6882:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7849,"nodeType":"UserDefinedTypeName","pathNode":{"id":7848,"name":"Checkpoint224","nameLocations":["6882:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7399,"src":"6882:13:31"},"referencedDeclaration":7399,"src":"6882:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7850,"nodeType":"ArrayTypeName","src":"6882:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7853,"mutability":"mutable","name":"key","nameLocation":"6927:3:31","nodeType":"VariableDeclaration","scope":7898,"src":"6920:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7852,"name":"uint32","nodeType":"ElementaryTypeName","src":"6920:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7855,"mutability":"mutable","name":"low","nameLocation":"6948:3:31","nodeType":"VariableDeclaration","scope":7898,"src":"6940:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7854,"name":"uint256","nodeType":"ElementaryTypeName","src":"6940:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7857,"mutability":"mutable","name":"high","nameLocation":"6969:4:31","nodeType":"VariableDeclaration","scope":7898,"src":"6961:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7856,"name":"uint256","nodeType":"ElementaryTypeName","src":"6961:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6872:107:31"},"returnParameters":{"id":7861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7898,"src":"7002:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7859,"name":"uint256","nodeType":"ElementaryTypeName","src":"7002:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7001:9:31"},"scope":8962,"src":"6845:433:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7912,"nodeType":"Block","src":"7561:125:31","statements":[{"AST":{"nativeSrc":"7580:100:31","nodeType":"YulBlock","src":"7580:100:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7601:1:31","nodeType":"YulLiteral","src":"7601:1:31","type":"","value":"0"},{"name":"self.slot","nativeSrc":"7604:9:31","nodeType":"YulIdentifier","src":"7604:9:31"}],"functionName":{"name":"mstore","nativeSrc":"7594:6:31","nodeType":"YulIdentifier","src":"7594:6:31"},"nativeSrc":"7594:20:31","nodeType":"YulFunctionCall","src":"7594:20:31"},"nativeSrc":"7594:20:31","nodeType":"YulExpressionStatement","src":"7594:20:31"},{"nativeSrc":"7627:43:31","nodeType":"YulAssignment","src":"7627:43:31","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7656:1:31","nodeType":"YulLiteral","src":"7656:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"7659:4:31","nodeType":"YulLiteral","src":"7659:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7646:9:31","nodeType":"YulIdentifier","src":"7646:9:31"},"nativeSrc":"7646:18:31","nodeType":"YulFunctionCall","src":"7646:18:31"},{"name":"pos","nativeSrc":"7666:3:31","nodeType":"YulIdentifier","src":"7666:3:31"}],"functionName":{"name":"add","nativeSrc":"7642:3:31","nodeType":"YulIdentifier","src":"7642:3:31"},"nativeSrc":"7642:28:31","nodeType":"YulFunctionCall","src":"7642:28:31"},"variableNames":[{"name":"result.slot","nativeSrc":"7627:11:31","nodeType":"YulIdentifier","src":"7627:11:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7905,"isOffset":false,"isSlot":false,"src":"7666:3:31","valueSize":1},{"declaration":7909,"isOffset":false,"isSlot":true,"src":"7627:11:31","suffix":"slot","valueSize":1},{"declaration":7903,"isOffset":false,"isSlot":true,"src":"7604:9:31","suffix":"slot","valueSize":1}],"id":7911,"nodeType":"InlineAssembly","src":"7571:109:31"}]},"documentation":{"id":7899,"nodeType":"StructuredDocumentation","src":"7284:132:31","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":7913,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7430:13:31","nodeType":"FunctionDefinition","parameters":{"id":7906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7903,"mutability":"mutable","name":"self","nameLocation":"7477:4:31","nodeType":"VariableDeclaration","scope":7913,"src":"7453:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7901,"nodeType":"UserDefinedTypeName","pathNode":{"id":7900,"name":"Checkpoint224","nameLocations":["7453:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7399,"src":"7453:13:31"},"referencedDeclaration":7399,"src":"7453:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7902,"nodeType":"ArrayTypeName","src":"7453:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7399_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7905,"mutability":"mutable","name":"pos","nameLocation":"7499:3:31","nodeType":"VariableDeclaration","scope":7913,"src":"7491:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7904,"name":"uint256","nodeType":"ElementaryTypeName","src":"7491:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7443:65:31"},"returnParameters":{"id":7910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7909,"mutability":"mutable","name":"result","nameLocation":"7553:6:31","nodeType":"VariableDeclaration","scope":7913,"src":"7531:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7908,"nodeType":"UserDefinedTypeName","pathNode":{"id":7907,"name":"Checkpoint224","nameLocations":["7531:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7399,"src":"7531:13:31"},"referencedDeclaration":7399,"src":"7531:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7399_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"7530:30:31"},"scope":8962,"src":"7421:265:31","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace208","id":7918,"members":[{"constant":false,"id":7917,"mutability":"mutable","name":"_checkpoints","nameLocation":"7734:12:31","nodeType":"VariableDeclaration","scope":7918,"src":"7718:28:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7915,"nodeType":"UserDefinedTypeName","pathNode":{"id":7914,"name":"Checkpoint208","nameLocations":["7718:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"7718:13:31"},"referencedDeclaration":7923,"src":"7718:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7916,"nodeType":"ArrayTypeName","src":"7718:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"}],"name":"Trace208","nameLocation":"7699:8:31","nodeType":"StructDefinition","scope":8962,"src":"7692:61:31","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint208","id":7923,"members":[{"constant":false,"id":7920,"mutability":"mutable","name":"_key","nameLocation":"7797:4:31","nodeType":"VariableDeclaration","scope":7923,"src":"7790:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7919,"name":"uint48","nodeType":"ElementaryTypeName","src":"7790:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7922,"mutability":"mutable","name":"_value","nameLocation":"7819:6:31","nodeType":"VariableDeclaration","scope":7923,"src":"7811:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7921,"name":"uint208","nodeType":"ElementaryTypeName","src":"7811:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"name":"Checkpoint208","nameLocation":"7766:13:31","nodeType":"StructDefinition","scope":8962,"src":"7759:73:31","visibility":"public"},{"body":{"id":7945,"nodeType":"Block","src":"8293:62:31","statements":[{"expression":{"arguments":[{"expression":{"id":7939,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"8318:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8323:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"8318:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7941,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"8337:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"8342:5:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":7938,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[7794,8318,8842],"referencedDeclaration":8318,"src":"8310:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":7943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8310:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":7937,"id":7944,"nodeType":"Return","src":"8303:45:31"}]},"documentation":{"id":7924,"nodeType":"StructuredDocumentation","src":"7838:302:31","text":" @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n library."},"id":7946,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8154:4:31","nodeType":"FunctionDefinition","parameters":{"id":7932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7927,"mutability":"mutable","name":"self","nameLocation":"8185:4:31","nodeType":"VariableDeclaration","scope":7946,"src":"8168:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7926,"nodeType":"UserDefinedTypeName","pathNode":{"id":7925,"name":"Trace208","nameLocations":["8168:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"8168:8:31"},"referencedDeclaration":7918,"src":"8168:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7929,"mutability":"mutable","name":"key","nameLocation":"8206:3:31","nodeType":"VariableDeclaration","scope":7946,"src":"8199:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7928,"name":"uint48","nodeType":"ElementaryTypeName","src":"8199:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7931,"mutability":"mutable","name":"value","nameLocation":"8227:5:31","nodeType":"VariableDeclaration","scope":7946,"src":"8219:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7930,"name":"uint208","nodeType":"ElementaryTypeName","src":"8219:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8158:80:31"},"returnParameters":{"id":7937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7934,"mutability":"mutable","name":"oldValue","nameLocation":"8265:8:31","nodeType":"VariableDeclaration","scope":7946,"src":"8257:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7933,"name":"uint208","nodeType":"ElementaryTypeName","src":"8257:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":7936,"mutability":"mutable","name":"newValue","nameLocation":"8283:8:31","nodeType":"VariableDeclaration","scope":7946,"src":"8275:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7935,"name":"uint208","nodeType":"ElementaryTypeName","src":"8275:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8256:36:31"},"scope":8962,"src":"8145:210:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7985,"nodeType":"Block","src":"8608:207:31","statements":[{"assignments":[7958],"declarations":[{"constant":false,"id":7958,"mutability":"mutable","name":"len","nameLocation":"8626:3:31","nodeType":"VariableDeclaration","scope":7985,"src":"8618:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7957,"name":"uint256","nodeType":"ElementaryTypeName","src":"8618:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7962,"initialValue":{"expression":{"expression":{"id":7959,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"8632:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8637:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"8632:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8650:6:31","memberName":"length","nodeType":"MemberAccess","src":"8632:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8618:38:31"},{"assignments":[7964],"declarations":[{"constant":false,"id":7964,"mutability":"mutable","name":"pos","nameLocation":"8674:3:31","nodeType":"VariableDeclaration","scope":7985,"src":"8666:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7963,"name":"uint256","nodeType":"ElementaryTypeName","src":"8666:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7972,"initialValue":{"arguments":[{"expression":{"id":7966,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"8699:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8704:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"8699:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7968,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7952,"src":"8718:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":7969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8723:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7970,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"8726:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7965,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7898,8422,8946],"referencedDeclaration":8422,"src":"8680:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8680:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8666:64:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7973,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7964,"src":"8747:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7974,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"8754:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8747:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7978,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"8778:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8783:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"8778:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7980,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7964,"src":"8797:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7977,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8437,"src":"8764:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7923_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8764:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8802:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"8764:44:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8747:61:31","trueExpression":{"hexValue":"30","id":7976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8760:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7956,"id":7984,"nodeType":"Return","src":"8740:68:31"}]},"documentation":{"id":7947,"nodeType":"StructuredDocumentation","src":"8361:154:31","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":7986,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8529:11:31","nodeType":"FunctionDefinition","parameters":{"id":7953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7950,"mutability":"mutable","name":"self","nameLocation":"8558:4:31","nodeType":"VariableDeclaration","scope":7986,"src":"8541:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7949,"nodeType":"UserDefinedTypeName","pathNode":{"id":7948,"name":"Trace208","nameLocations":["8541:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"8541:8:31"},"referencedDeclaration":7918,"src":"8541:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7952,"mutability":"mutable","name":"key","nameLocation":"8571:3:31","nodeType":"VariableDeclaration","scope":7986,"src":"8564:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7951,"name":"uint48","nodeType":"ElementaryTypeName","src":"8564:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8540:35:31"},"returnParameters":{"id":7956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7986,"src":"8599:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7954,"name":"uint208","nodeType":"ElementaryTypeName","src":"8599:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8598:9:31"},"scope":8962,"src":"8520:295:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8027,"nodeType":"Block","src":"9070:209:31","statements":[{"assignments":[7998],"declarations":[{"constant":false,"id":7998,"mutability":"mutable","name":"len","nameLocation":"9088:3:31","nodeType":"VariableDeclaration","scope":8027,"src":"9080:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7997,"name":"uint256","nodeType":"ElementaryTypeName","src":"9080:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8002,"initialValue":{"expression":{"expression":{"id":7999,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"9094:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9099:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"9094:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9112:6:31","memberName":"length","nodeType":"MemberAccess","src":"9094:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9080:38:31"},{"assignments":[8004],"declarations":[{"constant":false,"id":8004,"mutability":"mutable","name":"pos","nameLocation":"9136:3:31","nodeType":"VariableDeclaration","scope":8027,"src":"9128:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8003,"name":"uint256","nodeType":"ElementaryTypeName","src":"9128:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8012,"initialValue":{"arguments":[{"expression":{"id":8006,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"9161:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9166:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"9161:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8008,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"9180:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":8009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9185:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8010,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"9188:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8005,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7846,8370,8894],"referencedDeclaration":8370,"src":"9142:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9142:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9128:64:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8013,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"9209:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9216:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9209:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8018,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"9238:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9243:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"9238:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8020,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"9257:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9263:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9257:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8017,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8437,"src":"9224:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7923_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9224:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9266:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"9224:48:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9209:63:31","trueExpression":{"hexValue":"30","id":8016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9220:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7996,"id":8026,"nodeType":"Return","src":"9202:70:31"}]},"documentation":{"id":7987,"nodeType":"StructuredDocumentation","src":"8821:156:31","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":8028,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8991:11:31","nodeType":"FunctionDefinition","parameters":{"id":7993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7990,"mutability":"mutable","name":"self","nameLocation":"9020:4:31","nodeType":"VariableDeclaration","scope":8028,"src":"9003:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7989,"nodeType":"UserDefinedTypeName","pathNode":{"id":7988,"name":"Trace208","nameLocations":["9003:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"9003:8:31"},"referencedDeclaration":7918,"src":"9003:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7992,"mutability":"mutable","name":"key","nameLocation":"9033:3:31","nodeType":"VariableDeclaration","scope":8028,"src":"9026:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7991,"name":"uint48","nodeType":"ElementaryTypeName","src":"9026:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9002:35:31"},"returnParameters":{"id":7996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8028,"src":"9061:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7994,"name":"uint208","nodeType":"ElementaryTypeName","src":"9061:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9060:9:31"},"scope":8962,"src":"8982:297:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8112,"nodeType":"Block","src":"9678:512:31","statements":[{"assignments":[8040],"declarations":[{"constant":false,"id":8040,"mutability":"mutable","name":"len","nameLocation":"9696:3:31","nodeType":"VariableDeclaration","scope":8112,"src":"9688:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8039,"name":"uint256","nodeType":"ElementaryTypeName","src":"9688:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8044,"initialValue":{"expression":{"expression":{"id":8041,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"9702:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9707:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"9702:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9720:6:31","memberName":"length","nodeType":"MemberAccess","src":"9702:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9688:38:31"},{"assignments":[8046],"declarations":[{"constant":false,"id":8046,"mutability":"mutable","name":"low","nameLocation":"9745:3:31","nodeType":"VariableDeclaration","scope":8112,"src":"9737:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8045,"name":"uint256","nodeType":"ElementaryTypeName","src":"9737:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8048,"initialValue":{"hexValue":"30","id":8047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9751:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9737:15:31"},{"assignments":[8050],"declarations":[{"constant":false,"id":8050,"mutability":"mutable","name":"high","nameLocation":"9770:4:31","nodeType":"VariableDeclaration","scope":8112,"src":"9762:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8049,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8052,"initialValue":{"id":8051,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"9777:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:18:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8053,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"9795:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9801:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9795:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8087,"nodeType":"IfStatement","src":"9791:234:31","trueBody":{"id":8086,"nodeType":"Block","src":"9804:221:31","statements":[{"assignments":[8057],"declarations":[{"constant":false,"id":8057,"mutability":"mutable","name":"mid","nameLocation":"9826:3:31","nodeType":"VariableDeclaration","scope":8086,"src":"9818:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8056,"name":"uint256","nodeType":"ElementaryTypeName","src":"9818:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8064,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8058,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"9832:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8061,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"9848:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8059,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"9838:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":8060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9843:4:31","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4851,"src":"9838:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9838:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9832:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9818:34:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8065,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8034,"src":"9870:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8067,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"9890:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9895:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"9890:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8069,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"9909:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8066,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8437,"src":"9876:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7923_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9914:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7920,"src":"9876:42:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9870:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8084,"nodeType":"Block","src":"9969:46:31","statements":[{"expression":{"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8078,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8046,"src":"9987:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8079,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"9993:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9999:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9993:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8083,"nodeType":"ExpressionStatement","src":"9987:13:31"}]},"id":8085,"nodeType":"IfStatement","src":"9866:149:31","trueBody":{"id":8077,"nodeType":"Block","src":"9920:43:31","statements":[{"expression":{"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8073,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"9938:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8074,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"9945:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9938:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8076,"nodeType":"ExpressionStatement","src":"9938:10:31"}]}}]}},{"assignments":[8089],"declarations":[{"constant":false,"id":8089,"mutability":"mutable","name":"pos","nameLocation":"10043:3:31","nodeType":"VariableDeclaration","scope":8112,"src":"10035:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8088,"name":"uint256","nodeType":"ElementaryTypeName","src":"10035:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8097,"initialValue":{"arguments":[{"expression":{"id":8091,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"10068:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10073:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"10068:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8093,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8034,"src":"10087:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8094,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8046,"src":"10092:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8095,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"10097:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8090,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7846,8370,8894],"referencedDeclaration":8370,"src":"10049:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10049:53:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10035:67:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8098,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"10120:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10127:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10120:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8103,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"10149:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10154:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"10149:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8105,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"10168:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10174:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10168:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8102,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8437,"src":"10135:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7923_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10135:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10177:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"10135:48:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10120:63:31","trueExpression":{"hexValue":"30","id":8101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10131:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8038,"id":8111,"nodeType":"Return","src":"10113:70:31"}]},"documentation":{"id":8029,"nodeType":"StructuredDocumentation","src":"9285:294:31","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8113,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"9593:17:31","nodeType":"FunctionDefinition","parameters":{"id":8035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8032,"mutability":"mutable","name":"self","nameLocation":"9628:4:31","nodeType":"VariableDeclaration","scope":8113,"src":"9611:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8031,"nodeType":"UserDefinedTypeName","pathNode":{"id":8030,"name":"Trace208","nameLocations":["9611:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"9611:8:31"},"referencedDeclaration":7918,"src":"9611:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8034,"mutability":"mutable","name":"key","nameLocation":"9641:3:31","nodeType":"VariableDeclaration","scope":8113,"src":"9634:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8033,"name":"uint48","nodeType":"ElementaryTypeName","src":"9634:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9610:35:31"},"returnParameters":{"id":8038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8113,"src":"9669:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8036,"name":"uint208","nodeType":"ElementaryTypeName","src":"9669:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9668:9:31"},"scope":8962,"src":"9584:606:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8142,"nodeType":"Block","src":"10381:135:31","statements":[{"assignments":[8123],"declarations":[{"constant":false,"id":8123,"mutability":"mutable","name":"pos","nameLocation":"10399:3:31","nodeType":"VariableDeclaration","scope":8142,"src":"10391:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8122,"name":"uint256","nodeType":"ElementaryTypeName","src":"10391:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8127,"initialValue":{"expression":{"expression":{"id":8124,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8117,"src":"10405:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10410:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"10405:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10423:6:31","memberName":"length","nodeType":"MemberAccess","src":"10405:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10391:38:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8128,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"10446:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10453:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10446:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8133,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8117,"src":"10475:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10480:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"10475:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8135,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"10494:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10500:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10494:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8132,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8437,"src":"10461:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7923_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10461:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10503:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"10461:48:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10446:63:31","trueExpression":{"hexValue":"30","id":8131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10457:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8121,"id":8141,"nodeType":"Return","src":"10439:70:31"}]},"documentation":{"id":8114,"nodeType":"StructuredDocumentation","src":"10196:109:31","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8143,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"10319:6:31","nodeType":"FunctionDefinition","parameters":{"id":8118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8117,"mutability":"mutable","name":"self","nameLocation":"10343:4:31","nodeType":"VariableDeclaration","scope":8143,"src":"10326:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8116,"nodeType":"UserDefinedTypeName","pathNode":{"id":8115,"name":"Trace208","nameLocations":["10326:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"10326:8:31"},"referencedDeclaration":7918,"src":"10326:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10325:23:31"},"returnParameters":{"id":8121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8143,"src":"10372:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8119,"name":"uint208","nodeType":"ElementaryTypeName","src":"10372:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10371:9:31"},"scope":8962,"src":"10310:206:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8191,"nodeType":"Block","src":"10809:275:31","statements":[{"assignments":[8157],"declarations":[{"constant":false,"id":8157,"mutability":"mutable","name":"pos","nameLocation":"10827:3:31","nodeType":"VariableDeclaration","scope":8191,"src":"10819:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8156,"name":"uint256","nodeType":"ElementaryTypeName","src":"10819:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8161,"initialValue":{"expression":{"expression":{"id":8158,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8147,"src":"10833:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10838:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"10833:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10851:6:31","memberName":"length","nodeType":"MemberAccess","src":"10833:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10819:38:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8162,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"10871:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10878:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10871:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8189,"nodeType":"Block","src":"10932:146:31","statements":[{"assignments":[8173],"declarations":[{"constant":false,"id":8173,"mutability":"mutable","name":"ckpt","nameLocation":"10968:4:31","nodeType":"VariableDeclaration","scope":8189,"src":"10946:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8172,"nodeType":"UserDefinedTypeName","pathNode":{"id":8171,"name":"Checkpoint208","nameLocations":["10946:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"10946:13:31"},"referencedDeclaration":7923,"src":"10946:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":8181,"initialValue":{"arguments":[{"expression":{"id":8175,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8147,"src":"10989:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10994:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"10989:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8177,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"11008:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11014:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11008:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8174,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8437,"src":"10975:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7923_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10975:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10946:70:31"},{"expression":{"components":[{"hexValue":"74727565","id":8182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11038:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8183,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"11044:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11049:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7920,"src":"11044:9:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":8185,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"11055:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11060:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"11055:11:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11037:30:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint48_$_t_uint208_$","typeString":"tuple(bool,uint48,uint208)"}},"functionReturnParameters":8155,"id":8188,"nodeType":"Return","src":"11030:37:31"}]},"id":8190,"nodeType":"IfStatement","src":"10867:211:31","trueBody":{"id":8170,"nodeType":"Block","src":"10881:45:31","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":8165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10903:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10910:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10913:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10902:13:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":8155,"id":8169,"nodeType":"Return","src":"10895:20:31"}]}}]},"documentation":{"id":8144,"nodeType":"StructuredDocumentation","src":"10522:168:31","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8192,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"10704:16:31","nodeType":"FunctionDefinition","parameters":{"id":8148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8147,"mutability":"mutable","name":"self","nameLocation":"10738:4:31","nodeType":"VariableDeclaration","scope":8192,"src":"10721:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8146,"nodeType":"UserDefinedTypeName","pathNode":{"id":8145,"name":"Trace208","nameLocations":["10721:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"10721:8:31"},"referencedDeclaration":7918,"src":"10721:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10720:23:31"},"returnParameters":{"id":8155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8150,"mutability":"mutable","name":"exists","nameLocation":"10772:6:31","nodeType":"VariableDeclaration","scope":8192,"src":"10767:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8149,"name":"bool","nodeType":"ElementaryTypeName","src":"10767:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8152,"mutability":"mutable","name":"_key","nameLocation":"10787:4:31","nodeType":"VariableDeclaration","scope":8192,"src":"10780:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8151,"name":"uint48","nodeType":"ElementaryTypeName","src":"10780:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8154,"mutability":"mutable","name":"_value","nameLocation":"10801:6:31","nodeType":"VariableDeclaration","scope":8192,"src":"10793:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8153,"name":"uint208","nodeType":"ElementaryTypeName","src":"10793:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10766:42:31"},"scope":8962,"src":"10695:389:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8205,"nodeType":"Block","src":"11223:48:31","statements":[{"expression":{"expression":{"expression":{"id":8201,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"11240:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11245:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"11240:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11258:6:31","memberName":"length","nodeType":"MemberAccess","src":"11240:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8200,"id":8204,"nodeType":"Return","src":"11233:31:31"}]},"documentation":{"id":8193,"nodeType":"StructuredDocumentation","src":"11090:57:31","text":" @dev Returns the number of checkpoint."},"id":8206,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11161:6:31","nodeType":"FunctionDefinition","parameters":{"id":8197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8196,"mutability":"mutable","name":"self","nameLocation":"11185:4:31","nodeType":"VariableDeclaration","scope":8206,"src":"11168:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8195,"nodeType":"UserDefinedTypeName","pathNode":{"id":8194,"name":"Trace208","nameLocations":["11168:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"11168:8:31"},"referencedDeclaration":7918,"src":"11168:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"11167:23:31"},"returnParameters":{"id":8200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8206,"src":"11214:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8198,"name":"uint256","nodeType":"ElementaryTypeName","src":"11214:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11213:9:31"},"scope":8962,"src":"11152:119:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8223,"nodeType":"Block","src":"11435:46:31","statements":[{"expression":{"baseExpression":{"expression":{"id":8218,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8210,"src":"11452:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11457:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"11452:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8221,"indexExpression":{"id":8220,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"11470:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11452:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref"}},"functionReturnParameters":8217,"id":8222,"nodeType":"Return","src":"11445:29:31"}]},"documentation":{"id":8207,"nodeType":"StructuredDocumentation","src":"11277:61:31","text":" @dev Returns checkpoint at given position."},"id":8224,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11352:2:31","nodeType":"FunctionDefinition","parameters":{"id":8213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8210,"mutability":"mutable","name":"self","nameLocation":"11372:4:31","nodeType":"VariableDeclaration","scope":8224,"src":"11355:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8209,"nodeType":"UserDefinedTypeName","pathNode":{"id":8208,"name":"Trace208","nameLocations":["11355:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"11355:8:31"},"referencedDeclaration":7918,"src":"11355:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7918_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8212,"mutability":"mutable","name":"pos","nameLocation":"11385:3:31","nodeType":"VariableDeclaration","scope":8224,"src":"11378:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8211,"name":"uint32","nodeType":"ElementaryTypeName","src":"11378:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11354:35:31"},"returnParameters":{"id":8217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8224,"src":"11413:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8215,"nodeType":"UserDefinedTypeName","pathNode":{"id":8214,"name":"Checkpoint208","nameLocations":["11413:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"11413:13:31"},"referencedDeclaration":7923,"src":"11413:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"11412:22:31"},"scope":8962,"src":"11343:138:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8317,"nodeType":"Block","src":"11814:765:31","statements":[{"assignments":[8241],"declarations":[{"constant":false,"id":8241,"mutability":"mutable","name":"pos","nameLocation":"11832:3:31","nodeType":"VariableDeclaration","scope":8317,"src":"11824:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8240,"name":"uint256","nodeType":"ElementaryTypeName","src":"11824:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8244,"initialValue":{"expression":{"id":8242,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"11838:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11843:6:31","memberName":"length","nodeType":"MemberAccess","src":"11838:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11824:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8245,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"11864:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11870:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11864:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8315,"nodeType":"Block","src":"12465:108:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":8306,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"12510:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"12523:5:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8305,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"12489:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$7923_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12504:4:31","12515:6:31"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12489:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$7923_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":8302,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"12479:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12484:4:31","memberName":"push","nodeType":"MemberAccess","src":"12479:9:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$7923_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8310,"nodeType":"ExpressionStatement","src":"12479:52:31"},{"expression":{"components":[{"hexValue":"30","id":8311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12553:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"12556:5:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12552:10:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint208_$","typeString":"tuple(int_const 0,uint208)"}},"functionReturnParameters":8239,"id":8314,"nodeType":"Return","src":"12545:17:31"}]},"id":8316,"nodeType":"IfStatement","src":"11860:713:31","trueBody":{"id":8301,"nodeType":"Block","src":"11873:586:31","statements":[{"assignments":[8250],"declarations":[{"constant":false,"id":8250,"mutability":"mutable","name":"last","nameLocation":"11909:4:31","nodeType":"VariableDeclaration","scope":8301,"src":"11887:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8249,"nodeType":"UserDefinedTypeName","pathNode":{"id":8248,"name":"Checkpoint208","nameLocations":["11887:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"11887:13:31"},"referencedDeclaration":7923,"src":"11887:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":8257,"initialValue":{"arguments":[{"id":8252,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"11930:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8253,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"11936:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11942:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11936:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8251,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8437,"src":"11916:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7923_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11887:57:31"},{"assignments":[8259],"declarations":[{"constant":false,"id":8259,"mutability":"mutable","name":"lastKey","nameLocation":"11965:7:31","nodeType":"VariableDeclaration","scope":8301,"src":"11958:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8258,"name":"uint48","nodeType":"ElementaryTypeName","src":"11958:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":8262,"initialValue":{"expression":{"id":8260,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8250,"src":"11975:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11980:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7920,"src":"11975:9:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"11958:26:31"},{"assignments":[8264],"declarations":[{"constant":false,"id":8264,"mutability":"mutable","name":"lastValue","nameLocation":"12006:9:31","nodeType":"VariableDeclaration","scope":8301,"src":"11998:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8263,"name":"uint208","nodeType":"ElementaryTypeName","src":"11998:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"id":8267,"initialValue":{"expression":{"id":8265,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8250,"src":"12018:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12023:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"12018:11:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"VariableDeclarationStatement","src":"11998:31:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8268,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"12103:7:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8269,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"12113:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12103:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8275,"nodeType":"IfStatement","src":"12099:89:31","trueBody":{"id":8274,"nodeType":"Block","src":"12118:70:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8271,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"12143:28:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12143:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8273,"nodeType":"RevertStatement","src":"12136:37:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8276,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"12251:7:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8277,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"12262:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12251:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8295,"nodeType":"Block","src":"12325:85:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":8290,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"12374:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"12387:5:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8289,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"12353:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$7923_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12368:4:31","12379:6:31"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12353:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$7923_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":8286,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"12343:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12348:4:31","memberName":"push","nodeType":"MemberAccess","src":"12343:9:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$7923_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12343:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8294,"nodeType":"ExpressionStatement","src":"12343:52:31"}]},"id":8296,"nodeType":"IfStatement","src":"12247:163:31","trueBody":{"id":8285,"nodeType":"Block","src":"12267:52:31","statements":[{"expression":{"id":8283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8279,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8250,"src":"12285:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12290:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"12285:11:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"12299:5:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"12285:19:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8284,"nodeType":"ExpressionStatement","src":"12285:19:31"}]}},{"expression":{"components":[{"id":8297,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"12431:9:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":8298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"12442:5:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12430:18:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":8239,"id":8300,"nodeType":"Return","src":"12423:25:31"}]}}]},"documentation":{"id":8225,"nodeType":"StructuredDocumentation","src":"11487:165:31","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8318,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"11666:7:31","nodeType":"FunctionDefinition","parameters":{"id":8234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8229,"mutability":"mutable","name":"self","nameLocation":"11707:4:31","nodeType":"VariableDeclaration","scope":8318,"src":"11683:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8227,"nodeType":"UserDefinedTypeName","pathNode":{"id":8226,"name":"Checkpoint208","nameLocations":["11683:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"11683:13:31"},"referencedDeclaration":7923,"src":"11683:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8228,"nodeType":"ArrayTypeName","src":"11683:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8231,"mutability":"mutable","name":"key","nameLocation":"11728:3:31","nodeType":"VariableDeclaration","scope":8318,"src":"11721:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8230,"name":"uint48","nodeType":"ElementaryTypeName","src":"11721:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8233,"mutability":"mutable","name":"value","nameLocation":"11749:5:31","nodeType":"VariableDeclaration","scope":8318,"src":"11741:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8232,"name":"uint208","nodeType":"ElementaryTypeName","src":"11741:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11673:87:31"},"returnParameters":{"id":8239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8236,"mutability":"mutable","name":"oldValue","nameLocation":"11786:8:31","nodeType":"VariableDeclaration","scope":8318,"src":"11778:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8235,"name":"uint208","nodeType":"ElementaryTypeName","src":"11778:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":8238,"mutability":"mutable","name":"newValue","nameLocation":"11804:8:31","nodeType":"VariableDeclaration","scope":8318,"src":"11796:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8237,"name":"uint208","nodeType":"ElementaryTypeName","src":"11796:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11777:36:31"},"scope":8962,"src":"11657:922:31","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8369,"nodeType":"Block","src":"13095:267:31","statements":[{"body":{"id":8365,"nodeType":"Block","src":"13124:211:31","statements":[{"assignments":[8338],"declarations":[{"constant":false,"id":8338,"mutability":"mutable","name":"mid","nameLocation":"13146:3:31","nodeType":"VariableDeclaration","scope":8365,"src":"13138:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8337,"name":"uint256","nodeType":"ElementaryTypeName","src":"13138:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8344,"initialValue":{"arguments":[{"id":8341,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"13165:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8342,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8329,"src":"13170:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8339,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"13152:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":8340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13157:7:31","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4124,"src":"13152:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13152:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13138:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8346,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"13207:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":8347,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"13213:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8345,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8437,"src":"13193:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7923_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13193:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13218:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7920,"src":"13193:29:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8350,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8325,"src":"13225:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13193:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8363,"nodeType":"Block","src":"13279:46:31","statements":[{"expression":{"id":8361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8357,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"13297:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8358,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"13303:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13309:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13303:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13297:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8362,"nodeType":"ExpressionStatement","src":"13297:13:31"}]},"id":8364,"nodeType":"IfStatement","src":"13189:136:31","trueBody":{"id":8356,"nodeType":"Block","src":"13230:43:31","statements":[{"expression":{"id":8354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8352,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8329,"src":"13248:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8353,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"13255:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13248:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8355,"nodeType":"ExpressionStatement","src":"13248:10:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8334,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"13112:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8335,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8329,"src":"13118:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13112:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8366,"nodeType":"WhileStatement","src":"13105:230:31"},{"expression":{"id":8367,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8329,"src":"13351:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8333,"id":8368,"nodeType":"Return","src":"13344:11:31"}]},"documentation":{"id":8319,"nodeType":"StructuredDocumentation","src":"12585:339:31","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8370,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"12938:18:31","nodeType":"FunctionDefinition","parameters":{"id":8330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8323,"mutability":"mutable","name":"self","nameLocation":"12990:4:31","nodeType":"VariableDeclaration","scope":8370,"src":"12966:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8321,"nodeType":"UserDefinedTypeName","pathNode":{"id":8320,"name":"Checkpoint208","nameLocations":["12966:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"12966:13:31"},"referencedDeclaration":7923,"src":"12966:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8322,"nodeType":"ArrayTypeName","src":"12966:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8325,"mutability":"mutable","name":"key","nameLocation":"13011:3:31","nodeType":"VariableDeclaration","scope":8370,"src":"13004:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8324,"name":"uint48","nodeType":"ElementaryTypeName","src":"13004:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8327,"mutability":"mutable","name":"low","nameLocation":"13032:3:31","nodeType":"VariableDeclaration","scope":8370,"src":"13024:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8326,"name":"uint256","nodeType":"ElementaryTypeName","src":"13024:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8329,"mutability":"mutable","name":"high","nameLocation":"13053:4:31","nodeType":"VariableDeclaration","scope":8370,"src":"13045:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8328,"name":"uint256","nodeType":"ElementaryTypeName","src":"13045:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12956:107:31"},"returnParameters":{"id":8333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8370,"src":"13086:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8331,"name":"uint256","nodeType":"ElementaryTypeName","src":"13086:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13085:9:31"},"scope":8962,"src":"12929:433:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8421,"nodeType":"Block","src":"13879:267:31","statements":[{"body":{"id":8417,"nodeType":"Block","src":"13908:211:31","statements":[{"assignments":[8390],"declarations":[{"constant":false,"id":8390,"mutability":"mutable","name":"mid","nameLocation":"13930:3:31","nodeType":"VariableDeclaration","scope":8417,"src":"13922:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8389,"name":"uint256","nodeType":"ElementaryTypeName","src":"13922:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8396,"initialValue":{"arguments":[{"id":8393,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"13949:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8394,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"13954:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8391,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"13936:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":8392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13941:7:31","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4124,"src":"13936:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13936:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13922:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8398,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"13991:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":8399,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"13997:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8397,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8437,"src":"13977:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7923_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13977:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14002:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7920,"src":"13977:29:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8402,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"14009:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13977:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8415,"nodeType":"Block","src":"14066:43:31","statements":[{"expression":{"id":8413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8411,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"14084:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8412,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"14091:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14084:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8414,"nodeType":"ExpressionStatement","src":"14084:10:31"}]},"id":8416,"nodeType":"IfStatement","src":"13973:136:31","trueBody":{"id":8410,"nodeType":"Block","src":"14014:46:31","statements":[{"expression":{"id":8408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8404,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"14032:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8405,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"14038:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14044:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14038:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14032:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8409,"nodeType":"ExpressionStatement","src":"14032:13:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8386,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"13896:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8387,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"13902:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13896:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8418,"nodeType":"WhileStatement","src":"13889:230:31"},{"expression":{"id":8419,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"14135:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8385,"id":8420,"nodeType":"Return","src":"14128:11:31"}]},"documentation":{"id":8371,"nodeType":"StructuredDocumentation","src":"13368:340:31","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8422,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"13722:18:31","nodeType":"FunctionDefinition","parameters":{"id":8382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8375,"mutability":"mutable","name":"self","nameLocation":"13774:4:31","nodeType":"VariableDeclaration","scope":8422,"src":"13750:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8373,"nodeType":"UserDefinedTypeName","pathNode":{"id":8372,"name":"Checkpoint208","nameLocations":["13750:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"13750:13:31"},"referencedDeclaration":7923,"src":"13750:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8374,"nodeType":"ArrayTypeName","src":"13750:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8377,"mutability":"mutable","name":"key","nameLocation":"13795:3:31","nodeType":"VariableDeclaration","scope":8422,"src":"13788:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8376,"name":"uint48","nodeType":"ElementaryTypeName","src":"13788:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8379,"mutability":"mutable","name":"low","nameLocation":"13816:3:31","nodeType":"VariableDeclaration","scope":8422,"src":"13808:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8378,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8381,"mutability":"mutable","name":"high","nameLocation":"13837:4:31","nodeType":"VariableDeclaration","scope":8422,"src":"13829:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8380,"name":"uint256","nodeType":"ElementaryTypeName","src":"13829:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13740:107:31"},"returnParameters":{"id":8385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8422,"src":"13870:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8383,"name":"uint256","nodeType":"ElementaryTypeName","src":"13870:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13869:9:31"},"scope":8962,"src":"13713:433:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8436,"nodeType":"Block","src":"14429:125:31","statements":[{"AST":{"nativeSrc":"14448:100:31","nodeType":"YulBlock","src":"14448:100:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14469:1:31","nodeType":"YulLiteral","src":"14469:1:31","type":"","value":"0"},{"name":"self.slot","nativeSrc":"14472:9:31","nodeType":"YulIdentifier","src":"14472:9:31"}],"functionName":{"name":"mstore","nativeSrc":"14462:6:31","nodeType":"YulIdentifier","src":"14462:6:31"},"nativeSrc":"14462:20:31","nodeType":"YulFunctionCall","src":"14462:20:31"},"nativeSrc":"14462:20:31","nodeType":"YulExpressionStatement","src":"14462:20:31"},{"nativeSrc":"14495:43:31","nodeType":"YulAssignment","src":"14495:43:31","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14524:1:31","nodeType":"YulLiteral","src":"14524:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"14527:4:31","nodeType":"YulLiteral","src":"14527:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"14514:9:31","nodeType":"YulIdentifier","src":"14514:9:31"},"nativeSrc":"14514:18:31","nodeType":"YulFunctionCall","src":"14514:18:31"},{"name":"pos","nativeSrc":"14534:3:31","nodeType":"YulIdentifier","src":"14534:3:31"}],"functionName":{"name":"add","nativeSrc":"14510:3:31","nodeType":"YulIdentifier","src":"14510:3:31"},"nativeSrc":"14510:28:31","nodeType":"YulFunctionCall","src":"14510:28:31"},"variableNames":[{"name":"result.slot","nativeSrc":"14495:11:31","nodeType":"YulIdentifier","src":"14495:11:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8429,"isOffset":false,"isSlot":false,"src":"14534:3:31","valueSize":1},{"declaration":8433,"isOffset":false,"isSlot":true,"src":"14495:11:31","suffix":"slot","valueSize":1},{"declaration":8427,"isOffset":false,"isSlot":true,"src":"14472:9:31","suffix":"slot","valueSize":1}],"id":8435,"nodeType":"InlineAssembly","src":"14439:109:31"}]},"documentation":{"id":8423,"nodeType":"StructuredDocumentation","src":"14152:132:31","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":8437,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"14298:13:31","nodeType":"FunctionDefinition","parameters":{"id":8430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8427,"mutability":"mutable","name":"self","nameLocation":"14345:4:31","nodeType":"VariableDeclaration","scope":8437,"src":"14321:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8425,"nodeType":"UserDefinedTypeName","pathNode":{"id":8424,"name":"Checkpoint208","nameLocations":["14321:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"14321:13:31"},"referencedDeclaration":7923,"src":"14321:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8426,"nodeType":"ArrayTypeName","src":"14321:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7923_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8429,"mutability":"mutable","name":"pos","nameLocation":"14367:3:31","nodeType":"VariableDeclaration","scope":8437,"src":"14359:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8428,"name":"uint256","nodeType":"ElementaryTypeName","src":"14359:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14311:65:31"},"returnParameters":{"id":8434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8433,"mutability":"mutable","name":"result","nameLocation":"14421:6:31","nodeType":"VariableDeclaration","scope":8437,"src":"14399:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8432,"nodeType":"UserDefinedTypeName","pathNode":{"id":8431,"name":"Checkpoint208","nameLocations":["14399:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"14399:13:31"},"referencedDeclaration":7923,"src":"14399:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7923_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"14398:30:31"},"scope":8962,"src":"14289:265:31","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":8442,"members":[{"constant":false,"id":8441,"mutability":"mutable","name":"_checkpoints","nameLocation":"14602:12:31","nodeType":"VariableDeclaration","scope":8442,"src":"14586:28:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8439,"nodeType":"UserDefinedTypeName","pathNode":{"id":8438,"name":"Checkpoint160","nameLocations":["14586:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8447,"src":"14586:13:31"},"referencedDeclaration":8447,"src":"14586:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8440,"nodeType":"ArrayTypeName","src":"14586:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"14567:8:31","nodeType":"StructDefinition","scope":8962,"src":"14560:61:31","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":8447,"members":[{"constant":false,"id":8444,"mutability":"mutable","name":"_key","nameLocation":"14665:4:31","nodeType":"VariableDeclaration","scope":8447,"src":"14658:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8443,"name":"uint96","nodeType":"ElementaryTypeName","src":"14658:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8446,"mutability":"mutable","name":"_value","nameLocation":"14687:6:31","nodeType":"VariableDeclaration","scope":8447,"src":"14679:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8445,"name":"uint160","nodeType":"ElementaryTypeName","src":"14679:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"14634:13:31","nodeType":"StructDefinition","scope":8962,"src":"14627:73:31","visibility":"public"},{"body":{"id":8469,"nodeType":"Block","src":"15161:62:31","statements":[{"expression":{"arguments":[{"expression":{"id":8463,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8451,"src":"15186:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15191:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"15186:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8465,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8453,"src":"15205:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"15210:5:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8462,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[7794,8318,8842],"referencedDeclaration":8842,"src":"15178:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":8467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15178:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":8461,"id":8468,"nodeType":"Return","src":"15171:45:31"}]},"documentation":{"id":8448,"nodeType":"StructuredDocumentation","src":"14706:302:31","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n library."},"id":8470,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"15022:4:31","nodeType":"FunctionDefinition","parameters":{"id":8456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8451,"mutability":"mutable","name":"self","nameLocation":"15053:4:31","nodeType":"VariableDeclaration","scope":8470,"src":"15036:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8450,"nodeType":"UserDefinedTypeName","pathNode":{"id":8449,"name":"Trace160","nameLocations":["15036:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8442,"src":"15036:8:31"},"referencedDeclaration":8442,"src":"15036:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8453,"mutability":"mutable","name":"key","nameLocation":"15074:3:31","nodeType":"VariableDeclaration","scope":8470,"src":"15067:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8452,"name":"uint96","nodeType":"ElementaryTypeName","src":"15067:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8455,"mutability":"mutable","name":"value","nameLocation":"15095:5:31","nodeType":"VariableDeclaration","scope":8470,"src":"15087:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8454,"name":"uint160","nodeType":"ElementaryTypeName","src":"15087:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15026:80:31"},"returnParameters":{"id":8461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8458,"mutability":"mutable","name":"oldValue","nameLocation":"15133:8:31","nodeType":"VariableDeclaration","scope":8470,"src":"15125:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8457,"name":"uint160","nodeType":"ElementaryTypeName","src":"15125:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":8460,"mutability":"mutable","name":"newValue","nameLocation":"15151:8:31","nodeType":"VariableDeclaration","scope":8470,"src":"15143:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8459,"name":"uint160","nodeType":"ElementaryTypeName","src":"15143:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15124:36:31"},"scope":8962,"src":"15013:210:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8509,"nodeType":"Block","src":"15476:207:31","statements":[{"assignments":[8482],"declarations":[{"constant":false,"id":8482,"mutability":"mutable","name":"len","nameLocation":"15494:3:31","nodeType":"VariableDeclaration","scope":8509,"src":"15486:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8481,"name":"uint256","nodeType":"ElementaryTypeName","src":"15486:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8486,"initialValue":{"expression":{"expression":{"id":8483,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8474,"src":"15500:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15505:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"15500:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15518:6:31","memberName":"length","nodeType":"MemberAccess","src":"15500:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15486:38:31"},{"assignments":[8488],"declarations":[{"constant":false,"id":8488,"mutability":"mutable","name":"pos","nameLocation":"15542:3:31","nodeType":"VariableDeclaration","scope":8509,"src":"15534:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8487,"name":"uint256","nodeType":"ElementaryTypeName","src":"15534:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8496,"initialValue":{"arguments":[{"expression":{"id":8490,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8474,"src":"15567:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15572:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"15567:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8492,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"15586:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":8493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15591:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8494,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"15594:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8489,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7898,8422,8946],"referencedDeclaration":8946,"src":"15548:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":8495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15548:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15534:64:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8497,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8488,"src":"15615:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8498,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"15622:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15615:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8502,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8474,"src":"15646:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15651:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"15646:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8504,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8488,"src":"15665:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8501,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8961,"src":"15632:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8447_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15632:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15670:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8446,"src":"15632:44:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15615:61:31","trueExpression":{"hexValue":"30","id":8500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15628:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8480,"id":8508,"nodeType":"Return","src":"15608:68:31"}]},"documentation":{"id":8471,"nodeType":"StructuredDocumentation","src":"15229:154:31","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":8510,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"15397:11:31","nodeType":"FunctionDefinition","parameters":{"id":8477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8474,"mutability":"mutable","name":"self","nameLocation":"15426:4:31","nodeType":"VariableDeclaration","scope":8510,"src":"15409:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8473,"nodeType":"UserDefinedTypeName","pathNode":{"id":8472,"name":"Trace160","nameLocations":["15409:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8442,"src":"15409:8:31"},"referencedDeclaration":8442,"src":"15409:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8476,"mutability":"mutable","name":"key","nameLocation":"15439:3:31","nodeType":"VariableDeclaration","scope":8510,"src":"15432:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8475,"name":"uint96","nodeType":"ElementaryTypeName","src":"15432:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15408:35:31"},"returnParameters":{"id":8480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8510,"src":"15467:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8478,"name":"uint160","nodeType":"ElementaryTypeName","src":"15467:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15466:9:31"},"scope":8962,"src":"15388:295:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8551,"nodeType":"Block","src":"15938:209:31","statements":[{"assignments":[8522],"declarations":[{"constant":false,"id":8522,"mutability":"mutable","name":"len","nameLocation":"15956:3:31","nodeType":"VariableDeclaration","scope":8551,"src":"15948:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8521,"name":"uint256","nodeType":"ElementaryTypeName","src":"15948:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8526,"initialValue":{"expression":{"expression":{"id":8523,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"15962:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15967:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"15962:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15980:6:31","memberName":"length","nodeType":"MemberAccess","src":"15962:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15948:38:31"},{"assignments":[8528],"declarations":[{"constant":false,"id":8528,"mutability":"mutable","name":"pos","nameLocation":"16004:3:31","nodeType":"VariableDeclaration","scope":8551,"src":"15996:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8527,"name":"uint256","nodeType":"ElementaryTypeName","src":"15996:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8536,"initialValue":{"arguments":[{"expression":{"id":8530,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"16029:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16034:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"16029:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8532,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8516,"src":"16048:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":8533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16053:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8534,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8522,"src":"16056:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8529,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7846,8370,8894],"referencedDeclaration":8894,"src":"16010:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16010:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15996:64:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8537,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8528,"src":"16077:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16084:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16077:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8542,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"16106:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16111:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"16106:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8544,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8528,"src":"16125:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16131:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16125:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8541,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8961,"src":"16092:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8447_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16092:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16134:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8446,"src":"16092:48:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16077:63:31","trueExpression":{"hexValue":"30","id":8540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16088:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8520,"id":8550,"nodeType":"Return","src":"16070:70:31"}]},"documentation":{"id":8511,"nodeType":"StructuredDocumentation","src":"15689:156:31","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":8552,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"15859:11:31","nodeType":"FunctionDefinition","parameters":{"id":8517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8514,"mutability":"mutable","name":"self","nameLocation":"15888:4:31","nodeType":"VariableDeclaration","scope":8552,"src":"15871:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8513,"nodeType":"UserDefinedTypeName","pathNode":{"id":8512,"name":"Trace160","nameLocations":["15871:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8442,"src":"15871:8:31"},"referencedDeclaration":8442,"src":"15871:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8516,"mutability":"mutable","name":"key","nameLocation":"15901:3:31","nodeType":"VariableDeclaration","scope":8552,"src":"15894:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8515,"name":"uint96","nodeType":"ElementaryTypeName","src":"15894:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15870:35:31"},"returnParameters":{"id":8520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8552,"src":"15929:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8518,"name":"uint160","nodeType":"ElementaryTypeName","src":"15929:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15928:9:31"},"scope":8962,"src":"15850:297:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8636,"nodeType":"Block","src":"16546:512:31","statements":[{"assignments":[8564],"declarations":[{"constant":false,"id":8564,"mutability":"mutable","name":"len","nameLocation":"16564:3:31","nodeType":"VariableDeclaration","scope":8636,"src":"16556:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8563,"name":"uint256","nodeType":"ElementaryTypeName","src":"16556:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8568,"initialValue":{"expression":{"expression":{"id":8565,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8556,"src":"16570:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16575:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"16570:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16588:6:31","memberName":"length","nodeType":"MemberAccess","src":"16570:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16556:38:31"},{"assignments":[8570],"declarations":[{"constant":false,"id":8570,"mutability":"mutable","name":"low","nameLocation":"16613:3:31","nodeType":"VariableDeclaration","scope":8636,"src":"16605:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8569,"name":"uint256","nodeType":"ElementaryTypeName","src":"16605:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8572,"initialValue":{"hexValue":"30","id":8571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16619:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16605:15:31"},{"assignments":[8574],"declarations":[{"constant":false,"id":8574,"mutability":"mutable","name":"high","nameLocation":"16638:4:31","nodeType":"VariableDeclaration","scope":8636,"src":"16630:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8573,"name":"uint256","nodeType":"ElementaryTypeName","src":"16630:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8576,"initialValue":{"id":8575,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"16645:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16630:18:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8577,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"16663:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16669:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"16663:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8611,"nodeType":"IfStatement","src":"16659:234:31","trueBody":{"id":8610,"nodeType":"Block","src":"16672:221:31","statements":[{"assignments":[8581],"declarations":[{"constant":false,"id":8581,"mutability":"mutable","name":"mid","nameLocation":"16694:3:31","nodeType":"VariableDeclaration","scope":8610,"src":"16686:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8580,"name":"uint256","nodeType":"ElementaryTypeName","src":"16686:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8588,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8582,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"16700:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8585,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"16716:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8583,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"16706:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":8584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16711:4:31","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4851,"src":"16706:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16706:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16700:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16686:34:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8589,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8558,"src":"16738:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8591,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8556,"src":"16758:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16763:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"16758:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8593,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"16777:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8590,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8961,"src":"16744:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8447_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16744:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16782:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8444,"src":"16744:42:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16738:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8608,"nodeType":"Block","src":"16837:46:31","statements":[{"expression":{"id":8606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8602,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8570,"src":"16855:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8603,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"16861:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16867:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16861:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16855:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8607,"nodeType":"ExpressionStatement","src":"16855:13:31"}]},"id":8609,"nodeType":"IfStatement","src":"16734:149:31","trueBody":{"id":8601,"nodeType":"Block","src":"16788:43:31","statements":[{"expression":{"id":8599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8597,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"16806:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8598,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"16813:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16806:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8600,"nodeType":"ExpressionStatement","src":"16806:10:31"}]}}]}},{"assignments":[8613],"declarations":[{"constant":false,"id":8613,"mutability":"mutable","name":"pos","nameLocation":"16911:3:31","nodeType":"VariableDeclaration","scope":8636,"src":"16903:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8612,"name":"uint256","nodeType":"ElementaryTypeName","src":"16903:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8621,"initialValue":{"arguments":[{"expression":{"id":8615,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8556,"src":"16936:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16941:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"16936:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8617,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8558,"src":"16955:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8618,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8570,"src":"16960:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8619,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"16965:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8614,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7846,8370,8894],"referencedDeclaration":8894,"src":"16917:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":8620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16917:53:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16903:67:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8622,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8613,"src":"16988:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16995:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16988:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8627,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8556,"src":"17017:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17022:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"17017:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8629,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8613,"src":"17036:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17042:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17036:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8626,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8961,"src":"17003:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8447_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17003:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17045:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8446,"src":"17003:48:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16988:63:31","trueExpression":{"hexValue":"30","id":8625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16999:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8562,"id":8635,"nodeType":"Return","src":"16981:70:31"}]},"documentation":{"id":8553,"nodeType":"StructuredDocumentation","src":"16153:294:31","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8637,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"16461:17:31","nodeType":"FunctionDefinition","parameters":{"id":8559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8556,"mutability":"mutable","name":"self","nameLocation":"16496:4:31","nodeType":"VariableDeclaration","scope":8637,"src":"16479:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8555,"nodeType":"UserDefinedTypeName","pathNode":{"id":8554,"name":"Trace160","nameLocations":["16479:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8442,"src":"16479:8:31"},"referencedDeclaration":8442,"src":"16479:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8558,"mutability":"mutable","name":"key","nameLocation":"16509:3:31","nodeType":"VariableDeclaration","scope":8637,"src":"16502:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8557,"name":"uint96","nodeType":"ElementaryTypeName","src":"16502:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"16478:35:31"},"returnParameters":{"id":8562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8637,"src":"16537:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8560,"name":"uint160","nodeType":"ElementaryTypeName","src":"16537:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16536:9:31"},"scope":8962,"src":"16452:606:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8666,"nodeType":"Block","src":"17249:135:31","statements":[{"assignments":[8647],"declarations":[{"constant":false,"id":8647,"mutability":"mutable","name":"pos","nameLocation":"17267:3:31","nodeType":"VariableDeclaration","scope":8666,"src":"17259:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8646,"name":"uint256","nodeType":"ElementaryTypeName","src":"17259:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8651,"initialValue":{"expression":{"expression":{"id":8648,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8641,"src":"17273:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17278:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"17273:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17291:6:31","memberName":"length","nodeType":"MemberAccess","src":"17273:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17259:38:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8652,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8647,"src":"17314:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17321:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17314:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8657,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8641,"src":"17343:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17348:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"17343:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8659,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8647,"src":"17362:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17368:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17362:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8656,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8961,"src":"17329:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8447_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17329:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17371:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8446,"src":"17329:48:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17314:63:31","trueExpression":{"hexValue":"30","id":8655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17325:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8645,"id":8665,"nodeType":"Return","src":"17307:70:31"}]},"documentation":{"id":8638,"nodeType":"StructuredDocumentation","src":"17064:109:31","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8667,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"17187:6:31","nodeType":"FunctionDefinition","parameters":{"id":8642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8641,"mutability":"mutable","name":"self","nameLocation":"17211:4:31","nodeType":"VariableDeclaration","scope":8667,"src":"17194:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8640,"nodeType":"UserDefinedTypeName","pathNode":{"id":8639,"name":"Trace160","nameLocations":["17194:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8442,"src":"17194:8:31"},"referencedDeclaration":8442,"src":"17194:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17193:23:31"},"returnParameters":{"id":8645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8667,"src":"17240:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8643,"name":"uint160","nodeType":"ElementaryTypeName","src":"17240:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17239:9:31"},"scope":8962,"src":"17178:206:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8715,"nodeType":"Block","src":"17677:275:31","statements":[{"assignments":[8681],"declarations":[{"constant":false,"id":8681,"mutability":"mutable","name":"pos","nameLocation":"17695:3:31","nodeType":"VariableDeclaration","scope":8715,"src":"17687:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8680,"name":"uint256","nodeType":"ElementaryTypeName","src":"17687:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8685,"initialValue":{"expression":{"expression":{"id":8682,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8671,"src":"17701:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17706:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"17701:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17719:6:31","memberName":"length","nodeType":"MemberAccess","src":"17701:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17687:38:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8686,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"17739:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17746:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17739:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8713,"nodeType":"Block","src":"17800:146:31","statements":[{"assignments":[8697],"declarations":[{"constant":false,"id":8697,"mutability":"mutable","name":"ckpt","nameLocation":"17836:4:31","nodeType":"VariableDeclaration","scope":8713,"src":"17814:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8696,"nodeType":"UserDefinedTypeName","pathNode":{"id":8695,"name":"Checkpoint160","nameLocations":["17814:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8447,"src":"17814:13:31"},"referencedDeclaration":8447,"src":"17814:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":8705,"initialValue":{"arguments":[{"expression":{"id":8699,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8671,"src":"17857:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17862:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"17857:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8701,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"17876:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17882:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17876:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8698,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8961,"src":"17843:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8447_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17843:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17814:70:31"},{"expression":{"components":[{"hexValue":"74727565","id":8706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17906:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8707,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8697,"src":"17912:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17917:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8444,"src":"17912:9:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":8709,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8697,"src":"17923:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17928:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8446,"src":"17923:11:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17905:30:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":8679,"id":8712,"nodeType":"Return","src":"17898:37:31"}]},"id":8714,"nodeType":"IfStatement","src":"17735:211:31","trueBody":{"id":8694,"nodeType":"Block","src":"17749:45:31","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":8689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17771:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17778:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17781:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17770:13:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":8679,"id":8693,"nodeType":"Return","src":"17763:20:31"}]}}]},"documentation":{"id":8668,"nodeType":"StructuredDocumentation","src":"17390:168:31","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8716,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"17572:16:31","nodeType":"FunctionDefinition","parameters":{"id":8672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8671,"mutability":"mutable","name":"self","nameLocation":"17606:4:31","nodeType":"VariableDeclaration","scope":8716,"src":"17589:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8670,"nodeType":"UserDefinedTypeName","pathNode":{"id":8669,"name":"Trace160","nameLocations":["17589:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8442,"src":"17589:8:31"},"referencedDeclaration":8442,"src":"17589:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17588:23:31"},"returnParameters":{"id":8679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8674,"mutability":"mutable","name":"exists","nameLocation":"17640:6:31","nodeType":"VariableDeclaration","scope":8716,"src":"17635:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8673,"name":"bool","nodeType":"ElementaryTypeName","src":"17635:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8676,"mutability":"mutable","name":"_key","nameLocation":"17655:4:31","nodeType":"VariableDeclaration","scope":8716,"src":"17648:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8675,"name":"uint96","nodeType":"ElementaryTypeName","src":"17648:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8678,"mutability":"mutable","name":"_value","nameLocation":"17669:6:31","nodeType":"VariableDeclaration","scope":8716,"src":"17661:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8677,"name":"uint160","nodeType":"ElementaryTypeName","src":"17661:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17634:42:31"},"scope":8962,"src":"17563:389:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8729,"nodeType":"Block","src":"18091:48:31","statements":[{"expression":{"expression":{"expression":{"id":8725,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8720,"src":"18108:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18113:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"18108:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18126:6:31","memberName":"length","nodeType":"MemberAccess","src":"18108:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8724,"id":8728,"nodeType":"Return","src":"18101:31:31"}]},"documentation":{"id":8717,"nodeType":"StructuredDocumentation","src":"17958:57:31","text":" @dev Returns the number of checkpoint."},"id":8730,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"18029:6:31","nodeType":"FunctionDefinition","parameters":{"id":8721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8720,"mutability":"mutable","name":"self","nameLocation":"18053:4:31","nodeType":"VariableDeclaration","scope":8730,"src":"18036:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8719,"nodeType":"UserDefinedTypeName","pathNode":{"id":8718,"name":"Trace160","nameLocations":["18036:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8442,"src":"18036:8:31"},"referencedDeclaration":8442,"src":"18036:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"18035:23:31"},"returnParameters":{"id":8724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8730,"src":"18082:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8722,"name":"uint256","nodeType":"ElementaryTypeName","src":"18082:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18081:9:31"},"scope":8962,"src":"18020:119:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8747,"nodeType":"Block","src":"18303:46:31","statements":[{"expression":{"baseExpression":{"expression":{"id":8742,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8734,"src":"18320:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18325:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"18320:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8745,"indexExpression":{"id":8744,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"18338:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18320:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref"}},"functionReturnParameters":8741,"id":8746,"nodeType":"Return","src":"18313:29:31"}]},"documentation":{"id":8731,"nodeType":"StructuredDocumentation","src":"18145:61:31","text":" @dev Returns checkpoint at given position."},"id":8748,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"18220:2:31","nodeType":"FunctionDefinition","parameters":{"id":8737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8734,"mutability":"mutable","name":"self","nameLocation":"18240:4:31","nodeType":"VariableDeclaration","scope":8748,"src":"18223:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8733,"nodeType":"UserDefinedTypeName","pathNode":{"id":8732,"name":"Trace160","nameLocations":["18223:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8442,"src":"18223:8:31"},"referencedDeclaration":8442,"src":"18223:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8442_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8736,"mutability":"mutable","name":"pos","nameLocation":"18253:3:31","nodeType":"VariableDeclaration","scope":8748,"src":"18246:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8735,"name":"uint32","nodeType":"ElementaryTypeName","src":"18246:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"18222:35:31"},"returnParameters":{"id":8741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8748,"src":"18281:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8739,"nodeType":"UserDefinedTypeName","pathNode":{"id":8738,"name":"Checkpoint160","nameLocations":["18281:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8447,"src":"18281:13:31"},"referencedDeclaration":8447,"src":"18281:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18280:22:31"},"scope":8962,"src":"18211:138:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8841,"nodeType":"Block","src":"18682:765:31","statements":[{"assignments":[8765],"declarations":[{"constant":false,"id":8765,"mutability":"mutable","name":"pos","nameLocation":"18700:3:31","nodeType":"VariableDeclaration","scope":8841,"src":"18692:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8764,"name":"uint256","nodeType":"ElementaryTypeName","src":"18692:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8768,"initialValue":{"expression":{"id":8766,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"18706:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":8767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18711:6:31","memberName":"length","nodeType":"MemberAccess","src":"18706:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18692:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8769,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"18732:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18738:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18732:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8839,"nodeType":"Block","src":"19333:108:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":8830,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8755,"src":"19378:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"19391:5:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8829,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8447,"src":"19357:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$8447_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19372:4:31","19383:6:31"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19357:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$8447_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":8826,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"19347:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":8828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19352:4:31","memberName":"push","nodeType":"MemberAccess","src":"19347:9:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$8447_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":8833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19347:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8834,"nodeType":"ExpressionStatement","src":"19347:52:31"},{"expression":{"components":[{"hexValue":"30","id":8835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19421:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"19424:5:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19420:10:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":8763,"id":8838,"nodeType":"Return","src":"19413:17:31"}]},"id":8840,"nodeType":"IfStatement","src":"18728:713:31","trueBody":{"id":8825,"nodeType":"Block","src":"18741:586:31","statements":[{"assignments":[8774],"declarations":[{"constant":false,"id":8774,"mutability":"mutable","name":"last","nameLocation":"18777:4:31","nodeType":"VariableDeclaration","scope":8825,"src":"18755:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8773,"nodeType":"UserDefinedTypeName","pathNode":{"id":8772,"name":"Checkpoint160","nameLocations":["18755:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8447,"src":"18755:13:31"},"referencedDeclaration":8447,"src":"18755:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":8781,"initialValue":{"arguments":[{"id":8776,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"18798:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8777,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"18804:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18810:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18804:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8775,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8961,"src":"18784:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8447_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18784:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"18755:57:31"},{"assignments":[8783],"declarations":[{"constant":false,"id":8783,"mutability":"mutable","name":"lastKey","nameLocation":"18833:7:31","nodeType":"VariableDeclaration","scope":8825,"src":"18826:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8782,"name":"uint96","nodeType":"ElementaryTypeName","src":"18826:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":8786,"initialValue":{"expression":{"id":8784,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8774,"src":"18843:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18848:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8444,"src":"18843:9:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"18826:26:31"},{"assignments":[8788],"declarations":[{"constant":false,"id":8788,"mutability":"mutable","name":"lastValue","nameLocation":"18874:9:31","nodeType":"VariableDeclaration","scope":8825,"src":"18866:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8787,"name":"uint160","nodeType":"ElementaryTypeName","src":"18866:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":8791,"initialValue":{"expression":{"id":8789,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8774,"src":"18886:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18891:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8446,"src":"18886:11:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"VariableDeclarationStatement","src":"18866:31:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8792,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8783,"src":"18971:7:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8793,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8755,"src":"18981:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18971:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8799,"nodeType":"IfStatement","src":"18967:89:31","trueBody":{"id":8798,"nodeType":"Block","src":"18986:70:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8795,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"19011:28:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19011:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8797,"nodeType":"RevertStatement","src":"19004:37:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8800,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8783,"src":"19119:7:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8801,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8755,"src":"19130:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19119:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8819,"nodeType":"Block","src":"19193:85:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":8814,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8755,"src":"19242:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"19255:5:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8813,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8447,"src":"19221:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$8447_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19236:4:31","19247:6:31"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19221:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$8447_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":8810,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"19211:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":8812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19216:4:31","memberName":"push","nodeType":"MemberAccess","src":"19211:9:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$8447_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":8817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19211:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8818,"nodeType":"ExpressionStatement","src":"19211:52:31"}]},"id":8820,"nodeType":"IfStatement","src":"19115:163:31","trueBody":{"id":8809,"nodeType":"Block","src":"19135:52:31","statements":[{"expression":{"id":8807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8803,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8774,"src":"19153:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19158:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8446,"src":"19153:11:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"19167:5:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"19153:19:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8808,"nodeType":"ExpressionStatement","src":"19153:19:31"}]}},{"expression":{"components":[{"id":8821,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8788,"src":"19299:9:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":8822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"19310:5:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19298:18:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":8763,"id":8824,"nodeType":"Return","src":"19291:25:31"}]}}]},"documentation":{"id":8749,"nodeType":"StructuredDocumentation","src":"18355:165:31","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8842,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"18534:7:31","nodeType":"FunctionDefinition","parameters":{"id":8758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8753,"mutability":"mutable","name":"self","nameLocation":"18575:4:31","nodeType":"VariableDeclaration","scope":8842,"src":"18551:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8751,"nodeType":"UserDefinedTypeName","pathNode":{"id":8750,"name":"Checkpoint160","nameLocations":["18551:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8447,"src":"18551:13:31"},"referencedDeclaration":8447,"src":"18551:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8752,"nodeType":"ArrayTypeName","src":"18551:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8755,"mutability":"mutable","name":"key","nameLocation":"18596:3:31","nodeType":"VariableDeclaration","scope":8842,"src":"18589:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8754,"name":"uint96","nodeType":"ElementaryTypeName","src":"18589:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8757,"mutability":"mutable","name":"value","nameLocation":"18617:5:31","nodeType":"VariableDeclaration","scope":8842,"src":"18609:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8756,"name":"uint160","nodeType":"ElementaryTypeName","src":"18609:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18541:87:31"},"returnParameters":{"id":8763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8760,"mutability":"mutable","name":"oldValue","nameLocation":"18654:8:31","nodeType":"VariableDeclaration","scope":8842,"src":"18646:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8759,"name":"uint160","nodeType":"ElementaryTypeName","src":"18646:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":8762,"mutability":"mutable","name":"newValue","nameLocation":"18672:8:31","nodeType":"VariableDeclaration","scope":8842,"src":"18664:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8761,"name":"uint160","nodeType":"ElementaryTypeName","src":"18664:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18645:36:31"},"scope":8962,"src":"18525:922:31","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8893,"nodeType":"Block","src":"19963:267:31","statements":[{"body":{"id":8889,"nodeType":"Block","src":"19992:211:31","statements":[{"assignments":[8862],"declarations":[{"constant":false,"id":8862,"mutability":"mutable","name":"mid","nameLocation":"20014:3:31","nodeType":"VariableDeclaration","scope":8889,"src":"20006:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8861,"name":"uint256","nodeType":"ElementaryTypeName","src":"20006:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8868,"initialValue":{"arguments":[{"id":8865,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8851,"src":"20033:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8866,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8853,"src":"20038:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8863,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"20020:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":8864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20025:7:31","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4124,"src":"20020:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20020:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20006:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8870,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"20075:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":8871,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"20081:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8869,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8961,"src":"20061:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8447_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20061:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20086:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8444,"src":"20061:29:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8874,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8849,"src":"20093:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20061:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8887,"nodeType":"Block","src":"20147:46:31","statements":[{"expression":{"id":8885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8881,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8851,"src":"20165:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8882,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"20171:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20177:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20171:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20165:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8886,"nodeType":"ExpressionStatement","src":"20165:13:31"}]},"id":8888,"nodeType":"IfStatement","src":"20057:136:31","trueBody":{"id":8880,"nodeType":"Block","src":"20098:43:31","statements":[{"expression":{"id":8878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8876,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8853,"src":"20116:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8877,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"20123:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20116:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8879,"nodeType":"ExpressionStatement","src":"20116:10:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8858,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8851,"src":"19980:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8859,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8853,"src":"19986:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19980:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8890,"nodeType":"WhileStatement","src":"19973:230:31"},{"expression":{"id":8891,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8853,"src":"20219:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8857,"id":8892,"nodeType":"Return","src":"20212:11:31"}]},"documentation":{"id":8843,"nodeType":"StructuredDocumentation","src":"19453:339:31","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8894,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"19806:18:31","nodeType":"FunctionDefinition","parameters":{"id":8854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8847,"mutability":"mutable","name":"self","nameLocation":"19858:4:31","nodeType":"VariableDeclaration","scope":8894,"src":"19834:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8845,"nodeType":"UserDefinedTypeName","pathNode":{"id":8844,"name":"Checkpoint160","nameLocations":["19834:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8447,"src":"19834:13:31"},"referencedDeclaration":8447,"src":"19834:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8846,"nodeType":"ArrayTypeName","src":"19834:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8849,"mutability":"mutable","name":"key","nameLocation":"19879:3:31","nodeType":"VariableDeclaration","scope":8894,"src":"19872:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8848,"name":"uint96","nodeType":"ElementaryTypeName","src":"19872:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8851,"mutability":"mutable","name":"low","nameLocation":"19900:3:31","nodeType":"VariableDeclaration","scope":8894,"src":"19892:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8850,"name":"uint256","nodeType":"ElementaryTypeName","src":"19892:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8853,"mutability":"mutable","name":"high","nameLocation":"19921:4:31","nodeType":"VariableDeclaration","scope":8894,"src":"19913:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8852,"name":"uint256","nodeType":"ElementaryTypeName","src":"19913:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19824:107:31"},"returnParameters":{"id":8857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8894,"src":"19954:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8855,"name":"uint256","nodeType":"ElementaryTypeName","src":"19954:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19953:9:31"},"scope":8962,"src":"19797:433:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8945,"nodeType":"Block","src":"20747:267:31","statements":[{"body":{"id":8941,"nodeType":"Block","src":"20776:211:31","statements":[{"assignments":[8914],"declarations":[{"constant":false,"id":8914,"mutability":"mutable","name":"mid","nameLocation":"20798:3:31","nodeType":"VariableDeclaration","scope":8941,"src":"20790:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8913,"name":"uint256","nodeType":"ElementaryTypeName","src":"20790:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8920,"initialValue":{"arguments":[{"id":8917,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"20817:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8918,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"20822:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8915,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"20804:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":8916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20809:7:31","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4124,"src":"20804:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20804:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20790:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8922,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8899,"src":"20859:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":8923,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"20865:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8921,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7913,8437,8961],"referencedDeclaration":8961,"src":"20845:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8447_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20845:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20870:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8444,"src":"20845:29:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8926,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8901,"src":"20877:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20845:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8939,"nodeType":"Block","src":"20934:43:31","statements":[{"expression":{"id":8937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8935,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"20952:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8936,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"20959:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20952:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8938,"nodeType":"ExpressionStatement","src":"20952:10:31"}]},"id":8940,"nodeType":"IfStatement","src":"20841:136:31","trueBody":{"id":8934,"nodeType":"Block","src":"20882:46:31","statements":[{"expression":{"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8928,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"20900:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8929,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"20906:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20912:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20906:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20900:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8933,"nodeType":"ExpressionStatement","src":"20900:13:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8910,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"20764:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8911,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"20770:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20764:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8942,"nodeType":"WhileStatement","src":"20757:230:31"},{"expression":{"id":8943,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"21003:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8909,"id":8944,"nodeType":"Return","src":"20996:11:31"}]},"documentation":{"id":8895,"nodeType":"StructuredDocumentation","src":"20236:340:31","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8946,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"20590:18:31","nodeType":"FunctionDefinition","parameters":{"id":8906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8899,"mutability":"mutable","name":"self","nameLocation":"20642:4:31","nodeType":"VariableDeclaration","scope":8946,"src":"20618:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8897,"nodeType":"UserDefinedTypeName","pathNode":{"id":8896,"name":"Checkpoint160","nameLocations":["20618:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8447,"src":"20618:13:31"},"referencedDeclaration":8447,"src":"20618:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8898,"nodeType":"ArrayTypeName","src":"20618:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8901,"mutability":"mutable","name":"key","nameLocation":"20663:3:31","nodeType":"VariableDeclaration","scope":8946,"src":"20656:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8900,"name":"uint96","nodeType":"ElementaryTypeName","src":"20656:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8903,"mutability":"mutable","name":"low","nameLocation":"20684:3:31","nodeType":"VariableDeclaration","scope":8946,"src":"20676:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8902,"name":"uint256","nodeType":"ElementaryTypeName","src":"20676:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8905,"mutability":"mutable","name":"high","nameLocation":"20705:4:31","nodeType":"VariableDeclaration","scope":8946,"src":"20697:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8904,"name":"uint256","nodeType":"ElementaryTypeName","src":"20697:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20608:107:31"},"returnParameters":{"id":8909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8946,"src":"20738:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8907,"name":"uint256","nodeType":"ElementaryTypeName","src":"20738:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20737:9:31"},"scope":8962,"src":"20581:433:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8960,"nodeType":"Block","src":"21297:125:31","statements":[{"AST":{"nativeSrc":"21316:100:31","nodeType":"YulBlock","src":"21316:100:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21337:1:31","nodeType":"YulLiteral","src":"21337:1:31","type":"","value":"0"},{"name":"self.slot","nativeSrc":"21340:9:31","nodeType":"YulIdentifier","src":"21340:9:31"}],"functionName":{"name":"mstore","nativeSrc":"21330:6:31","nodeType":"YulIdentifier","src":"21330:6:31"},"nativeSrc":"21330:20:31","nodeType":"YulFunctionCall","src":"21330:20:31"},"nativeSrc":"21330:20:31","nodeType":"YulExpressionStatement","src":"21330:20:31"},{"nativeSrc":"21363:43:31","nodeType":"YulAssignment","src":"21363:43:31","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"21392:1:31","nodeType":"YulLiteral","src":"21392:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"21395:4:31","nodeType":"YulLiteral","src":"21395:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"21382:9:31","nodeType":"YulIdentifier","src":"21382:9:31"},"nativeSrc":"21382:18:31","nodeType":"YulFunctionCall","src":"21382:18:31"},{"name":"pos","nativeSrc":"21402:3:31","nodeType":"YulIdentifier","src":"21402:3:31"}],"functionName":{"name":"add","nativeSrc":"21378:3:31","nodeType":"YulIdentifier","src":"21378:3:31"},"nativeSrc":"21378:28:31","nodeType":"YulFunctionCall","src":"21378:28:31"},"variableNames":[{"name":"result.slot","nativeSrc":"21363:11:31","nodeType":"YulIdentifier","src":"21363:11:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8953,"isOffset":false,"isSlot":false,"src":"21402:3:31","valueSize":1},{"declaration":8957,"isOffset":false,"isSlot":true,"src":"21363:11:31","suffix":"slot","valueSize":1},{"declaration":8951,"isOffset":false,"isSlot":true,"src":"21340:9:31","suffix":"slot","valueSize":1}],"id":8959,"nodeType":"InlineAssembly","src":"21307:109:31"}]},"documentation":{"id":8947,"nodeType":"StructuredDocumentation","src":"21020:132:31","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":8961,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"21166:13:31","nodeType":"FunctionDefinition","parameters":{"id":8954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8951,"mutability":"mutable","name":"self","nameLocation":"21213:4:31","nodeType":"VariableDeclaration","scope":8961,"src":"21189:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8949,"nodeType":"UserDefinedTypeName","pathNode":{"id":8948,"name":"Checkpoint160","nameLocations":["21189:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8447,"src":"21189:13:31"},"referencedDeclaration":8447,"src":"21189:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8950,"nodeType":"ArrayTypeName","src":"21189:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8447_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8953,"mutability":"mutable","name":"pos","nameLocation":"21235:3:31","nodeType":"VariableDeclaration","scope":8961,"src":"21227:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8952,"name":"uint256","nodeType":"ElementaryTypeName","src":"21227:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21179:65:31"},"returnParameters":{"id":8958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8957,"mutability":"mutable","name":"result","nameLocation":"21289:6:31","nodeType":"VariableDeclaration","scope":8961,"src":"21267:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8956,"nodeType":"UserDefinedTypeName","pathNode":{"id":8955,"name":"Checkpoint160","nameLocations":["21267:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8447,"src":"21267:13:31"},"referencedDeclaration":8447,"src":"21267:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8447_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"21266:30:31"},"scope":8962,"src":"21157:265:31","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":8963,"src":"668:20756:31","usedErrors":[7389],"usedEvents":[]}],"src":"201:21224:31"},"id":31},"@openzeppelin/contracts/utils/types/Time.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","exportedSymbols":{"Math":[5472],"SafeCast":[7237],"Time":[9236]},"id":9237,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8964,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:32"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":8966,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9237,"sourceUnit":5473,"src":"130:38:32","symbolAliases":[{"foreign":{"id":8965,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"138:4:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":8968,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9237,"sourceUnit":7238,"src":"169:46:32","symbolAliases":[{"foreign":{"id":8967,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"177:8:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Time","contractDependencies":[],"contractKind":"library","documentation":{"id":8969,"nodeType":"StructuredDocumentation","src":"217:422:32","text":" @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"},"fullyImplemented":true,"id":9236,"linearizedBaseContracts":[9236],"name":"Time","nameLocation":"648:4:32","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8971,"libraryName":{"id":8970,"name":"Time","nameLocations":["665:4:32"],"nodeType":"IdentifierPath","referencedDeclaration":9236,"src":"665:4:32"},"nodeType":"UsingForDirective","src":"659:17:32"},{"body":{"id":8983,"nodeType":"Block","src":"802:58:32","statements":[{"expression":{"arguments":[{"expression":{"id":8979,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"837:5:32","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:9:32","memberName":"timestamp","nodeType":"MemberAccess","src":"837:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8977,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"819:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":8978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"828:8:32","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6227,"src":"819:17:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":8981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8976,"id":8982,"nodeType":"Return","src":"812:41:32"}]},"documentation":{"id":8972,"nodeType":"StructuredDocumentation","src":"682:63:32","text":" @dev Get the block timestamp as a Timepoint."},"id":8984,"implemented":true,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"759:9:32","nodeType":"FunctionDefinition","parameters":{"id":8973,"nodeType":"ParameterList","parameters":[],"src":"768:2:32"},"returnParameters":{"id":8976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8984,"src":"794:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8974,"name":"uint48","nodeType":"ElementaryTypeName","src":"794:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"793:8:32"},"scope":9236,"src":"750:110:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8996,"nodeType":"Block","src":"985:55:32","statements":[{"expression":{"arguments":[{"expression":{"id":8992,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:32","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:6:32","memberName":"number","nodeType":"MemberAccess","src":"1020:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8990,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"1002:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7237_$","typeString":"type(library SafeCast)"}},"id":8991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:8:32","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6227,"src":"1002:17:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":8994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:31:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8989,"id":8995,"nodeType":"Return","src":"995:38:32"}]},"documentation":{"id":8985,"nodeType":"StructuredDocumentation","src":"866:60:32","text":" @dev Get the block number as a Timepoint."},"id":8997,"implemented":true,"kind":"function","modifiers":[],"name":"blockNumber","nameLocation":"940:11:32","nodeType":"FunctionDefinition","parameters":{"id":8986,"nodeType":"ParameterList","parameters":[],"src":"951:2:32"},"returnParameters":{"id":8989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8997,"src":"977:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8987,"name":"uint48","nodeType":"ElementaryTypeName","src":"977:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"976:8:32"},"scope":9236,"src":"931:109:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Time.Delay","id":8999,"name":"Delay","nameLocation":"2377:5:32","nodeType":"UserDefinedValueTypeDefinition","src":"2372:22:32","underlyingType":{"id":8998,"name":"uint112","nodeType":"ElementaryTypeName","src":"2386:7:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"body":{"id":9013,"nodeType":"Block","src":"2572:44:32","statements":[{"expression":{"arguments":[{"id":9010,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9002,"src":"2600:8:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":9008,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"2589:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8999_$","typeString":"type(Time.Delay)"}},"id":9009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2595:4:32","memberName":"wrap","nodeType":"MemberAccess","src":"2589:10:32","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$8999_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":9011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"functionReturnParameters":9007,"id":9012,"nodeType":"Return","src":"2582:27:32"}]},"documentation":{"id":9000,"nodeType":"StructuredDocumentation","src":"2400:103:32","text":" @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"},"id":9014,"implemented":true,"kind":"function","modifiers":[],"name":"toDelay","nameLocation":"2517:7:32","nodeType":"FunctionDefinition","parameters":{"id":9003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9002,"mutability":"mutable","name":"duration","nameLocation":"2532:8:32","nodeType":"VariableDeclaration","scope":9014,"src":"2525:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9001,"name":"uint32","nodeType":"ElementaryTypeName","src":"2525:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2524:17:32"},"returnParameters":{"id":9007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9014,"src":"2565:5:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"},"typeName":{"id":9005,"nodeType":"UserDefinedTypeName","pathNode":{"id":9004,"name":"Delay","nameLocations":["2565:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8999,"src":"2565:5:32"},"referencedDeclaration":8999,"src":"2565:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"2564:7:32"},"scope":9236,"src":"2508:108:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9051,"nodeType":"Block","src":"3016:159:32","statements":[{"expression":{"id":9036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":9029,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9023,"src":"3027:11:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9030,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9025,"src":"3040:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9031,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9027,"src":"3052:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9032,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3026:33:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9033,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9018,"src":"3062:4:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"id":9034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3067:6:32","memberName":"unpack","nodeType":"MemberAccess","referencedDeclaration":9197,"src":"3062:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$8999_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$8999_$","typeString":"function (Time.Delay) pure returns (uint32,uint32,uint48)"}},"id":9035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"src":"3026:49:32","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9037,"nodeType":"ExpressionStatement","src":"3026:49:32"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9038,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9027,"src":"3092:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9039,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9020,"src":"3102:9:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3092:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":9045,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9023,"src":"3136:11:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9046,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9025,"src":"3149:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9047,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9027,"src":"3161:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3135:33:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3092:76:32","trueExpression":{"components":[{"id":9041,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9025,"src":"3115:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":9042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3127:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":9043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3130:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":9044,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3114:18:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(uint32,int_const 0,int_const 0)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9028,"id":9050,"nodeType":"Return","src":"3085:83:32"}]},"documentation":{"id":9015,"nodeType":"StructuredDocumentation","src":"2622:241:32","text":" @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."},"id":9052,"implemented":true,"kind":"function","modifiers":[],"name":"_getFullAt","nameLocation":"2877:10:32","nodeType":"FunctionDefinition","parameters":{"id":9021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9018,"mutability":"mutable","name":"self","nameLocation":"2903:4:32","nodeType":"VariableDeclaration","scope":9052,"src":"2897:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"},"typeName":{"id":9017,"nodeType":"UserDefinedTypeName","pathNode":{"id":9016,"name":"Delay","nameLocations":["2897:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8999,"src":"2897:5:32"},"referencedDeclaration":8999,"src":"2897:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9020,"mutability":"mutable","name":"timepoint","nameLocation":"2924:9:32","nodeType":"VariableDeclaration","scope":9052,"src":"2917:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9019,"name":"uint48","nodeType":"ElementaryTypeName","src":"2917:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2887:52:32"},"returnParameters":{"id":9028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9023,"mutability":"mutable","name":"valueBefore","nameLocation":"2969:11:32","nodeType":"VariableDeclaration","scope":9052,"src":"2962:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9022,"name":"uint32","nodeType":"ElementaryTypeName","src":"2962:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9025,"mutability":"mutable","name":"valueAfter","nameLocation":"2989:10:32","nodeType":"VariableDeclaration","scope":9052,"src":"2982:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9024,"name":"uint32","nodeType":"ElementaryTypeName","src":"2982:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9027,"mutability":"mutable","name":"effect","nameLocation":"3008:6:32","nodeType":"VariableDeclaration","scope":9052,"src":"3001:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9026,"name":"uint48","nodeType":"ElementaryTypeName","src":"3001:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2961:54:32"},"scope":9236,"src":"2868:307:32","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9071,"nodeType":"Block","src":"3499:53:32","statements":[{"expression":{"arguments":[{"id":9066,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9056,"src":"3527:4:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9067,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8984,"src":"3533:9:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":9068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3533:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9065,"name":"_getFullAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9052,"src":"3516:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$8999_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"}},"id":9069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3516:29:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9064,"id":9070,"nodeType":"Return","src":"3509:36:32"}]},"documentation":{"id":9053,"nodeType":"StructuredDocumentation","src":"3181:207:32","text":" @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."},"id":9072,"implemented":true,"kind":"function","modifiers":[],"name":"getFull","nameLocation":"3402:7:32","nodeType":"FunctionDefinition","parameters":{"id":9057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9056,"mutability":"mutable","name":"self","nameLocation":"3416:4:32","nodeType":"VariableDeclaration","scope":9072,"src":"3410:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"},"typeName":{"id":9055,"nodeType":"UserDefinedTypeName","pathNode":{"id":9054,"name":"Delay","nameLocations":["3410:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8999,"src":"3410:5:32"},"referencedDeclaration":8999,"src":"3410:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3409:12:32"},"returnParameters":{"id":9064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9059,"mutability":"mutable","name":"valueBefore","nameLocation":"3452:11:32","nodeType":"VariableDeclaration","scope":9072,"src":"3445:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9058,"name":"uint32","nodeType":"ElementaryTypeName","src":"3445:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9061,"mutability":"mutable","name":"valueAfter","nameLocation":"3472:10:32","nodeType":"VariableDeclaration","scope":9072,"src":"3465:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9060,"name":"uint32","nodeType":"ElementaryTypeName","src":"3465:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9063,"mutability":"mutable","name":"effect","nameLocation":"3491:6:32","nodeType":"VariableDeclaration","scope":9072,"src":"3484:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9062,"name":"uint48","nodeType":"ElementaryTypeName","src":"3484:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3444:54:32"},"scope":9236,"src":"3393:159:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9089,"nodeType":"Block","src":"3665:74:32","statements":[{"assignments":[9082,null,null],"declarations":[{"constant":false,"id":9082,"mutability":"mutable","name":"delay","nameLocation":"3683:5:32","nodeType":"VariableDeclaration","scope":9089,"src":"3676:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9081,"name":"uint32","nodeType":"ElementaryTypeName","src":"3676:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null,null],"id":9086,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9083,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9076,"src":"3696:4:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3701:7:32","memberName":"getFull","nodeType":"MemberAccess","referencedDeclaration":9072,"src":"3696:12:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$8999_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$8999_$","typeString":"function (Time.Delay) view returns (uint32,uint32,uint48)"}},"id":9085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3696:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"3675:35:32"},{"expression":{"id":9087,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9082,"src":"3727:5:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":9080,"id":9088,"nodeType":"Return","src":"3720:12:32"}]},"documentation":{"id":9073,"nodeType":"StructuredDocumentation","src":"3558:46:32","text":" @dev Get the current value."},"id":9090,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3618:3:32","nodeType":"FunctionDefinition","parameters":{"id":9077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9076,"mutability":"mutable","name":"self","nameLocation":"3628:4:32","nodeType":"VariableDeclaration","scope":9090,"src":"3622:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"},"typeName":{"id":9075,"nodeType":"UserDefinedTypeName","pathNode":{"id":9074,"name":"Delay","nameLocations":["3622:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8999,"src":"3622:5:32"},"referencedDeclaration":8999,"src":"3622:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3621:12:32"},"returnParameters":{"id":9080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9090,"src":"3657:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9078,"name":"uint32","nodeType":"ElementaryTypeName","src":"3657:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3656:8:32"},"scope":9236,"src":"3609:130:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9145,"nodeType":"Block","src":"4189:234:32","statements":[{"assignments":[9107],"declarations":[{"constant":false,"id":9107,"mutability":"mutable","name":"value","nameLocation":"4206:5:32","nodeType":"VariableDeclaration","scope":9145,"src":"4199:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9106,"name":"uint32","nodeType":"ElementaryTypeName","src":"4199:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":9111,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9108,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9094,"src":"4214:4:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"id":9109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4219:3:32","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":9090,"src":"4214:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$8999_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$8999_$","typeString":"function (Time.Delay) view returns (uint32)"}},"id":9110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4199:25:32"},{"assignments":[9113],"declarations":[{"constant":false,"id":9113,"mutability":"mutable","name":"setback","nameLocation":"4241:7:32","nodeType":"VariableDeclaration","scope":9145,"src":"4234:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9112,"name":"uint32","nodeType":"ElementaryTypeName","src":"4234:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":9129,"initialValue":{"arguments":[{"arguments":[{"id":9118,"name":"minSetback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9098,"src":"4267:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":9121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9107,"src":"4279:5:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9120,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9096,"src":"4287:8:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4279:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4317:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4279:39:32","trueExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":9124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9107,"src":"4298:5:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9123,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9096,"src":"4306:8:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4298:16:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":9116,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"4258:4:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5472_$","typeString":"type(library Math)"}},"id":9117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4263:3:32","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":4082,"src":"4258:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4258:61:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4251:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9114,"name":"uint32","nodeType":"ElementaryTypeName","src":"4251:6:32","typeDescriptions":{}}},"id":9128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4251:69:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4234:86:32"},{"expression":{"id":9135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9130,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9104,"src":"4330:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9131,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8984,"src":"4339:9:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":9132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4339:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9133,"name":"setback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9113,"src":"4353:7:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4339:21:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4330:30:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":9136,"nodeType":"ExpressionStatement","src":"4330:30:32"},{"expression":{"components":[{"arguments":[{"id":9138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9107,"src":"4383:5:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9139,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9096,"src":"4390:8:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9140,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9104,"src":"4400:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9137,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"4378:4:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$8999_$","typeString":"function (uint32,uint32,uint48) pure returns (Time.Delay)"}},"id":9141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4378:29:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},{"id":9142,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9104,"src":"4409:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4377:39:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Delay_$8999_$_t_uint48_$","typeString":"tuple(Time.Delay,uint48)"}},"functionReturnParameters":9105,"id":9144,"nodeType":"Return","src":"4370:46:32"}]},"documentation":{"id":9091,"nodeType":"StructuredDocumentation","src":"3745:283:32","text":" @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."},"id":9146,"implemented":true,"kind":"function","modifiers":[],"name":"withUpdate","nameLocation":"4042:10:32","nodeType":"FunctionDefinition","parameters":{"id":9099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9094,"mutability":"mutable","name":"self","nameLocation":"4068:4:32","nodeType":"VariableDeclaration","scope":9146,"src":"4062:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"},"typeName":{"id":9093,"nodeType":"UserDefinedTypeName","pathNode":{"id":9092,"name":"Delay","nameLocations":["4062:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8999,"src":"4062:5:32"},"referencedDeclaration":8999,"src":"4062:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9096,"mutability":"mutable","name":"newValue","nameLocation":"4089:8:32","nodeType":"VariableDeclaration","scope":9146,"src":"4082:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9095,"name":"uint32","nodeType":"ElementaryTypeName","src":"4082:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9098,"mutability":"mutable","name":"minSetback","nameLocation":"4114:10:32","nodeType":"VariableDeclaration","scope":9146,"src":"4107:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9097,"name":"uint32","nodeType":"ElementaryTypeName","src":"4107:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4052:78:32"},"returnParameters":{"id":9105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9102,"mutability":"mutable","name":"updatedDelay","nameLocation":"4160:12:32","nodeType":"VariableDeclaration","scope":9146,"src":"4154:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"},"typeName":{"id":9101,"nodeType":"UserDefinedTypeName","pathNode":{"id":9100,"name":"Delay","nameLocations":["4154:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8999,"src":"4154:5:32"},"referencedDeclaration":8999,"src":"4154:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9104,"mutability":"mutable","name":"effect","nameLocation":"4181:6:32","nodeType":"VariableDeclaration","scope":9146,"src":"4174:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9103,"name":"uint48","nodeType":"ElementaryTypeName","src":"4174:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4153:35:32"},"scope":9236,"src":"4033:390:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9196,"nodeType":"Block","src":"4656:212:32","statements":[{"assignments":[9160],"declarations":[{"constant":false,"id":9160,"mutability":"mutable","name":"raw","nameLocation":"4674:3:32","nodeType":"VariableDeclaration","scope":9196,"src":"4666:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9159,"name":"uint112","nodeType":"ElementaryTypeName","src":"4666:7:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"id":9165,"initialValue":{"arguments":[{"id":9163,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9150,"src":"4693:4:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}],"expression":{"id":9161,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"4680:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8999_$","typeString":"type(Time.Delay)"}},"id":9162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4686:6:32","memberName":"unwrap","nodeType":"MemberAccess","src":"4680:12:32","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$8999_$returns$_t_uint112_$","typeString":"function (Time.Delay) pure returns (uint112)"}},"id":9164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"4666:32:32"},{"expression":{"id":9171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9166,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9155,"src":"4709:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9169,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9160,"src":"4729:3:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4722:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9167,"name":"uint32","nodeType":"ElementaryTypeName","src":"4722:6:32","typeDescriptions":{}}},"id":9170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4722:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4709:24:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":9172,"nodeType":"ExpressionStatement","src":"4709:24:32"},{"expression":{"id":9180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9173,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9153,"src":"4743:11:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9176,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9160,"src":"4764:3:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":9177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4771:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4764:9:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4757:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9174,"name":"uint32","nodeType":"ElementaryTypeName","src":"4757:6:32","typeDescriptions":{}}},"id":9179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4757:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4743:31:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":9181,"nodeType":"ExpressionStatement","src":"4743:31:32"},{"expression":{"id":9189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9182,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9157,"src":"4784:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9185,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9160,"src":"4800:3:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":9186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4807:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4800:9:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4793:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":9183,"name":"uint48","nodeType":"ElementaryTypeName","src":"4793:6:32","typeDescriptions":{}}},"id":9188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4793:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4784:26:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":9190,"nodeType":"ExpressionStatement","src":"4784:26:32"},{"expression":{"components":[{"id":9191,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9153,"src":"4829:11:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9192,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9155,"src":"4842:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9193,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9157,"src":"4854:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4828:33:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9158,"id":9195,"nodeType":"Return","src":"4821:40:32"}]},"documentation":{"id":9147,"nodeType":"StructuredDocumentation","src":"4429:117:32","text":" @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."},"id":9197,"implemented":true,"kind":"function","modifiers":[],"name":"unpack","nameLocation":"4560:6:32","nodeType":"FunctionDefinition","parameters":{"id":9151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9150,"mutability":"mutable","name":"self","nameLocation":"4573:4:32","nodeType":"VariableDeclaration","scope":9197,"src":"4567:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"},"typeName":{"id":9149,"nodeType":"UserDefinedTypeName","pathNode":{"id":9148,"name":"Delay","nameLocations":["4567:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8999,"src":"4567:5:32"},"referencedDeclaration":8999,"src":"4567:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4566:12:32"},"returnParameters":{"id":9158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9153,"mutability":"mutable","name":"valueBefore","nameLocation":"4609:11:32","nodeType":"VariableDeclaration","scope":9197,"src":"4602:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9152,"name":"uint32","nodeType":"ElementaryTypeName","src":"4602:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9155,"mutability":"mutable","name":"valueAfter","nameLocation":"4629:10:32","nodeType":"VariableDeclaration","scope":9197,"src":"4622:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9154,"name":"uint32","nodeType":"ElementaryTypeName","src":"4622:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9157,"mutability":"mutable","name":"effect","nameLocation":"4648:6:32","nodeType":"VariableDeclaration","scope":9197,"src":"4641:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9156,"name":"uint48","nodeType":"ElementaryTypeName","src":"4641:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4601:54:32"},"scope":9236,"src":"4551:317:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9234,"nodeType":"Block","src":"5041:112:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9214,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9204,"src":"5078:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5070:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9212,"name":"uint112","nodeType":"ElementaryTypeName","src":"5070:7:32","typeDescriptions":{}}},"id":9215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5070:15:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":9216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5070:21:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":9218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5069:23:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9221,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9200,"src":"5104:11:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":9220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5096:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9219,"name":"uint112","nodeType":"ElementaryTypeName","src":"5096:7:32","typeDescriptions":{}}},"id":9222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":9223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5120:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5096:26:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":9225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5095:28:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5069:54:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":9229,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9202,"src":"5134:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":9228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5126:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9227,"name":"uint112","nodeType":"ElementaryTypeName","src":"5126:7:32","typeDescriptions":{}}},"id":9230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5126:19:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5069:76:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":9210,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"5058:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8999_$","typeString":"type(Time.Delay)"}},"id":9211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5064:4:32","memberName":"wrap","nodeType":"MemberAccess","src":"5058:10:32","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$8999_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":9232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5058:88:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"functionReturnParameters":9209,"id":9233,"nodeType":"Return","src":"5051:95:32"}]},"documentation":{"id":9198,"nodeType":"StructuredDocumentation","src":"4874:64:32","text":" @dev pack the components into a Delay object."},"id":9235,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"4952:4:32","nodeType":"FunctionDefinition","parameters":{"id":9205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9200,"mutability":"mutable","name":"valueBefore","nameLocation":"4964:11:32","nodeType":"VariableDeclaration","scope":9235,"src":"4957:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9199,"name":"uint32","nodeType":"ElementaryTypeName","src":"4957:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9202,"mutability":"mutable","name":"valueAfter","nameLocation":"4984:10:32","nodeType":"VariableDeclaration","scope":9235,"src":"4977:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9201,"name":"uint32","nodeType":"ElementaryTypeName","src":"4977:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9204,"mutability":"mutable","name":"effect","nameLocation":"5003:6:32","nodeType":"VariableDeclaration","scope":9235,"src":"4996:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9203,"name":"uint48","nodeType":"ElementaryTypeName","src":"4996:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4956:54:32"},"returnParameters":{"id":9209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9235,"src":"5034:5:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"},"typeName":{"id":9207,"nodeType":"UserDefinedTypeName","pathNode":{"id":9206,"name":"Delay","nameLocations":["5034:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8999,"src":"5034:5:32"},"referencedDeclaration":8999,"src":"5034:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8999","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"5033:7:32"},"scope":9236,"src":"4943:210:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9237,"src":"640:4515:32","usedErrors":[],"usedEvents":[]}],"src":"104:5052:32"},"id":32},"contracts/trinostoken.sol":{"ast":{"absolutePath":"contracts/trinostoken.sol","exportedSymbols":{"Checkpoints":[8962],"Context":[2319],"ECDSA":[3565],"EIP712":[3792],"ERC20":[1539],"ERC20Burnable":[1663],"ERC20FlashMint":[1907],"ERC20Pausable":[1941],"ERC20Permit":[2095],"ERC20Votes":[2227],"IERC20":[1617],"IERC20Errors":[929],"IERC20Metadata":[2253],"IERC20Permit":[2289],"IERC3156FlashBorrower":[797],"IERC3156FlashLender":[836],"Nonces":[2387],"Ownable":[147],"Pausable":[2556],"TrinosTOKEN":[9403],"Votes":[777]},"id":9404,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9238,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"83:24:33"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9239,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9404,"sourceUnit":1540,"src":"111:55:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":9240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9404,"sourceUnit":1664,"src":"168:74:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":9241,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9404,"sourceUnit":1942,"src":"244:74:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9404,"sourceUnit":148,"src":"320:52:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":9243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9404,"sourceUnit":2096,"src":"374:72:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":9244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9404,"sourceUnit":2228,"src":"448:71:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol","id":9245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9404,"sourceUnit":1908,"src":"521:75:33","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9247,"name":"ERC20","nameLocations":["673:5:33"],"nodeType":"IdentifierPath","referencedDeclaration":1539,"src":"673:5:33"},"id":9248,"nodeType":"InheritanceSpecifier","src":"673:5:33"},{"baseName":{"id":9249,"name":"ERC20Burnable","nameLocations":["680:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":1663,"src":"680:13:33"},"id":9250,"nodeType":"InheritanceSpecifier","src":"680:13:33"},{"baseName":{"id":9251,"name":"ERC20Pausable","nameLocations":["695:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":1941,"src":"695:13:33"},"id":9252,"nodeType":"InheritanceSpecifier","src":"695:13:33"},{"baseName":{"id":9253,"name":"Ownable","nameLocations":["710:7:33"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"710:7:33"},"id":9254,"nodeType":"InheritanceSpecifier","src":"710:7:33"},{"baseName":{"id":9255,"name":"ERC20Permit","nameLocations":["719:11:33"],"nodeType":"IdentifierPath","referencedDeclaration":2095,"src":"719:11:33"},"id":9256,"nodeType":"InheritanceSpecifier","src":"719:11:33"},{"baseName":{"id":9257,"name":"ERC20Votes","nameLocations":["732:10:33"],"nodeType":"IdentifierPath","referencedDeclaration":2227,"src":"732:10:33"},"id":9258,"nodeType":"InheritanceSpecifier","src":"732:10:33"},{"baseName":{"id":9259,"name":"ERC20FlashMint","nameLocations":["744:14:33"],"nodeType":"IdentifierPath","referencedDeclaration":1907,"src":"744:14:33"},"id":9260,"nodeType":"InheritanceSpecifier","src":"744:14:33"}],"canonicalName":"TrinosTOKEN","contractDependencies":[],"contractKind":"contract","documentation":{"id":9246,"nodeType":"StructuredDocumentation","src":"600:49:33","text":"@custom:security-contact jos89.24@gmail.com"},"fullyImplemented":true,"id":9403,"internalFunctionIDs":{"754":1,"768":2},"linearizedBaseContracts":[9403,1907,836,2227,777,872,230,887,2095,2387,3792,861,2289,147,1941,2556,1663,1539,929,2253,1617,2319],"name":"TrinosTOKEN","nameLocation":"658:11:33","nodeType":"ContractDefinition","nodes":[{"body":{"id":9287,"nodeType":"Block","src":"937:71:33","statements":[{"expression":{"arguments":[{"id":9278,"name":"initialMintAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9264,"src":"954:18:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313030303030","id":9279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"974:6:33","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"983:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9281,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"989:8:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":9282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"989:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"983:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"974:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9277,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"948:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"948:52:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9286,"nodeType":"ExpressionStatement","src":"948:52:33"}]},"id":9288,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"5472696e6f73546f6b656e","id":9267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"843:13:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_bad5f43cafd5036a397c1018f89bdf92dd0b9b777b9e6937cca3315fd0850d3c","typeString":"literal_string \"TrinosToken\""},"value":"TrinosToken"},{"hexValue":"54524e","id":9268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"858:5:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8e7c40909660fa77b6601e006b7617fa118885ccefd214a0d09db1df1657c51","typeString":"literal_string \"TRN\""},"value":"TRN"}],"id":9269,"kind":"baseConstructorSpecifier","modifierName":{"id":9266,"name":"ERC20","nameLocations":["837:5:33"],"nodeType":"IdentifierPath","referencedDeclaration":1539,"src":"837:5:33"},"nodeType":"ModifierInvocation","src":"837:27:33"},{"arguments":[{"id":9271,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9262,"src":"882:12:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9272,"kind":"baseConstructorSpecifier","modifierName":{"id":9270,"name":"Ownable","nameLocations":["874:7:33"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"874:7:33"},"nodeType":"ModifierInvocation","src":"874:21:33"},{"arguments":[{"hexValue":"7472696e6f73746f6b656e","id":9274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"917:13:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae9d1da79eaed3cedfabda1195b9558d52942ed1d70667da7ea2fb851807138e","typeString":"literal_string \"trinostoken\""},"value":"trinostoken"}],"id":9275,"kind":"baseConstructorSpecifier","modifierName":{"id":9273,"name":"ERC20Permit","nameLocations":["905:11:33"],"nodeType":"IdentifierPath","referencedDeclaration":2095,"src":"905:11:33"},"nodeType":"ModifierInvocation","src":"905:26:33"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9262,"mutability":"mutable","name":"initialOwner","nameLocation":"786:12:33","nodeType":"VariableDeclaration","scope":9288,"src":"778:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9261,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9264,"mutability":"mutable","name":"initialMintAddress","nameLocation":"808:18:33","nodeType":"VariableDeclaration","scope":9288,"src":"800:26:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9263,"name":"address","nodeType":"ElementaryTypeName","src":"800:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:50:33"},"returnParameters":{"id":9276,"nodeType":"ParameterList","parameters":[],"src":"937:0:33"},"scope":9403,"src":"766:242:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9296,"nodeType":"Block","src":"1050:27:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9293,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"1061:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1061:8:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9295,"nodeType":"ExpressionStatement","src":"1061:8:33"}]},"functionSelector":"8456cb59","id":9297,"implemented":true,"kind":"function","modifiers":[{"id":9291,"kind":"modifierInvocation","modifierName":{"id":9290,"name":"onlyOwner","nameLocations":["1040:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1040:9:33"},"nodeType":"ModifierInvocation","src":"1040:9:33"}],"name":"pause","nameLocation":"1025:5:33","nodeType":"FunctionDefinition","parameters":{"id":9289,"nodeType":"ParameterList","parameters":[],"src":"1030:2:33"},"returnParameters":{"id":9292,"nodeType":"ParameterList","parameters":[],"src":"1050:0:33"},"scope":9403,"src":"1016:61:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9305,"nodeType":"Block","src":"1121:29:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9302,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"1132:8:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1132:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9304,"nodeType":"ExpressionStatement","src":"1132:10:33"}]},"functionSelector":"3f4ba83a","id":9306,"implemented":true,"kind":"function","modifiers":[{"id":9300,"kind":"modifierInvocation","modifierName":{"id":9299,"name":"onlyOwner","nameLocations":["1111:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1111:9:33"},"nodeType":"ModifierInvocation","src":"1111:9:33"}],"name":"unpause","nameLocation":"1094:7:33","nodeType":"FunctionDefinition","parameters":{"id":9298,"nodeType":"ParameterList","parameters":[],"src":"1101:2:33"},"returnParameters":{"id":9301,"nodeType":"ParameterList","parameters":[],"src":"1121:0:33"},"scope":9403,"src":"1085:65:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9320,"nodeType":"Block","src":"1217:36:33","statements":[{"expression":{"arguments":[{"id":9316,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9308,"src":"1234:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9317,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9310,"src":"1238:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9315,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"1228:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1228:17:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9319,"nodeType":"ExpressionStatement","src":"1228:17:33"}]},"functionSelector":"40c10f19","id":9321,"implemented":true,"kind":"function","modifiers":[{"id":9313,"kind":"modifierInvocation","modifierName":{"id":9312,"name":"onlyOwner","nameLocations":["1207:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1207:9:33"},"nodeType":"ModifierInvocation","src":"1207:9:33"}],"name":"mint","nameLocation":"1167:4:33","nodeType":"FunctionDefinition","parameters":{"id":9311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9308,"mutability":"mutable","name":"to","nameLocation":"1180:2:33","nodeType":"VariableDeclaration","scope":9321,"src":"1172:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9307,"name":"address","nodeType":"ElementaryTypeName","src":"1172:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9310,"mutability":"mutable","name":"amount","nameLocation":"1192:6:33","nodeType":"VariableDeclaration","scope":9321,"src":"1184:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1184:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1171:28:33"},"returnParameters":{"id":9314,"nodeType":"ParameterList","parameters":[],"src":"1217:0:33"},"scope":9403,"src":"1158:95:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[299],"body":{"id":9333,"nodeType":"Block","src":"1316:49:33","statements":[{"expression":{"arguments":[{"expression":{"id":9329,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1341:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1347:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"1341:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1334:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":9327,"name":"uint48","nodeType":"ElementaryTypeName","src":"1334:6:33","typeDescriptions":{}}},"id":9331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":9326,"id":9332,"nodeType":"Return","src":"1327:30:33"}]},"functionSelector":"91ddadf4","id":9334,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"1270:5:33","nodeType":"FunctionDefinition","overrides":{"id":9323,"nodeType":"OverrideSpecifier","overrides":[],"src":"1290:8:33"},"parameters":{"id":9322,"nodeType":"ParameterList","parameters":[],"src":"1275:2:33"},"returnParameters":{"id":9326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9334,"src":"1308:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9324,"name":"uint48","nodeType":"ElementaryTypeName","src":"1308:6:33","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1307:8:33"},"scope":9403,"src":"1261:104:33","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[319],"body":{"id":9342,"nodeType":"Block","src":"1494:42:33","statements":[{"expression":{"hexValue":"6d6f64653d74696d657374616d70","id":9340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1512:16:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5b078ad22f37ec6a1ef7bb7557a33caf5438015a34794acb2076082df8e563f","typeString":"literal_string \"mode=timestamp\""},"value":"mode=timestamp"},"functionReturnParameters":9339,"id":9341,"nodeType":"Return","src":"1505:23:33"}]},"functionSelector":"4bf5d7e9","id":9343,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"1436:10:33","nodeType":"FunctionDefinition","overrides":{"id":9336,"nodeType":"OverrideSpecifier","overrides":[],"src":"1461:8:33"},"parameters":{"id":9335,"nodeType":"ParameterList","parameters":[],"src":"1446:2:33"},"returnParameters":{"id":9339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9343,"src":"1479:13:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9337,"name":"string","nodeType":"ElementaryTypeName","src":"1479:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1478:15:33"},"scope":9403,"src":"1427:109:33","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[1346,1940,2182],"body":{"id":9364,"nodeType":"Block","src":"1747:49:33","statements":[{"expression":{"arguments":[{"id":9359,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9345,"src":"1772:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9360,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"1778:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9349,"src":"1782:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9356,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1758:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TrinosTOKEN_$9403_$","typeString":"type(contract super TrinosTOKEN)"}},"id":9358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1764:7:33","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":2182,"src":"1758:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1758:30:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9363,"nodeType":"ExpressionStatement","src":"1758:30:33"}]},"id":9365,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1623:7:33","nodeType":"FunctionDefinition","overrides":{"id":9354,"nodeType":"OverrideSpecifier","overrides":[{"id":9351,"name":"ERC20","nameLocations":["1708:5:33"],"nodeType":"IdentifierPath","referencedDeclaration":1539,"src":"1708:5:33"},{"id":9352,"name":"ERC20Pausable","nameLocations":["1715:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":1941,"src":"1715:13:33"},{"id":9353,"name":"ERC20Votes","nameLocations":["1730:10:33"],"nodeType":"IdentifierPath","referencedDeclaration":2227,"src":"1730:10:33"}],"src":"1699:42:33"},"parameters":{"id":9350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9345,"mutability":"mutable","name":"from","nameLocation":"1639:4:33","nodeType":"VariableDeclaration","scope":9365,"src":"1631:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9344,"name":"address","nodeType":"ElementaryTypeName","src":"1631:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9347,"mutability":"mutable","name":"to","nameLocation":"1653:2:33","nodeType":"VariableDeclaration","scope":9365,"src":"1645:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9346,"name":"address","nodeType":"ElementaryTypeName","src":"1645:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9349,"mutability":"mutable","name":"value","nameLocation":"1665:5:33","nodeType":"VariableDeclaration","scope":9365,"src":"1657:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1657:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1630:41:33"},"returnParameters":{"id":9355,"nodeType":"ParameterList","parameters":[],"src":"1747:0:33"},"scope":9403,"src":"1614:182:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2084,2346],"body":{"id":9380,"nodeType":"Block","src":"1936:45:33","statements":[{"expression":{"arguments":[{"id":9377,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9367,"src":"1967:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9375,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1954:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TrinosTOKEN_$9403_$","typeString":"type(contract super TrinosTOKEN)"}},"id":9376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:33","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"1954:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1954:19:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9374,"id":9379,"nodeType":"Return","src":"1947:26:33"}]},"functionSelector":"7ecebe00","id":9381,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1813:6:33","nodeType":"FunctionDefinition","overrides":{"id":9371,"nodeType":"OverrideSpecifier","overrides":[{"id":9369,"name":"ERC20Permit","nameLocations":["1883:11:33"],"nodeType":"IdentifierPath","referencedDeclaration":2095,"src":"1883:11:33"},{"id":9370,"name":"Nonces","nameLocations":["1896:6:33"],"nodeType":"IdentifierPath","referencedDeclaration":2387,"src":"1896:6:33"}],"src":"1874:29:33"},"parameters":{"id":9368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9367,"mutability":"mutable","name":"owner","nameLocation":"1828:5:33","nodeType":"VariableDeclaration","scope":9381,"src":"1820:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9366,"name":"address","nodeType":"ElementaryTypeName","src":"1820:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1819:15:33"},"returnParameters":{"id":9374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9381,"src":"1922:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1922:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1921:9:33"},"scope":9403,"src":"1804:177:33","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9392,"nodeType":"Block","src":"2056:40:33","statements":[{"expression":{"arguments":[{"id":9389,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9383,"src":"2080:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9388,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"2070:9:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2070:18:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9387,"id":9391,"nodeType":"Return","src":"2063:25:33"}]},"functionSelector":"f8b2cb4f","id":9393,"implemented":true,"kind":"function","modifiers":[],"name":"getBalance","nameLocation":"1998:10:33","nodeType":"FunctionDefinition","parameters":{"id":9384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9383,"mutability":"mutable","name":"account","nameLocation":"2017:7:33","nodeType":"VariableDeclaration","scope":9393,"src":"2009:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9382,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:17:33"},"returnParameters":{"id":9387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9393,"src":"2047:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2047:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2046:9:33"},"scope":9403,"src":"1989:107:33","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9401,"nodeType":"Block","src":"2161:35:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9398,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"2175:11:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9397,"id":9400,"nodeType":"Return","src":"2168:20:33"}]},"functionSelector":"601e2603","id":9402,"implemented":true,"kind":"function","modifiers":[],"name":"totalMintedSupply","nameLocation":"2111:17:33","nodeType":"FunctionDefinition","parameters":{"id":9394,"nodeType":"ParameterList","parameters":[],"src":"2128:2:33"},"returnParameters":{"id":9397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9402,"src":"2152:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:9:33"},"scope":9403,"src":"2102:94:33","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9404,"src":"649:1554:33","usedErrors":[13,18,155,281,288,899,904,909,918,923,928,1686,1691,1696,1972,1979,2115,2329,2461,2464,2570,2572,3228,3233,3238,5482,7389],"usedEvents":[24,164,173,841,1551,1560,2453,2458]}],"src":"83:2120:33"},"id":33}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\",\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/Votes.sol":{"Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_update}).\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/Votes.sol\":\"Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x9128a324d265044430e5fa4a6a2853e92d6a62a2a5a69c2fc623f5b7b8cf3f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1122c2c8c19d717e45a9c00ccedd9fcd3b61eab6a291469a3d6200671d3e6f25\",\"dweb:/ipfs/QmYEjVC6ttBK1YSECdJmH69LtD2mahbVW27JLv6TUdWKiU\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"IERC3156FlashBorrower":{"abi":[{"inputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onFlashLoan","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onFlashLoan(address,address,uint256,uint256,bytes)":"23e30c8b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":\"IERC3156FlashBorrower\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x0b1459615b9b47c2a4eec8e72f23ccc601f1d711f679a1c06b3390459021a341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aaf6209fb90f02ebd1c9603568f5e6da5fa2f896820ba66b5041eeed993dc4ce\",\"dweb:/ipfs/QmYsSH2PSGbTXMVXXxhh9AXzfHPSz2j42REvds6xjU7WmR\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"IERC3156FlashLender":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"flashFee(address,uint256)\":{\"details\":\"The fee to be charged for a given loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` to be charged for the loan, on top of the returned principal.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Initiate a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"token\":\"The loan currency.\"}},\"maxFlashLoan(address)\":{\"details\":\"The amount of currency available to be lended.\",\"params\":{\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":\"IERC3156FlashLender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x0b1459615b9b47c2a4eec8e72f23ccc601f1d711f679a1c06b3390459021a341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aaf6209fb90f02ebd1c9603568f5e6da5fa2f896820ba66b5041eeed993dc4ce\",\"dweb:/ipfs/QmYsSH2PSGbTXMVXXxhh9AXzfHPSz2j42REvds6xjU7WmR\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x5d19ea24c555cf6a5dbafea9fac57887cc3e72154f3ee8e0a2bf67971811c14b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3af1364c971d94bccf3efcc509b2c5c03fe1c69ea9945ba29a96998bfd6c593e\",\"dweb:/ipfs/Qmczq52prNGX5tHuk8aENZsuYgxTeA6YVMHV7yMTKeFjbr\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol":{"ERC20FlashMint":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"maxLoan","type":"uint256"}],"name":"ERC3156ExceededMaxLoan","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC3156InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"ERC3156UnsupportedToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLoan\",\"type\":\"uint256\"}],\"name\":\"ERC3156ExceededMaxLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC3156InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ERC3156UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-3156 Flash loans extension, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]. Adds the {flashLoan} method, which provides flash loan support at the token level. By default there is no fee, but this can be changed by overriding {flashFee}. NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions, {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend overriding {maxFlashLoan} so that it correctly reflects the supply cap.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC3156ExceededMaxLoan(uint256)\":[{\"details\":\"The requested loan exceeds the max loan value for `token`.\"}],\"ERC3156InvalidReceiver(address)\":[{\"details\":\"The receiver of a flashloan is not a valid {IERC3156FlashBorrower-onFlashLoan} implementer.\"}],\"ERC3156UnsupportedToken(address)\":[{\"details\":\"The loan token is not valid.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"token\":\"The token to be flash loaned.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned. NOTE: This function does not consider any form of supply cap, so in case it's used in a token with a cap like {ERC20Capped}, make sure to override this function to integrate the cap instead of `type(uint256).max`.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":\"ERC20FlashMint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x0b1459615b9b47c2a4eec8e72f23ccc601f1d711f679a1c06b3390459021a341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aaf6209fb90f02ebd1c9603568f5e6da5fa2f896820ba66b5041eeed993dc4ce\",\"dweb:/ipfs/QmYsSH2PSGbTXMVXXxhh9AXzfHPSz2j42REvds6xjU7WmR\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x5d19ea24c555cf6a5dbafea9fac57887cc3e72154f3ee8e0a2bf67971811c14b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3af1364c971d94bccf3efcc509b2c5c03fe1c69ea9945ba29a96998bfd6c593e\",\"dweb:/ipfs/Qmczq52prNGX5tHuk8aENZsuYgxTeA6YVMHV7yMTKeFjbr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":{\"keccak256\":\"0x4d43ed4b9ff9e4c671274976d59a58dbcc7b69bd7ac11b1710f5b7607cf15b74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b47b42998f675cb6a51f2e74ef5906a6fa63ec6718f3fd56ee035d6f77143f9\",\"dweb:/ipfs/QmREnAXqPJBvAwfWfDzaFhNfSRWF4Jdy9ZrpHLw1KdQweY\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1. NOTE: This contract does not provide interface compatibility with Compound's COMP token. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x9128a324d265044430e5fa4a6a2853e92d6a62a2a5a69c2fc623f5b7b8cf3f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1122c2c8c19d717e45a9c00ccedd9fcd3b61eab6a291469a3d6200671d3e6f25\",\"dweb:/ipfs/QmYEjVC6ttBK1YSECdJmH69LtD2mahbVW27JLv6TUdWKiU\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x62dc9346044aabf22d78541bd495aa6ca05a7f5100aed26196ba35d40b59fcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5221df4501c74cd4493fee1a0f0788e02c4dc78c3c601e9f557f557c5a53ea92\",\"dweb:/ipfs/QmZpzyYY9dKLrgvYhXSHT93jwqb1UGvtGNMQk5dpECY5pa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c231f38a1b5f90f352193aaf26fe0343fe0d2a2b56099f40c395b497e730012a64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 BALANCE RETURN DUP11 SHL PUSH0 SWAP1 RETURN MSTORE NOT GASPRICE 0xAF 0x26 INVALID SUB NUMBER INVALID 0xD 0x2A 0x2B JUMP MULMOD SWAP16 BLOCKHASH 0xC3 SWAP6 0xB4 SWAP8 0xE7 ADDRESS ADD 0x2A PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"657:1315:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c231f38a1b5f90f352193aaf26fe0343fe0d2a2b56099f40c395b497e730012a64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 BALANCE RETURN DUP11 SHL PUSH0 SWAP1 RETURN MSTORE NOT GASPRICE 0xAF 0x26 INVALID SUB NUMBER INVALID 0xD 0x2A 0x2B JUMP MULMOD SWAP16 BLOCKHASH 0xC3 SWAP6 0xB4 SWAP8 0xE7 ADDRESS ADD 0x2A PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"657:1315:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7cd610b89051868c6deb984643a2068e9725a6d484d7dbbf1eb04902ed2dbd764736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xCD PUSH2 0xB89 SDIV XOR PUSH9 0xC6DEB984643A2068E9 PUSH19 0x5A6D484D7DBBF1EB04902ED2DBD764736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ","sourceMap":"1255:3026:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7cd610b89051868c6deb984643a2068e9725a6d484d7dbbf1eb04902ed2dbd764736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xCD PUSH2 0xB89 SDIV XOR PUSH9 0xC6DEB984643A2068E9 PUSH19 0x5A6D484D7DBBF1EB04902ED2DBD764736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ","sourceMap":"1255:3026:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001ea086b62a2e66873556e6b02ef4fdea21e0c6ad7c7e758101c110602189df864736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xEA ADDMOD PUSH12 0x62A2E66873556E6B02EF4FDE LOG2 0x1E 0xC PUSH11 0xD7C7E758101C110602189D 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"1407:2774:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001ea086b62a2e66873556e6b02ef4fdea21e0c6ad7c7e758101c110602189df864736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xEA ADDMOD PUSH12 0x62A2E66873556E6B02EF4FDE LOG2 0x1E 0xC PUSH11 0xD7C7E758101C110602189D 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"1407:2774:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220337142fb7449c04671cab57339e180bfaa6ef0c7584d7e06d52772e02bfa33eb64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER PUSH18 0x42FB7449C04671CAB57339E180BFAA6EF0C7 PC 0x4D PUSH31 0x6D52772E02BFA33EB64736F6C634300081600330000000000000000000000 ","sourceMap":"251:3680:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220337142fb7449c04671cab57339e180bfaa6ef0c7584d7e06d52772e02bfa33eb64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER PUSH18 0x42FB7449C04671CAB57339E180BFAA6EF0C7 PC 0x4D PUSH31 0x6D52772E02BFA33EB64736F6C634300081600330000000000000000000000 ","sourceMap":"251:3680:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0dc06b958b36f772fe3dffa53ba669706c823891cc39229f251508890ac2d3264736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xDC MOD 0xB9 PC 0xB3 PUSH16 0x772FE3DFFA53BA669706C823891CC392 0x29 CALLCODE MLOAD POP DUP9 SWAP1 0xAC 0x2D ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"344:7470:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0dc06b958b36f772fe3dffa53ba669706c823891cc39229f251508890ac2d3264736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xDC MOD 0xB9 PC 0xB3 PUSH16 0x772FE3DFFA53BA669706C823891CC392 0x29 CALLCODE MLOAD POP DUP9 SWAP1 0xAC 0x2D ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"344:7470:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ff3d095cf96aaafb8d9b788d400f5f317237e527098ebcb4a2bed354780228d764736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT RETURNDATASIZE MULMOD 0x5C 0xF9 PUSH11 0xAAFB8D9B788D400F5F3172 CALLDATACOPY 0xE5 0x27 MULMOD DUP15 0xBC 0xB4 LOG2 0xBE 0xD3 SLOAD PUSH25 0x228D764736F6C634300081600330000000000000000000000 ","sourceMap":"521:3181:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ff3d095cf96aaafb8d9b788d400f5f317237e527098ebcb4a2bed354780228d764736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT RETURNDATASIZE MULMOD 0x5C 0xF9 PUSH11 0xAAFB8D9B788D400F5F3172 CALLDATACOPY 0xE5 0x27 MULMOD DUP15 0xBC 0xB4 LOG2 0xBE 0xD3 SLOAD PUSH25 0x228D764736F6C634300081600330000000000000000000000 ","sourceMap":"521:3181:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc4c424fcfc792abbfc59491ffaf3e5503a6b587d7f24f659b6ab2dcb517716c64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0x4C TIMESTAMP 0x4F 0xCF 0xC7 SWAP3 0xAB 0xBF 0xC5 SWAP5 SWAP2 SELFDESTRUCT 0xAF RETURNDATACOPY SSTORE SUB 0xA6 0xB5 DUP8 0xD7 CALLCODE 0x4F PUSH6 0x9B6AB2DCB517 PUSH18 0x6C64736F6C63430008160033000000000000 ","sourceMap":"281:28026:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc4c424fcfc792abbfc59491ffaf3e5503a6b587d7f24f659b6ab2dcb517716c64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0x4C TIMESTAMP 0x4F 0xCF 0xC7 SWAP3 0xAB 0xBF 0xC5 SWAP5 SWAP2 SELFDESTRUCT 0xAF RETURNDATACOPY SSTORE SUB 0xA6 0xB5 DUP8 0xD7 CALLCODE 0x4F PUSH6 0x9B6AB2DCB517 PUSH18 0x6C64736F6C63430008160033000000000000 ","sourceMap":"281:28026:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220766ba30f63d8006c724a4c3d3663c3583e9781fe2b0febfa17c7932f5b6cace464736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x6BA30F63D8006C724A4C3D3663C3583E9781FE2B0FEBFA OR 0xC7 SWAP4 0x2F JUMPDEST PUSH13 0xACE464736F6C63430008160033 ","sourceMap":"769:34173:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220766ba30f63d8006c724a4c3d3663c3583e9781fe2b0febfa17c7932f5b6cace464736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x6BA30F63D8006C724A4C3D3663C3583E9781FE2B0FEBFA OR 0xC7 SWAP4 0x2F JUMPDEST PUSH13 0xACE464736F6C63430008160033 ","sourceMap":"769:34173:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d105761232beec566d198443ab93850938f20a72c53252f993cc16d496839fd464736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 SDIV PUSH23 0x1232BEEC566D198443AB93850938F20A72C53252F993CC AND 0xD4 SWAP7 DUP4 SWAP16 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"258:2354:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d105761232beec566d198443ab93850938f20a72c53252f993cc16d496839fd464736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 SDIV PUSH23 0x1232BEEC566D198443AB93850938F20A72C53252F993CC AND 0xD4 SWAP7 DUP4 SWAP16 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"258:2354:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"Checkpoints":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220523e7396c49ae2fb035811ebf0a358aa8e26a19fc62a241a27a932049b4679b464736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE RETURNDATACOPY PUSH20 0x96C49AE2FB035811EBF0A358AA8E26A19FC62A24 BYTE 0x27 0xA9 ORIGIN DIV SWAP12 CHAINID PUSH26 0xB464736F6C634300081600330000000000000000000000000000 ","sourceMap":"668:20756:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220523e7396c49ae2fb035811ebf0a358aa8e26a19fc62a241a27a932049b4679b464736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE RETURNDATACOPY PUSH20 0x96C49AE2FB035811EBF0A358AA8E26A19FC62A24 BYTE 0x27 0xA9 ORIGIN DIV SWAP12 CHAINID PUSH26 0xB464736F6C634300081600330000000000000000000000000000 ","sourceMap":"668:20756:31:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library defines the `Trace*` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new checkpoint for the current transaction block using the {push} function.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/types/Time.sol":{"Time":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610d970f6bbd20688a0049b983731f30d748292cde567addadc0454aa2729a1664736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xD97 0xF PUSH12 0xBD20688A0049B983731F30D7 BASEFEE 0x29 0x2C 0xDE JUMP PUSH27 0xDDADC0454AA2729A1664736F6C6343000816003300000000000000 ","sourceMap":"640:4515:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610d970f6bbd20688a0049b983731f30d748292cde567addadc0454aa2729a1664736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xD97 0xF PUSH12 0xBD20688A0049B983731F30D7 BASEFEE 0x29 0x2C 0xDE JUMP PUSH27 0xDDADC0454AA2729A1664736F6C6343000816003300000000000000 ","sourceMap":"640:4515:32:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}"}},"contracts/trinostoken.sol":{"TrinosTOKEN":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"address","name":"initialMintAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"maxLoan","type":"uint256"}],"name":"ERC3156ExceededMaxLoan","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC3156InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"ERC3156UnsupportedToken","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalMintedSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1076":{"entryPoint":null,"id":1076,"parameterSlots":2,"returnSlots":0},"@_1990":{"entryPoint":null,"id":1990,"parameterSlots":1,"returnSlots":0},"@_2473":{"entryPoint":null,"id":2473,"parameterSlots":0,"returnSlots":0},"@_3662":{"entryPoint":null,"id":3662,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9288":{"entryPoint":null,"id":9288,"parameterSlots":2,"returnSlots":0},"@_add_754":{"entryPoint":2589,"id":754,"parameterSlots":2,"returnSlots":1},"@_buildDomainSeparator_3709":{"entryPoint":1008,"id":3709,"parameterSlots":0,"returnSlots":1},"@_insert_8318":{"entryPoint":3831,"id":8318,"parameterSlots":3,"returnSlots":2},"@_maxSupply_2128":{"entryPoint":1657,"id":2128,"parameterSlots":0,"returnSlots":1},"@_mint_1379":{"entryPoint":1110,"id":1379,"parameterSlots":2,"returnSlots":0},"@_moveDelegateVotes_668":{"entryPoint":2935,"id":668,"parameterSlots":3,"returnSlots":0},"@_push_740":{"entryPoint":2726,"id":740,"parameterSlots":3,"returnSlots":2},"@_requireNotPaused_2510":{"entryPoint":1955,"id":2510,"parameterSlots":0,"returnSlots":0},"@_subtract_768":{"entryPoint":2806,"id":768,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":722,"id":146,"parameterSlots":1,"returnSlots":0},"@_transferVotingUnits_590":{"entryPoint":1693,"id":590,"parameterSlots":3,"returnSlots":0},"@_unsafeAccess_8437":{"entryPoint":3810,"id":8437,"parameterSlots":2,"returnSlots":1},"@_update_1346":{"entryPoint":2029,"id":1346,"parameterSlots":3,"returnSlots":0},"@_update_1940":{"entryPoint":1607,"id":1940,"parameterSlots":3,"returnSlots":0},"@_update_2182":{"entryPoint":1394,"id":2182,"parameterSlots":3,"returnSlots":0},"@_update_9365":{"entryPoint":1370,"id":9365,"parameterSlots":3,"returnSlots":0},"@clock_9334":{"entryPoint":3649,"id":9334,"parameterSlots":0,"returnSlots":1},"@decimals_1103":{"entryPoint":1101,"id":1103,"parameterSlots":0,"returnSlots":1},"@delegates_426":{"entryPoint":2830,"id":426,"parameterSlots":1,"returnSlots":1},"@getStringSlot_2874":{"entryPoint":1360,"id":2874,"parameterSlots":1,"returnSlots":1},"@latest_8143":{"entryPoint":3657,"id":8143,"parameterSlots":1,"returnSlots":1},"@paused_2498":{"entryPoint":3626,"id":2498,"parameterSlots":0,"returnSlots":1},"@push_7946":{"entryPoint":3773,"id":7946,"parameterSlots":3,"returnSlots":2},"@toShortStringWithFallback_2714":{"entryPoint":920,"id":2714,"parameterSlots":2,"returnSlots":1},"@toShortString_2616":{"entryPoint":1251,"id":2616,"parameterSlots":1,"returnSlots":1},"@toUint208_5667":{"entryPoint":2613,"id":5667,"parameterSlots":1,"returnSlots":1},"@totalSupply_1112":{"entryPoint":1647,"id":1112,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":4710,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":4733,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5669,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6281,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack":{"entryPoint":7116,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6486,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6298,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5686,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6853,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":6315,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":7133,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6551,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6914,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6749,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":6598,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":4962,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6587,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4804,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6408,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint208":{"entryPoint":6981,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6794,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":5775,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":6115,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":5866,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6196,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint208":{"entryPoint":7178,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7263,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":5283,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":4664,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6271,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_208_by_1":{"entryPoint":7066,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4632,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint208":{"entryPoint":6943,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5098,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6102,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":5244,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":6637,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_208_by_1_to_t_uint8":{"entryPoint":7076,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":5118,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":5438,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6425,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":4983,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4909,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":5408,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":5108,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":5376,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5715,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4862,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4815,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":5158,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":6614,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4627,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6469,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":4999,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":5762,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":5363,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":5216,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":5012,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":5168,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4684,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":5211,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:16002:34","nodeType":"YulBlock","src":"0:16002:34","statements":[{"body":{"nativeSrc":"47:35:34","nodeType":"YulBlock","src":"47:35:34","statements":[{"nativeSrc":"57:19:34","nodeType":"YulAssignment","src":"57:19:34","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:34","nodeType":"YulLiteral","src":"73:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:34","nodeType":"YulIdentifier","src":"67:5:34"},"nativeSrc":"67:9:34","nodeType":"YulFunctionCall","src":"67:9:34"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:34","nodeType":"YulIdentifier","src":"57:6:34"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:34","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:34","nodeType":"YulTypedName","src":"40:6:34","type":""}],"src":"7:75:34"},{"body":{"nativeSrc":"177:28:34","nodeType":"YulBlock","src":"177:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:34","nodeType":"YulLiteral","src":"194:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:34","nodeType":"YulLiteral","src":"197:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:34","nodeType":"YulIdentifier","src":"187:6:34"},"nativeSrc":"187:12:34","nodeType":"YulFunctionCall","src":"187:12:34"},"nativeSrc":"187:12:34","nodeType":"YulExpressionStatement","src":"187:12:34"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:34","nodeType":"YulFunctionDefinition","src":"88:117:34"},{"body":{"nativeSrc":"300:28:34","nodeType":"YulBlock","src":"300:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:34","nodeType":"YulLiteral","src":"317:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:34","nodeType":"YulLiteral","src":"320:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:34","nodeType":"YulIdentifier","src":"310:6:34"},"nativeSrc":"310:12:34","nodeType":"YulFunctionCall","src":"310:12:34"},"nativeSrc":"310:12:34","nodeType":"YulExpressionStatement","src":"310:12:34"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:34","nodeType":"YulFunctionDefinition","src":"211:117:34"},{"body":{"nativeSrc":"379:81:34","nodeType":"YulBlock","src":"379:81:34","statements":[{"nativeSrc":"389:65:34","nodeType":"YulAssignment","src":"389:65:34","value":{"arguments":[{"name":"value","nativeSrc":"404:5:34","nodeType":"YulIdentifier","src":"404:5:34"},{"kind":"number","nativeSrc":"411:42:34","nodeType":"YulLiteral","src":"411:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:34","nodeType":"YulIdentifier","src":"400:3:34"},"nativeSrc":"400:54:34","nodeType":"YulFunctionCall","src":"400:54:34"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:34","nodeType":"YulIdentifier","src":"389:7:34"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:34","nodeType":"YulTypedName","src":"361:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:34","nodeType":"YulTypedName","src":"371:7:34","type":""}],"src":"334:126:34"},{"body":{"nativeSrc":"511:51:34","nodeType":"YulBlock","src":"511:51:34","statements":[{"nativeSrc":"521:35:34","nodeType":"YulAssignment","src":"521:35:34","value":{"arguments":[{"name":"value","nativeSrc":"550:5:34","nodeType":"YulIdentifier","src":"550:5:34"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:34","nodeType":"YulIdentifier","src":"532:17:34"},"nativeSrc":"532:24:34","nodeType":"YulFunctionCall","src":"532:24:34"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:34","nodeType":"YulIdentifier","src":"521:7:34"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:34","nodeType":"YulTypedName","src":"493:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:34","nodeType":"YulTypedName","src":"503:7:34","type":""}],"src":"466:96:34"},{"body":{"nativeSrc":"611:79:34","nodeType":"YulBlock","src":"611:79:34","statements":[{"body":{"nativeSrc":"668:16:34","nodeType":"YulBlock","src":"668:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:34","nodeType":"YulLiteral","src":"677:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:34","nodeType":"YulLiteral","src":"680:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:34","nodeType":"YulIdentifier","src":"670:6:34"},"nativeSrc":"670:12:34","nodeType":"YulFunctionCall","src":"670:12:34"},"nativeSrc":"670:12:34","nodeType":"YulExpressionStatement","src":"670:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:34","nodeType":"YulIdentifier","src":"634:5:34"},{"arguments":[{"name":"value","nativeSrc":"659:5:34","nodeType":"YulIdentifier","src":"659:5:34"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:34","nodeType":"YulIdentifier","src":"641:17:34"},"nativeSrc":"641:24:34","nodeType":"YulFunctionCall","src":"641:24:34"}],"functionName":{"name":"eq","nativeSrc":"631:2:34","nodeType":"YulIdentifier","src":"631:2:34"},"nativeSrc":"631:35:34","nodeType":"YulFunctionCall","src":"631:35:34"}],"functionName":{"name":"iszero","nativeSrc":"624:6:34","nodeType":"YulIdentifier","src":"624:6:34"},"nativeSrc":"624:43:34","nodeType":"YulFunctionCall","src":"624:43:34"},"nativeSrc":"621:63:34","nodeType":"YulIf","src":"621:63:34"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:34","nodeType":"YulTypedName","src":"604:5:34","type":""}],"src":"568:122:34"},{"body":{"nativeSrc":"759:80:34","nodeType":"YulBlock","src":"759:80:34","statements":[{"nativeSrc":"769:22:34","nodeType":"YulAssignment","src":"769:22:34","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:34","nodeType":"YulIdentifier","src":"784:6:34"}],"functionName":{"name":"mload","nativeSrc":"778:5:34","nodeType":"YulIdentifier","src":"778:5:34"},"nativeSrc":"778:13:34","nodeType":"YulFunctionCall","src":"778:13:34"},"variableNames":[{"name":"value","nativeSrc":"769:5:34","nodeType":"YulIdentifier","src":"769:5:34"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:34","nodeType":"YulIdentifier","src":"827:5:34"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:34","nodeType":"YulIdentifier","src":"800:26:34"},"nativeSrc":"800:33:34","nodeType":"YulFunctionCall","src":"800:33:34"},"nativeSrc":"800:33:34","nodeType":"YulExpressionStatement","src":"800:33:34"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:34","nodeType":"YulTypedName","src":"737:6:34","type":""},{"name":"end","nativeSrc":"745:3:34","nodeType":"YulTypedName","src":"745:3:34","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:34","nodeType":"YulTypedName","src":"753:5:34","type":""}],"src":"696:143:34"},{"body":{"nativeSrc":"939:413:34","nodeType":"YulBlock","src":"939:413:34","statements":[{"body":{"nativeSrc":"985:83:34","nodeType":"YulBlock","src":"985:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"987:77:34","nodeType":"YulIdentifier","src":"987:77:34"},"nativeSrc":"987:79:34","nodeType":"YulFunctionCall","src":"987:79:34"},"nativeSrc":"987:79:34","nodeType":"YulExpressionStatement","src":"987:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"960:7:34","nodeType":"YulIdentifier","src":"960:7:34"},{"name":"headStart","nativeSrc":"969:9:34","nodeType":"YulIdentifier","src":"969:9:34"}],"functionName":{"name":"sub","nativeSrc":"956:3:34","nodeType":"YulIdentifier","src":"956:3:34"},"nativeSrc":"956:23:34","nodeType":"YulFunctionCall","src":"956:23:34"},{"kind":"number","nativeSrc":"981:2:34","nodeType":"YulLiteral","src":"981:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"952:3:34","nodeType":"YulIdentifier","src":"952:3:34"},"nativeSrc":"952:32:34","nodeType":"YulFunctionCall","src":"952:32:34"},"nativeSrc":"949:119:34","nodeType":"YulIf","src":"949:119:34"},{"nativeSrc":"1078:128:34","nodeType":"YulBlock","src":"1078:128:34","statements":[{"nativeSrc":"1093:15:34","nodeType":"YulVariableDeclaration","src":"1093:15:34","value":{"kind":"number","nativeSrc":"1107:1:34","nodeType":"YulLiteral","src":"1107:1:34","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1097:6:34","nodeType":"YulTypedName","src":"1097:6:34","type":""}]},{"nativeSrc":"1122:74:34","nodeType":"YulAssignment","src":"1122:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1168:9:34","nodeType":"YulIdentifier","src":"1168:9:34"},{"name":"offset","nativeSrc":"1179:6:34","nodeType":"YulIdentifier","src":"1179:6:34"}],"functionName":{"name":"add","nativeSrc":"1164:3:34","nodeType":"YulIdentifier","src":"1164:3:34"},"nativeSrc":"1164:22:34","nodeType":"YulFunctionCall","src":"1164:22:34"},{"name":"dataEnd","nativeSrc":"1188:7:34","nodeType":"YulIdentifier","src":"1188:7:34"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1132:31:34","nodeType":"YulIdentifier","src":"1132:31:34"},"nativeSrc":"1132:64:34","nodeType":"YulFunctionCall","src":"1132:64:34"},"variableNames":[{"name":"value0","nativeSrc":"1122:6:34","nodeType":"YulIdentifier","src":"1122:6:34"}]}]},{"nativeSrc":"1216:129:34","nodeType":"YulBlock","src":"1216:129:34","statements":[{"nativeSrc":"1231:16:34","nodeType":"YulVariableDeclaration","src":"1231:16:34","value":{"kind":"number","nativeSrc":"1245:2:34","nodeType":"YulLiteral","src":"1245:2:34","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1235:6:34","nodeType":"YulTypedName","src":"1235:6:34","type":""}]},{"nativeSrc":"1261:74:34","nodeType":"YulAssignment","src":"1261:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1307:9:34","nodeType":"YulIdentifier","src":"1307:9:34"},{"name":"offset","nativeSrc":"1318:6:34","nodeType":"YulIdentifier","src":"1318:6:34"}],"functionName":{"name":"add","nativeSrc":"1303:3:34","nodeType":"YulIdentifier","src":"1303:3:34"},"nativeSrc":"1303:22:34","nodeType":"YulFunctionCall","src":"1303:22:34"},{"name":"dataEnd","nativeSrc":"1327:7:34","nodeType":"YulIdentifier","src":"1327:7:34"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1271:31:34","nodeType":"YulIdentifier","src":"1271:31:34"},"nativeSrc":"1271:64:34","nodeType":"YulFunctionCall","src":"1271:64:34"},"variableNames":[{"name":"value1","nativeSrc":"1261:6:34","nodeType":"YulIdentifier","src":"1261:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"845:507:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"901:9:34","nodeType":"YulTypedName","src":"901:9:34","type":""},{"name":"dataEnd","nativeSrc":"912:7:34","nodeType":"YulTypedName","src":"912:7:34","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"924:6:34","nodeType":"YulTypedName","src":"924:6:34","type":""},{"name":"value1","nativeSrc":"932:6:34","nodeType":"YulTypedName","src":"932:6:34","type":""}],"src":"845:507:34"},{"body":{"nativeSrc":"1417:40:34","nodeType":"YulBlock","src":"1417:40:34","statements":[{"nativeSrc":"1428:22:34","nodeType":"YulAssignment","src":"1428:22:34","value":{"arguments":[{"name":"value","nativeSrc":"1444:5:34","nodeType":"YulIdentifier","src":"1444:5:34"}],"functionName":{"name":"mload","nativeSrc":"1438:5:34","nodeType":"YulIdentifier","src":"1438:5:34"},"nativeSrc":"1438:12:34","nodeType":"YulFunctionCall","src":"1438:12:34"},"variableNames":[{"name":"length","nativeSrc":"1428:6:34","nodeType":"YulIdentifier","src":"1428:6:34"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1358:99:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1400:5:34","nodeType":"YulTypedName","src":"1400:5:34","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1410:6:34","nodeType":"YulTypedName","src":"1410:6:34","type":""}],"src":"1358:99:34"},{"body":{"nativeSrc":"1491:152:34","nodeType":"YulBlock","src":"1491:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1508:1:34","nodeType":"YulLiteral","src":"1508:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"1511:77:34","nodeType":"YulLiteral","src":"1511:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1501:6:34","nodeType":"YulIdentifier","src":"1501:6:34"},"nativeSrc":"1501:88:34","nodeType":"YulFunctionCall","src":"1501:88:34"},"nativeSrc":"1501:88:34","nodeType":"YulExpressionStatement","src":"1501:88:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1605:1:34","nodeType":"YulLiteral","src":"1605:1:34","type":"","value":"4"},{"kind":"number","nativeSrc":"1608:4:34","nodeType":"YulLiteral","src":"1608:4:34","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1598:6:34","nodeType":"YulIdentifier","src":"1598:6:34"},"nativeSrc":"1598:15:34","nodeType":"YulFunctionCall","src":"1598:15:34"},"nativeSrc":"1598:15:34","nodeType":"YulExpressionStatement","src":"1598:15:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1629:1:34","nodeType":"YulLiteral","src":"1629:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"1632:4:34","nodeType":"YulLiteral","src":"1632:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1622:6:34","nodeType":"YulIdentifier","src":"1622:6:34"},"nativeSrc":"1622:15:34","nodeType":"YulFunctionCall","src":"1622:15:34"},"nativeSrc":"1622:15:34","nodeType":"YulExpressionStatement","src":"1622:15:34"}]},"name":"panic_error_0x41","nativeSrc":"1463:180:34","nodeType":"YulFunctionDefinition","src":"1463:180:34"},{"body":{"nativeSrc":"1677:152:34","nodeType":"YulBlock","src":"1677:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1694:1:34","nodeType":"YulLiteral","src":"1694:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"1697:77:34","nodeType":"YulLiteral","src":"1697:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1687:6:34","nodeType":"YulIdentifier","src":"1687:6:34"},"nativeSrc":"1687:88:34","nodeType":"YulFunctionCall","src":"1687:88:34"},"nativeSrc":"1687:88:34","nodeType":"YulExpressionStatement","src":"1687:88:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1791:1:34","nodeType":"YulLiteral","src":"1791:1:34","type":"","value":"4"},{"kind":"number","nativeSrc":"1794:4:34","nodeType":"YulLiteral","src":"1794:4:34","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1784:6:34","nodeType":"YulIdentifier","src":"1784:6:34"},"nativeSrc":"1784:15:34","nodeType":"YulFunctionCall","src":"1784:15:34"},"nativeSrc":"1784:15:34","nodeType":"YulExpressionStatement","src":"1784:15:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1815:1:34","nodeType":"YulLiteral","src":"1815:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"1818:4:34","nodeType":"YulLiteral","src":"1818:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1808:6:34","nodeType":"YulIdentifier","src":"1808:6:34"},"nativeSrc":"1808:15:34","nodeType":"YulFunctionCall","src":"1808:15:34"},"nativeSrc":"1808:15:34","nodeType":"YulExpressionStatement","src":"1808:15:34"}]},"name":"panic_error_0x22","nativeSrc":"1649:180:34","nodeType":"YulFunctionDefinition","src":"1649:180:34"},{"body":{"nativeSrc":"1886:269:34","nodeType":"YulBlock","src":"1886:269:34","statements":[{"nativeSrc":"1896:22:34","nodeType":"YulAssignment","src":"1896:22:34","value":{"arguments":[{"name":"data","nativeSrc":"1910:4:34","nodeType":"YulIdentifier","src":"1910:4:34"},{"kind":"number","nativeSrc":"1916:1:34","nodeType":"YulLiteral","src":"1916:1:34","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1906:3:34","nodeType":"YulIdentifier","src":"1906:3:34"},"nativeSrc":"1906:12:34","nodeType":"YulFunctionCall","src":"1906:12:34"},"variableNames":[{"name":"length","nativeSrc":"1896:6:34","nodeType":"YulIdentifier","src":"1896:6:34"}]},{"nativeSrc":"1927:38:34","nodeType":"YulVariableDeclaration","src":"1927:38:34","value":{"arguments":[{"name":"data","nativeSrc":"1957:4:34","nodeType":"YulIdentifier","src":"1957:4:34"},{"kind":"number","nativeSrc":"1963:1:34","nodeType":"YulLiteral","src":"1963:1:34","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1953:3:34","nodeType":"YulIdentifier","src":"1953:3:34"},"nativeSrc":"1953:12:34","nodeType":"YulFunctionCall","src":"1953:12:34"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1931:18:34","nodeType":"YulTypedName","src":"1931:18:34","type":""}]},{"body":{"nativeSrc":"2004:51:34","nodeType":"YulBlock","src":"2004:51:34","statements":[{"nativeSrc":"2018:27:34","nodeType":"YulAssignment","src":"2018:27:34","value":{"arguments":[{"name":"length","nativeSrc":"2032:6:34","nodeType":"YulIdentifier","src":"2032:6:34"},{"kind":"number","nativeSrc":"2040:4:34","nodeType":"YulLiteral","src":"2040:4:34","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2028:3:34","nodeType":"YulIdentifier","src":"2028:3:34"},"nativeSrc":"2028:17:34","nodeType":"YulFunctionCall","src":"2028:17:34"},"variableNames":[{"name":"length","nativeSrc":"2018:6:34","nodeType":"YulIdentifier","src":"2018:6:34"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1984:18:34","nodeType":"YulIdentifier","src":"1984:18:34"}],"functionName":{"name":"iszero","nativeSrc":"1977:6:34","nodeType":"YulIdentifier","src":"1977:6:34"},"nativeSrc":"1977:26:34","nodeType":"YulFunctionCall","src":"1977:26:34"},"nativeSrc":"1974:81:34","nodeType":"YulIf","src":"1974:81:34"},{"body":{"nativeSrc":"2107:42:34","nodeType":"YulBlock","src":"2107:42:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"2121:16:34","nodeType":"YulIdentifier","src":"2121:16:34"},"nativeSrc":"2121:18:34","nodeType":"YulFunctionCall","src":"2121:18:34"},"nativeSrc":"2121:18:34","nodeType":"YulExpressionStatement","src":"2121:18:34"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2071:18:34","nodeType":"YulIdentifier","src":"2071:18:34"},{"arguments":[{"name":"length","nativeSrc":"2094:6:34","nodeType":"YulIdentifier","src":"2094:6:34"},{"kind":"number","nativeSrc":"2102:2:34","nodeType":"YulLiteral","src":"2102:2:34","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2091:2:34","nodeType":"YulIdentifier","src":"2091:2:34"},"nativeSrc":"2091:14:34","nodeType":"YulFunctionCall","src":"2091:14:34"}],"functionName":{"name":"eq","nativeSrc":"2068:2:34","nodeType":"YulIdentifier","src":"2068:2:34"},"nativeSrc":"2068:38:34","nodeType":"YulFunctionCall","src":"2068:38:34"},"nativeSrc":"2065:84:34","nodeType":"YulIf","src":"2065:84:34"}]},"name":"extract_byte_array_length","nativeSrc":"1835:320:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1870:4:34","nodeType":"YulTypedName","src":"1870:4:34","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1879:6:34","nodeType":"YulTypedName","src":"1879:6:34","type":""}],"src":"1835:320:34"},{"body":{"nativeSrc":"2215:87:34","nodeType":"YulBlock","src":"2215:87:34","statements":[{"nativeSrc":"2225:11:34","nodeType":"YulAssignment","src":"2225:11:34","value":{"name":"ptr","nativeSrc":"2233:3:34","nodeType":"YulIdentifier","src":"2233:3:34"},"variableNames":[{"name":"data","nativeSrc":"2225:4:34","nodeType":"YulIdentifier","src":"2225:4:34"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2253:1:34","nodeType":"YulLiteral","src":"2253:1:34","type":"","value":"0"},{"name":"ptr","nativeSrc":"2256:3:34","nodeType":"YulIdentifier","src":"2256:3:34"}],"functionName":{"name":"mstore","nativeSrc":"2246:6:34","nodeType":"YulIdentifier","src":"2246:6:34"},"nativeSrc":"2246:14:34","nodeType":"YulFunctionCall","src":"2246:14:34"},"nativeSrc":"2246:14:34","nodeType":"YulExpressionStatement","src":"2246:14:34"},{"nativeSrc":"2269:26:34","nodeType":"YulAssignment","src":"2269:26:34","value":{"arguments":[{"kind":"number","nativeSrc":"2287:1:34","nodeType":"YulLiteral","src":"2287:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"2290:4:34","nodeType":"YulLiteral","src":"2290:4:34","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2277:9:34","nodeType":"YulIdentifier","src":"2277:9:34"},"nativeSrc":"2277:18:34","nodeType":"YulFunctionCall","src":"2277:18:34"},"variableNames":[{"name":"data","nativeSrc":"2269:4:34","nodeType":"YulIdentifier","src":"2269:4:34"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2161:141:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2202:3:34","nodeType":"YulTypedName","src":"2202:3:34","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2210:4:34","nodeType":"YulTypedName","src":"2210:4:34","type":""}],"src":"2161:141:34"},{"body":{"nativeSrc":"2352:49:34","nodeType":"YulBlock","src":"2352:49:34","statements":[{"nativeSrc":"2362:33:34","nodeType":"YulAssignment","src":"2362:33:34","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2380:5:34","nodeType":"YulIdentifier","src":"2380:5:34"},{"kind":"number","nativeSrc":"2387:2:34","nodeType":"YulLiteral","src":"2387:2:34","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2376:3:34","nodeType":"YulIdentifier","src":"2376:3:34"},"nativeSrc":"2376:14:34","nodeType":"YulFunctionCall","src":"2376:14:34"},{"kind":"number","nativeSrc":"2392:2:34","nodeType":"YulLiteral","src":"2392:2:34","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2372:3:34","nodeType":"YulIdentifier","src":"2372:3:34"},"nativeSrc":"2372:23:34","nodeType":"YulFunctionCall","src":"2372:23:34"},"variableNames":[{"name":"result","nativeSrc":"2362:6:34","nodeType":"YulIdentifier","src":"2362:6:34"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2308:93:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2335:5:34","nodeType":"YulTypedName","src":"2335:5:34","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2345:6:34","nodeType":"YulTypedName","src":"2345:6:34","type":""}],"src":"2308:93:34"},{"body":{"nativeSrc":"2460:54:34","nodeType":"YulBlock","src":"2460:54:34","statements":[{"nativeSrc":"2470:37:34","nodeType":"YulAssignment","src":"2470:37:34","value":{"arguments":[{"name":"bits","nativeSrc":"2495:4:34","nodeType":"YulIdentifier","src":"2495:4:34"},{"name":"value","nativeSrc":"2501:5:34","nodeType":"YulIdentifier","src":"2501:5:34"}],"functionName":{"name":"shl","nativeSrc":"2491:3:34","nodeType":"YulIdentifier","src":"2491:3:34"},"nativeSrc":"2491:16:34","nodeType":"YulFunctionCall","src":"2491:16:34"},"variableNames":[{"name":"newValue","nativeSrc":"2470:8:34","nodeType":"YulIdentifier","src":"2470:8:34"}]}]},"name":"shift_left_dynamic","nativeSrc":"2407:107:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2435:4:34","nodeType":"YulTypedName","src":"2435:4:34","type":""},{"name":"value","nativeSrc":"2441:5:34","nodeType":"YulTypedName","src":"2441:5:34","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2451:8:34","nodeType":"YulTypedName","src":"2451:8:34","type":""}],"src":"2407:107:34"},{"body":{"nativeSrc":"2596:317:34","nodeType":"YulBlock","src":"2596:317:34","statements":[{"nativeSrc":"2606:35:34","nodeType":"YulVariableDeclaration","src":"2606:35:34","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2627:10:34","nodeType":"YulIdentifier","src":"2627:10:34"},{"kind":"number","nativeSrc":"2639:1:34","nodeType":"YulLiteral","src":"2639:1:34","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2623:3:34","nodeType":"YulIdentifier","src":"2623:3:34"},"nativeSrc":"2623:18:34","nodeType":"YulFunctionCall","src":"2623:18:34"},"variables":[{"name":"shiftBits","nativeSrc":"2610:9:34","nodeType":"YulTypedName","src":"2610:9:34","type":""}]},{"nativeSrc":"2650:109:34","nodeType":"YulVariableDeclaration","src":"2650:109:34","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2681:9:34","nodeType":"YulIdentifier","src":"2681:9:34"},{"kind":"number","nativeSrc":"2692:66:34","nodeType":"YulLiteral","src":"2692:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2662:18:34","nodeType":"YulIdentifier","src":"2662:18:34"},"nativeSrc":"2662:97:34","nodeType":"YulFunctionCall","src":"2662:97:34"},"variables":[{"name":"mask","nativeSrc":"2654:4:34","nodeType":"YulTypedName","src":"2654:4:34","type":""}]},{"nativeSrc":"2768:51:34","nodeType":"YulAssignment","src":"2768:51:34","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2799:9:34","nodeType":"YulIdentifier","src":"2799:9:34"},{"name":"toInsert","nativeSrc":"2810:8:34","nodeType":"YulIdentifier","src":"2810:8:34"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2780:18:34","nodeType":"YulIdentifier","src":"2780:18:34"},"nativeSrc":"2780:39:34","nodeType":"YulFunctionCall","src":"2780:39:34"},"variableNames":[{"name":"toInsert","nativeSrc":"2768:8:34","nodeType":"YulIdentifier","src":"2768:8:34"}]},{"nativeSrc":"2828:30:34","nodeType":"YulAssignment","src":"2828:30:34","value":{"arguments":[{"name":"value","nativeSrc":"2841:5:34","nodeType":"YulIdentifier","src":"2841:5:34"},{"arguments":[{"name":"mask","nativeSrc":"2852:4:34","nodeType":"YulIdentifier","src":"2852:4:34"}],"functionName":{"name":"not","nativeSrc":"2848:3:34","nodeType":"YulIdentifier","src":"2848:3:34"},"nativeSrc":"2848:9:34","nodeType":"YulFunctionCall","src":"2848:9:34"}],"functionName":{"name":"and","nativeSrc":"2837:3:34","nodeType":"YulIdentifier","src":"2837:3:34"},"nativeSrc":"2837:21:34","nodeType":"YulFunctionCall","src":"2837:21:34"},"variableNames":[{"name":"value","nativeSrc":"2828:5:34","nodeType":"YulIdentifier","src":"2828:5:34"}]},{"nativeSrc":"2867:40:34","nodeType":"YulAssignment","src":"2867:40:34","value":{"arguments":[{"name":"value","nativeSrc":"2880:5:34","nodeType":"YulIdentifier","src":"2880:5:34"},{"arguments":[{"name":"toInsert","nativeSrc":"2891:8:34","nodeType":"YulIdentifier","src":"2891:8:34"},{"name":"mask","nativeSrc":"2901:4:34","nodeType":"YulIdentifier","src":"2901:4:34"}],"functionName":{"name":"and","nativeSrc":"2887:3:34","nodeType":"YulIdentifier","src":"2887:3:34"},"nativeSrc":"2887:19:34","nodeType":"YulFunctionCall","src":"2887:19:34"}],"functionName":{"name":"or","nativeSrc":"2877:2:34","nodeType":"YulIdentifier","src":"2877:2:34"},"nativeSrc":"2877:30:34","nodeType":"YulFunctionCall","src":"2877:30:34"},"variableNames":[{"name":"result","nativeSrc":"2867:6:34","nodeType":"YulIdentifier","src":"2867:6:34"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2520:393:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2557:5:34","nodeType":"YulTypedName","src":"2557:5:34","type":""},{"name":"shiftBytes","nativeSrc":"2564:10:34","nodeType":"YulTypedName","src":"2564:10:34","type":""},{"name":"toInsert","nativeSrc":"2576:8:34","nodeType":"YulTypedName","src":"2576:8:34","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2589:6:34","nodeType":"YulTypedName","src":"2589:6:34","type":""}],"src":"2520:393:34"},{"body":{"nativeSrc":"2964:32:34","nodeType":"YulBlock","src":"2964:32:34","statements":[{"nativeSrc":"2974:16:34","nodeType":"YulAssignment","src":"2974:16:34","value":{"name":"value","nativeSrc":"2985:5:34","nodeType":"YulIdentifier","src":"2985:5:34"},"variableNames":[{"name":"cleaned","nativeSrc":"2974:7:34","nodeType":"YulIdentifier","src":"2974:7:34"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2919:77:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2946:5:34","nodeType":"YulTypedName","src":"2946:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2956:7:34","nodeType":"YulTypedName","src":"2956:7:34","type":""}],"src":"2919:77:34"},{"body":{"nativeSrc":"3034:28:34","nodeType":"YulBlock","src":"3034:28:34","statements":[{"nativeSrc":"3044:12:34","nodeType":"YulAssignment","src":"3044:12:34","value":{"name":"value","nativeSrc":"3051:5:34","nodeType":"YulIdentifier","src":"3051:5:34"},"variableNames":[{"name":"ret","nativeSrc":"3044:3:34","nodeType":"YulIdentifier","src":"3044:3:34"}]}]},"name":"identity","nativeSrc":"3002:60:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3020:5:34","nodeType":"YulTypedName","src":"3020:5:34","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3030:3:34","nodeType":"YulTypedName","src":"3030:3:34","type":""}],"src":"3002:60:34"},{"body":{"nativeSrc":"3128:82:34","nodeType":"YulBlock","src":"3128:82:34","statements":[{"nativeSrc":"3138:66:34","nodeType":"YulAssignment","src":"3138:66:34","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3196:5:34","nodeType":"YulIdentifier","src":"3196:5:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3178:17:34","nodeType":"YulIdentifier","src":"3178:17:34"},"nativeSrc":"3178:24:34","nodeType":"YulFunctionCall","src":"3178:24:34"}],"functionName":{"name":"identity","nativeSrc":"3169:8:34","nodeType":"YulIdentifier","src":"3169:8:34"},"nativeSrc":"3169:34:34","nodeType":"YulFunctionCall","src":"3169:34:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3151:17:34","nodeType":"YulIdentifier","src":"3151:17:34"},"nativeSrc":"3151:53:34","nodeType":"YulFunctionCall","src":"3151:53:34"},"variableNames":[{"name":"converted","nativeSrc":"3138:9:34","nodeType":"YulIdentifier","src":"3138:9:34"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3068:142:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3108:5:34","nodeType":"YulTypedName","src":"3108:5:34","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3118:9:34","nodeType":"YulTypedName","src":"3118:9:34","type":""}],"src":"3068:142:34"},{"body":{"nativeSrc":"3263:28:34","nodeType":"YulBlock","src":"3263:28:34","statements":[{"nativeSrc":"3273:12:34","nodeType":"YulAssignment","src":"3273:12:34","value":{"name":"value","nativeSrc":"3280:5:34","nodeType":"YulIdentifier","src":"3280:5:34"},"variableNames":[{"name":"ret","nativeSrc":"3273:3:34","nodeType":"YulIdentifier","src":"3273:3:34"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3216:75:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3249:5:34","nodeType":"YulTypedName","src":"3249:5:34","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3259:3:34","nodeType":"YulTypedName","src":"3259:3:34","type":""}],"src":"3216:75:34"},{"body":{"nativeSrc":"3373:193:34","nodeType":"YulBlock","src":"3373:193:34","statements":[{"nativeSrc":"3383:63:34","nodeType":"YulVariableDeclaration","src":"3383:63:34","value":{"arguments":[{"name":"value_0","nativeSrc":"3438:7:34","nodeType":"YulIdentifier","src":"3438:7:34"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3407:30:34","nodeType":"YulIdentifier","src":"3407:30:34"},"nativeSrc":"3407:39:34","nodeType":"YulFunctionCall","src":"3407:39:34"},"variables":[{"name":"convertedValue_0","nativeSrc":"3387:16:34","nodeType":"YulTypedName","src":"3387:16:34","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3462:4:34","nodeType":"YulIdentifier","src":"3462:4:34"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3502:4:34","nodeType":"YulIdentifier","src":"3502:4:34"}],"functionName":{"name":"sload","nativeSrc":"3496:5:34","nodeType":"YulIdentifier","src":"3496:5:34"},"nativeSrc":"3496:11:34","nodeType":"YulFunctionCall","src":"3496:11:34"},{"name":"offset","nativeSrc":"3509:6:34","nodeType":"YulIdentifier","src":"3509:6:34"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3541:16:34","nodeType":"YulIdentifier","src":"3541:16:34"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3517:23:34","nodeType":"YulIdentifier","src":"3517:23:34"},"nativeSrc":"3517:41:34","nodeType":"YulFunctionCall","src":"3517:41:34"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3468:27:34","nodeType":"YulIdentifier","src":"3468:27:34"},"nativeSrc":"3468:91:34","nodeType":"YulFunctionCall","src":"3468:91:34"}],"functionName":{"name":"sstore","nativeSrc":"3455:6:34","nodeType":"YulIdentifier","src":"3455:6:34"},"nativeSrc":"3455:105:34","nodeType":"YulFunctionCall","src":"3455:105:34"},"nativeSrc":"3455:105:34","nodeType":"YulExpressionStatement","src":"3455:105:34"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3297:269:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3350:4:34","nodeType":"YulTypedName","src":"3350:4:34","type":""},{"name":"offset","nativeSrc":"3356:6:34","nodeType":"YulTypedName","src":"3356:6:34","type":""},{"name":"value_0","nativeSrc":"3364:7:34","nodeType":"YulTypedName","src":"3364:7:34","type":""}],"src":"3297:269:34"},{"body":{"nativeSrc":"3621:24:34","nodeType":"YulBlock","src":"3621:24:34","statements":[{"nativeSrc":"3631:8:34","nodeType":"YulAssignment","src":"3631:8:34","value":{"kind":"number","nativeSrc":"3638:1:34","nodeType":"YulLiteral","src":"3638:1:34","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3631:3:34","nodeType":"YulIdentifier","src":"3631:3:34"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3572:73:34","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3617:3:34","nodeType":"YulTypedName","src":"3617:3:34","type":""}],"src":"3572:73:34"},{"body":{"nativeSrc":"3704:136:34","nodeType":"YulBlock","src":"3704:136:34","statements":[{"nativeSrc":"3714:46:34","nodeType":"YulVariableDeclaration","src":"3714:46:34","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3728:30:34","nodeType":"YulIdentifier","src":"3728:30:34"},"nativeSrc":"3728:32:34","nodeType":"YulFunctionCall","src":"3728:32:34"},"variables":[{"name":"zero_0","nativeSrc":"3718:6:34","nodeType":"YulTypedName","src":"3718:6:34","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3813:4:34","nodeType":"YulIdentifier","src":"3813:4:34"},{"name":"offset","nativeSrc":"3819:6:34","nodeType":"YulIdentifier","src":"3819:6:34"},{"name":"zero_0","nativeSrc":"3827:6:34","nodeType":"YulIdentifier","src":"3827:6:34"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3769:43:34","nodeType":"YulIdentifier","src":"3769:43:34"},"nativeSrc":"3769:65:34","nodeType":"YulFunctionCall","src":"3769:65:34"},"nativeSrc":"3769:65:34","nodeType":"YulExpressionStatement","src":"3769:65:34"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3651:189:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3690:4:34","nodeType":"YulTypedName","src":"3690:4:34","type":""},{"name":"offset","nativeSrc":"3696:6:34","nodeType":"YulTypedName","src":"3696:6:34","type":""}],"src":"3651:189:34"},{"body":{"nativeSrc":"3896:136:34","nodeType":"YulBlock","src":"3896:136:34","statements":[{"body":{"nativeSrc":"3963:63:34","nodeType":"YulBlock","src":"3963:63:34","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"4007:5:34","nodeType":"YulIdentifier","src":"4007:5:34"},{"kind":"number","nativeSrc":"4014:1:34","nodeType":"YulLiteral","src":"4014:1:34","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3977:29:34","nodeType":"YulIdentifier","src":"3977:29:34"},"nativeSrc":"3977:39:34","nodeType":"YulFunctionCall","src":"3977:39:34"},"nativeSrc":"3977:39:34","nodeType":"YulExpressionStatement","src":"3977:39:34"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3916:5:34","nodeType":"YulIdentifier","src":"3916:5:34"},{"name":"end","nativeSrc":"3923:3:34","nodeType":"YulIdentifier","src":"3923:3:34"}],"functionName":{"name":"lt","nativeSrc":"3913:2:34","nodeType":"YulIdentifier","src":"3913:2:34"},"nativeSrc":"3913:14:34","nodeType":"YulFunctionCall","src":"3913:14:34"},"nativeSrc":"3906:120:34","nodeType":"YulForLoop","post":{"nativeSrc":"3928:26:34","nodeType":"YulBlock","src":"3928:26:34","statements":[{"nativeSrc":"3930:22:34","nodeType":"YulAssignment","src":"3930:22:34","value":{"arguments":[{"name":"start","nativeSrc":"3943:5:34","nodeType":"YulIdentifier","src":"3943:5:34"},{"kind":"number","nativeSrc":"3950:1:34","nodeType":"YulLiteral","src":"3950:1:34","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3939:3:34","nodeType":"YulIdentifier","src":"3939:3:34"},"nativeSrc":"3939:13:34","nodeType":"YulFunctionCall","src":"3939:13:34"},"variableNames":[{"name":"start","nativeSrc":"3930:5:34","nodeType":"YulIdentifier","src":"3930:5:34"}]}]},"pre":{"nativeSrc":"3910:2:34","nodeType":"YulBlock","src":"3910:2:34","statements":[]},"src":"3906:120:34"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3846:186:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3884:5:34","nodeType":"YulTypedName","src":"3884:5:34","type":""},{"name":"end","nativeSrc":"3891:3:34","nodeType":"YulTypedName","src":"3891:3:34","type":""}],"src":"3846:186:34"},{"body":{"nativeSrc":"4117:464:34","nodeType":"YulBlock","src":"4117:464:34","statements":[{"body":{"nativeSrc":"4143:431:34","nodeType":"YulBlock","src":"4143:431:34","statements":[{"nativeSrc":"4157:54:34","nodeType":"YulVariableDeclaration","src":"4157:54:34","value":{"arguments":[{"name":"array","nativeSrc":"4205:5:34","nodeType":"YulIdentifier","src":"4205:5:34"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4173:31:34","nodeType":"YulIdentifier","src":"4173:31:34"},"nativeSrc":"4173:38:34","nodeType":"YulFunctionCall","src":"4173:38:34"},"variables":[{"name":"dataArea","nativeSrc":"4161:8:34","nodeType":"YulTypedName","src":"4161:8:34","type":""}]},{"nativeSrc":"4224:63:34","nodeType":"YulVariableDeclaration","src":"4224:63:34","value":{"arguments":[{"name":"dataArea","nativeSrc":"4247:8:34","nodeType":"YulIdentifier","src":"4247:8:34"},{"arguments":[{"name":"startIndex","nativeSrc":"4275:10:34","nodeType":"YulIdentifier","src":"4275:10:34"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4257:17:34","nodeType":"YulIdentifier","src":"4257:17:34"},"nativeSrc":"4257:29:34","nodeType":"YulFunctionCall","src":"4257:29:34"}],"functionName":{"name":"add","nativeSrc":"4243:3:34","nodeType":"YulIdentifier","src":"4243:3:34"},"nativeSrc":"4243:44:34","nodeType":"YulFunctionCall","src":"4243:44:34"},"variables":[{"name":"deleteStart","nativeSrc":"4228:11:34","nodeType":"YulTypedName","src":"4228:11:34","type":""}]},{"body":{"nativeSrc":"4444:27:34","nodeType":"YulBlock","src":"4444:27:34","statements":[{"nativeSrc":"4446:23:34","nodeType":"YulAssignment","src":"4446:23:34","value":{"name":"dataArea","nativeSrc":"4461:8:34","nodeType":"YulIdentifier","src":"4461:8:34"},"variableNames":[{"name":"deleteStart","nativeSrc":"4446:11:34","nodeType":"YulIdentifier","src":"4446:11:34"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4428:10:34","nodeType":"YulIdentifier","src":"4428:10:34"},{"kind":"number","nativeSrc":"4440:2:34","nodeType":"YulLiteral","src":"4440:2:34","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4425:2:34","nodeType":"YulIdentifier","src":"4425:2:34"},"nativeSrc":"4425:18:34","nodeType":"YulFunctionCall","src":"4425:18:34"},"nativeSrc":"4422:49:34","nodeType":"YulIf","src":"4422:49:34"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4513:11:34","nodeType":"YulIdentifier","src":"4513:11:34"},{"arguments":[{"name":"dataArea","nativeSrc":"4530:8:34","nodeType":"YulIdentifier","src":"4530:8:34"},{"arguments":[{"name":"len","nativeSrc":"4558:3:34","nodeType":"YulIdentifier","src":"4558:3:34"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4540:17:34","nodeType":"YulIdentifier","src":"4540:17:34"},"nativeSrc":"4540:22:34","nodeType":"YulFunctionCall","src":"4540:22:34"}],"functionName":{"name":"add","nativeSrc":"4526:3:34","nodeType":"YulIdentifier","src":"4526:3:34"},"nativeSrc":"4526:37:34","nodeType":"YulFunctionCall","src":"4526:37:34"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4484:28:34","nodeType":"YulIdentifier","src":"4484:28:34"},"nativeSrc":"4484:80:34","nodeType":"YulFunctionCall","src":"4484:80:34"},"nativeSrc":"4484:80:34","nodeType":"YulExpressionStatement","src":"4484:80:34"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4134:3:34","nodeType":"YulIdentifier","src":"4134:3:34"},{"kind":"number","nativeSrc":"4139:2:34","nodeType":"YulLiteral","src":"4139:2:34","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4131:2:34","nodeType":"YulIdentifier","src":"4131:2:34"},"nativeSrc":"4131:11:34","nodeType":"YulFunctionCall","src":"4131:11:34"},"nativeSrc":"4128:446:34","nodeType":"YulIf","src":"4128:446:34"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4038:543:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4093:5:34","nodeType":"YulTypedName","src":"4093:5:34","type":""},{"name":"len","nativeSrc":"4100:3:34","nodeType":"YulTypedName","src":"4100:3:34","type":""},{"name":"startIndex","nativeSrc":"4105:10:34","nodeType":"YulTypedName","src":"4105:10:34","type":""}],"src":"4038:543:34"},{"body":{"nativeSrc":"4650:54:34","nodeType":"YulBlock","src":"4650:54:34","statements":[{"nativeSrc":"4660:37:34","nodeType":"YulAssignment","src":"4660:37:34","value":{"arguments":[{"name":"bits","nativeSrc":"4685:4:34","nodeType":"YulIdentifier","src":"4685:4:34"},{"name":"value","nativeSrc":"4691:5:34","nodeType":"YulIdentifier","src":"4691:5:34"}],"functionName":{"name":"shr","nativeSrc":"4681:3:34","nodeType":"YulIdentifier","src":"4681:3:34"},"nativeSrc":"4681:16:34","nodeType":"YulFunctionCall","src":"4681:16:34"},"variableNames":[{"name":"newValue","nativeSrc":"4660:8:34","nodeType":"YulIdentifier","src":"4660:8:34"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4587:117:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4625:4:34","nodeType":"YulTypedName","src":"4625:4:34","type":""},{"name":"value","nativeSrc":"4631:5:34","nodeType":"YulTypedName","src":"4631:5:34","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4641:8:34","nodeType":"YulTypedName","src":"4641:8:34","type":""}],"src":"4587:117:34"},{"body":{"nativeSrc":"4761:118:34","nodeType":"YulBlock","src":"4761:118:34","statements":[{"nativeSrc":"4771:68:34","nodeType":"YulVariableDeclaration","src":"4771:68:34","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4820:1:34","nodeType":"YulLiteral","src":"4820:1:34","type":"","value":"8"},{"name":"bytes","nativeSrc":"4823:5:34","nodeType":"YulIdentifier","src":"4823:5:34"}],"functionName":{"name":"mul","nativeSrc":"4816:3:34","nodeType":"YulIdentifier","src":"4816:3:34"},"nativeSrc":"4816:13:34","nodeType":"YulFunctionCall","src":"4816:13:34"},{"arguments":[{"kind":"number","nativeSrc":"4835:1:34","nodeType":"YulLiteral","src":"4835:1:34","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4831:3:34","nodeType":"YulIdentifier","src":"4831:3:34"},"nativeSrc":"4831:6:34","nodeType":"YulFunctionCall","src":"4831:6:34"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4787:28:34","nodeType":"YulIdentifier","src":"4787:28:34"},"nativeSrc":"4787:51:34","nodeType":"YulFunctionCall","src":"4787:51:34"}],"functionName":{"name":"not","nativeSrc":"4783:3:34","nodeType":"YulIdentifier","src":"4783:3:34"},"nativeSrc":"4783:56:34","nodeType":"YulFunctionCall","src":"4783:56:34"},"variables":[{"name":"mask","nativeSrc":"4775:4:34","nodeType":"YulTypedName","src":"4775:4:34","type":""}]},{"nativeSrc":"4848:25:34","nodeType":"YulAssignment","src":"4848:25:34","value":{"arguments":[{"name":"data","nativeSrc":"4862:4:34","nodeType":"YulIdentifier","src":"4862:4:34"},{"name":"mask","nativeSrc":"4868:4:34","nodeType":"YulIdentifier","src":"4868:4:34"}],"functionName":{"name":"and","nativeSrc":"4858:3:34","nodeType":"YulIdentifier","src":"4858:3:34"},"nativeSrc":"4858:15:34","nodeType":"YulFunctionCall","src":"4858:15:34"},"variableNames":[{"name":"result","nativeSrc":"4848:6:34","nodeType":"YulIdentifier","src":"4848:6:34"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4710:169:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4738:4:34","nodeType":"YulTypedName","src":"4738:4:34","type":""},{"name":"bytes","nativeSrc":"4744:5:34","nodeType":"YulTypedName","src":"4744:5:34","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4754:6:34","nodeType":"YulTypedName","src":"4754:6:34","type":""}],"src":"4710:169:34"},{"body":{"nativeSrc":"4965:214:34","nodeType":"YulBlock","src":"4965:214:34","statements":[{"nativeSrc":"5098:37:34","nodeType":"YulAssignment","src":"5098:37:34","value":{"arguments":[{"name":"data","nativeSrc":"5125:4:34","nodeType":"YulIdentifier","src":"5125:4:34"},{"name":"len","nativeSrc":"5131:3:34","nodeType":"YulIdentifier","src":"5131:3:34"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5106:18:34","nodeType":"YulIdentifier","src":"5106:18:34"},"nativeSrc":"5106:29:34","nodeType":"YulFunctionCall","src":"5106:29:34"},"variableNames":[{"name":"data","nativeSrc":"5098:4:34","nodeType":"YulIdentifier","src":"5098:4:34"}]},{"nativeSrc":"5144:29:34","nodeType":"YulAssignment","src":"5144:29:34","value":{"arguments":[{"name":"data","nativeSrc":"5155:4:34","nodeType":"YulIdentifier","src":"5155:4:34"},{"arguments":[{"kind":"number","nativeSrc":"5165:1:34","nodeType":"YulLiteral","src":"5165:1:34","type":"","value":"2"},{"name":"len","nativeSrc":"5168:3:34","nodeType":"YulIdentifier","src":"5168:3:34"}],"functionName":{"name":"mul","nativeSrc":"5161:3:34","nodeType":"YulIdentifier","src":"5161:3:34"},"nativeSrc":"5161:11:34","nodeType":"YulFunctionCall","src":"5161:11:34"}],"functionName":{"name":"or","nativeSrc":"5152:2:34","nodeType":"YulIdentifier","src":"5152:2:34"},"nativeSrc":"5152:21:34","nodeType":"YulFunctionCall","src":"5152:21:34"},"variableNames":[{"name":"used","nativeSrc":"5144:4:34","nodeType":"YulIdentifier","src":"5144:4:34"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4884:295:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4946:4:34","nodeType":"YulTypedName","src":"4946:4:34","type":""},{"name":"len","nativeSrc":"4952:3:34","nodeType":"YulTypedName","src":"4952:3:34","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4960:4:34","nodeType":"YulTypedName","src":"4960:4:34","type":""}],"src":"4884:295:34"},{"body":{"nativeSrc":"5276:1303:34","nodeType":"YulBlock","src":"5276:1303:34","statements":[{"nativeSrc":"5287:51:34","nodeType":"YulVariableDeclaration","src":"5287:51:34","value":{"arguments":[{"name":"src","nativeSrc":"5334:3:34","nodeType":"YulIdentifier","src":"5334:3:34"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5301:32:34","nodeType":"YulIdentifier","src":"5301:32:34"},"nativeSrc":"5301:37:34","nodeType":"YulFunctionCall","src":"5301:37:34"},"variables":[{"name":"newLen","nativeSrc":"5291:6:34","nodeType":"YulTypedName","src":"5291:6:34","type":""}]},{"body":{"nativeSrc":"5423:22:34","nodeType":"YulBlock","src":"5423:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5425:16:34","nodeType":"YulIdentifier","src":"5425:16:34"},"nativeSrc":"5425:18:34","nodeType":"YulFunctionCall","src":"5425:18:34"},"nativeSrc":"5425:18:34","nodeType":"YulExpressionStatement","src":"5425:18:34"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5395:6:34","nodeType":"YulIdentifier","src":"5395:6:34"},{"kind":"number","nativeSrc":"5403:18:34","nodeType":"YulLiteral","src":"5403:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5392:2:34","nodeType":"YulIdentifier","src":"5392:2:34"},"nativeSrc":"5392:30:34","nodeType":"YulFunctionCall","src":"5392:30:34"},"nativeSrc":"5389:56:34","nodeType":"YulIf","src":"5389:56:34"},{"nativeSrc":"5455:52:34","nodeType":"YulVariableDeclaration","src":"5455:52:34","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5501:4:34","nodeType":"YulIdentifier","src":"5501:4:34"}],"functionName":{"name":"sload","nativeSrc":"5495:5:34","nodeType":"YulIdentifier","src":"5495:5:34"},"nativeSrc":"5495:11:34","nodeType":"YulFunctionCall","src":"5495:11:34"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5469:25:34","nodeType":"YulIdentifier","src":"5469:25:34"},"nativeSrc":"5469:38:34","nodeType":"YulFunctionCall","src":"5469:38:34"},"variables":[{"name":"oldLen","nativeSrc":"5459:6:34","nodeType":"YulTypedName","src":"5459:6:34","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5600:4:34","nodeType":"YulIdentifier","src":"5600:4:34"},{"name":"oldLen","nativeSrc":"5606:6:34","nodeType":"YulIdentifier","src":"5606:6:34"},{"name":"newLen","nativeSrc":"5614:6:34","nodeType":"YulIdentifier","src":"5614:6:34"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5554:45:34","nodeType":"YulIdentifier","src":"5554:45:34"},"nativeSrc":"5554:67:34","nodeType":"YulFunctionCall","src":"5554:67:34"},"nativeSrc":"5554:67:34","nodeType":"YulExpressionStatement","src":"5554:67:34"},{"nativeSrc":"5631:18:34","nodeType":"YulVariableDeclaration","src":"5631:18:34","value":{"kind":"number","nativeSrc":"5648:1:34","nodeType":"YulLiteral","src":"5648:1:34","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5635:9:34","nodeType":"YulTypedName","src":"5635:9:34","type":""}]},{"nativeSrc":"5659:17:34","nodeType":"YulAssignment","src":"5659:17:34","value":{"kind":"number","nativeSrc":"5672:4:34","nodeType":"YulLiteral","src":"5672:4:34","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5659:9:34","nodeType":"YulIdentifier","src":"5659:9:34"}]},{"cases":[{"body":{"nativeSrc":"5723:611:34","nodeType":"YulBlock","src":"5723:611:34","statements":[{"nativeSrc":"5737:37:34","nodeType":"YulVariableDeclaration","src":"5737:37:34","value":{"arguments":[{"name":"newLen","nativeSrc":"5756:6:34","nodeType":"YulIdentifier","src":"5756:6:34"},{"arguments":[{"kind":"number","nativeSrc":"5768:4:34","nodeType":"YulLiteral","src":"5768:4:34","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5764:3:34","nodeType":"YulIdentifier","src":"5764:3:34"},"nativeSrc":"5764:9:34","nodeType":"YulFunctionCall","src":"5764:9:34"}],"functionName":{"name":"and","nativeSrc":"5752:3:34","nodeType":"YulIdentifier","src":"5752:3:34"},"nativeSrc":"5752:22:34","nodeType":"YulFunctionCall","src":"5752:22:34"},"variables":[{"name":"loopEnd","nativeSrc":"5741:7:34","nodeType":"YulTypedName","src":"5741:7:34","type":""}]},{"nativeSrc":"5788:51:34","nodeType":"YulVariableDeclaration","src":"5788:51:34","value":{"arguments":[{"name":"slot","nativeSrc":"5834:4:34","nodeType":"YulIdentifier","src":"5834:4:34"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5802:31:34","nodeType":"YulIdentifier","src":"5802:31:34"},"nativeSrc":"5802:37:34","nodeType":"YulFunctionCall","src":"5802:37:34"},"variables":[{"name":"dstPtr","nativeSrc":"5792:6:34","nodeType":"YulTypedName","src":"5792:6:34","type":""}]},{"nativeSrc":"5852:10:34","nodeType":"YulVariableDeclaration","src":"5852:10:34","value":{"kind":"number","nativeSrc":"5861:1:34","nodeType":"YulLiteral","src":"5861:1:34","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5856:1:34","nodeType":"YulTypedName","src":"5856:1:34","type":""}]},{"body":{"nativeSrc":"5920:163:34","nodeType":"YulBlock","src":"5920:163:34","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5945:6:34","nodeType":"YulIdentifier","src":"5945:6:34"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5963:3:34","nodeType":"YulIdentifier","src":"5963:3:34"},{"name":"srcOffset","nativeSrc":"5968:9:34","nodeType":"YulIdentifier","src":"5968:9:34"}],"functionName":{"name":"add","nativeSrc":"5959:3:34","nodeType":"YulIdentifier","src":"5959:3:34"},"nativeSrc":"5959:19:34","nodeType":"YulFunctionCall","src":"5959:19:34"}],"functionName":{"name":"mload","nativeSrc":"5953:5:34","nodeType":"YulIdentifier","src":"5953:5:34"},"nativeSrc":"5953:26:34","nodeType":"YulFunctionCall","src":"5953:26:34"}],"functionName":{"name":"sstore","nativeSrc":"5938:6:34","nodeType":"YulIdentifier","src":"5938:6:34"},"nativeSrc":"5938:42:34","nodeType":"YulFunctionCall","src":"5938:42:34"},"nativeSrc":"5938:42:34","nodeType":"YulExpressionStatement","src":"5938:42:34"},{"nativeSrc":"5997:24:34","nodeType":"YulAssignment","src":"5997:24:34","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6011:6:34","nodeType":"YulIdentifier","src":"6011:6:34"},{"kind":"number","nativeSrc":"6019:1:34","nodeType":"YulLiteral","src":"6019:1:34","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6007:3:34","nodeType":"YulIdentifier","src":"6007:3:34"},"nativeSrc":"6007:14:34","nodeType":"YulFunctionCall","src":"6007:14:34"},"variableNames":[{"name":"dstPtr","nativeSrc":"5997:6:34","nodeType":"YulIdentifier","src":"5997:6:34"}]},{"nativeSrc":"6038:31:34","nodeType":"YulAssignment","src":"6038:31:34","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6055:9:34","nodeType":"YulIdentifier","src":"6055:9:34"},{"kind":"number","nativeSrc":"6066:2:34","nodeType":"YulLiteral","src":"6066:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6051:3:34","nodeType":"YulIdentifier","src":"6051:3:34"},"nativeSrc":"6051:18:34","nodeType":"YulFunctionCall","src":"6051:18:34"},"variableNames":[{"name":"srcOffset","nativeSrc":"6038:9:34","nodeType":"YulIdentifier","src":"6038:9:34"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5886:1:34","nodeType":"YulIdentifier","src":"5886:1:34"},{"name":"loopEnd","nativeSrc":"5889:7:34","nodeType":"YulIdentifier","src":"5889:7:34"}],"functionName":{"name":"lt","nativeSrc":"5883:2:34","nodeType":"YulIdentifier","src":"5883:2:34"},"nativeSrc":"5883:14:34","nodeType":"YulFunctionCall","src":"5883:14:34"},"nativeSrc":"5875:208:34","nodeType":"YulForLoop","post":{"nativeSrc":"5898:21:34","nodeType":"YulBlock","src":"5898:21:34","statements":[{"nativeSrc":"5900:17:34","nodeType":"YulAssignment","src":"5900:17:34","value":{"arguments":[{"name":"i","nativeSrc":"5909:1:34","nodeType":"YulIdentifier","src":"5909:1:34"},{"kind":"number","nativeSrc":"5912:4:34","nodeType":"YulLiteral","src":"5912:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5905:3:34","nodeType":"YulIdentifier","src":"5905:3:34"},"nativeSrc":"5905:12:34","nodeType":"YulFunctionCall","src":"5905:12:34"},"variableNames":[{"name":"i","nativeSrc":"5900:1:34","nodeType":"YulIdentifier","src":"5900:1:34"}]}]},"pre":{"nativeSrc":"5879:3:34","nodeType":"YulBlock","src":"5879:3:34","statements":[]},"src":"5875:208:34"},{"body":{"nativeSrc":"6119:156:34","nodeType":"YulBlock","src":"6119:156:34","statements":[{"nativeSrc":"6137:43:34","nodeType":"YulVariableDeclaration","src":"6137:43:34","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6164:3:34","nodeType":"YulIdentifier","src":"6164:3:34"},{"name":"srcOffset","nativeSrc":"6169:9:34","nodeType":"YulIdentifier","src":"6169:9:34"}],"functionName":{"name":"add","nativeSrc":"6160:3:34","nodeType":"YulIdentifier","src":"6160:3:34"},"nativeSrc":"6160:19:34","nodeType":"YulFunctionCall","src":"6160:19:34"}],"functionName":{"name":"mload","nativeSrc":"6154:5:34","nodeType":"YulIdentifier","src":"6154:5:34"},"nativeSrc":"6154:26:34","nodeType":"YulFunctionCall","src":"6154:26:34"},"variables":[{"name":"lastValue","nativeSrc":"6141:9:34","nodeType":"YulTypedName","src":"6141:9:34","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6204:6:34","nodeType":"YulIdentifier","src":"6204:6:34"},{"arguments":[{"name":"lastValue","nativeSrc":"6231:9:34","nodeType":"YulIdentifier","src":"6231:9:34"},{"arguments":[{"name":"newLen","nativeSrc":"6246:6:34","nodeType":"YulIdentifier","src":"6246:6:34"},{"kind":"number","nativeSrc":"6254:4:34","nodeType":"YulLiteral","src":"6254:4:34","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6242:3:34","nodeType":"YulIdentifier","src":"6242:3:34"},"nativeSrc":"6242:17:34","nodeType":"YulFunctionCall","src":"6242:17:34"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6212:18:34","nodeType":"YulIdentifier","src":"6212:18:34"},"nativeSrc":"6212:48:34","nodeType":"YulFunctionCall","src":"6212:48:34"}],"functionName":{"name":"sstore","nativeSrc":"6197:6:34","nodeType":"YulIdentifier","src":"6197:6:34"},"nativeSrc":"6197:64:34","nodeType":"YulFunctionCall","src":"6197:64:34"},"nativeSrc":"6197:64:34","nodeType":"YulExpressionStatement","src":"6197:64:34"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6102:7:34","nodeType":"YulIdentifier","src":"6102:7:34"},{"name":"newLen","nativeSrc":"6111:6:34","nodeType":"YulIdentifier","src":"6111:6:34"}],"functionName":{"name":"lt","nativeSrc":"6099:2:34","nodeType":"YulIdentifier","src":"6099:2:34"},"nativeSrc":"6099:19:34","nodeType":"YulFunctionCall","src":"6099:19:34"},"nativeSrc":"6096:179:34","nodeType":"YulIf","src":"6096:179:34"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6295:4:34","nodeType":"YulIdentifier","src":"6295:4:34"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6309:6:34","nodeType":"YulIdentifier","src":"6309:6:34"},{"kind":"number","nativeSrc":"6317:1:34","nodeType":"YulLiteral","src":"6317:1:34","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6305:3:34","nodeType":"YulIdentifier","src":"6305:3:34"},"nativeSrc":"6305:14:34","nodeType":"YulFunctionCall","src":"6305:14:34"},{"kind":"number","nativeSrc":"6321:1:34","nodeType":"YulLiteral","src":"6321:1:34","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6301:3:34","nodeType":"YulIdentifier","src":"6301:3:34"},"nativeSrc":"6301:22:34","nodeType":"YulFunctionCall","src":"6301:22:34"}],"functionName":{"name":"sstore","nativeSrc":"6288:6:34","nodeType":"YulIdentifier","src":"6288:6:34"},"nativeSrc":"6288:36:34","nodeType":"YulFunctionCall","src":"6288:36:34"},"nativeSrc":"6288:36:34","nodeType":"YulExpressionStatement","src":"6288:36:34"}]},"nativeSrc":"5716:618:34","nodeType":"YulCase","src":"5716:618:34","value":{"kind":"number","nativeSrc":"5721:1:34","nodeType":"YulLiteral","src":"5721:1:34","type":"","value":"1"}},{"body":{"nativeSrc":"6351:222:34","nodeType":"YulBlock","src":"6351:222:34","statements":[{"nativeSrc":"6365:14:34","nodeType":"YulVariableDeclaration","src":"6365:14:34","value":{"kind":"number","nativeSrc":"6378:1:34","nodeType":"YulLiteral","src":"6378:1:34","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6369:5:34","nodeType":"YulTypedName","src":"6369:5:34","type":""}]},{"body":{"nativeSrc":"6402:67:34","nodeType":"YulBlock","src":"6402:67:34","statements":[{"nativeSrc":"6420:35:34","nodeType":"YulAssignment","src":"6420:35:34","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6439:3:34","nodeType":"YulIdentifier","src":"6439:3:34"},{"name":"srcOffset","nativeSrc":"6444:9:34","nodeType":"YulIdentifier","src":"6444:9:34"}],"functionName":{"name":"add","nativeSrc":"6435:3:34","nodeType":"YulIdentifier","src":"6435:3:34"},"nativeSrc":"6435:19:34","nodeType":"YulFunctionCall","src":"6435:19:34"}],"functionName":{"name":"mload","nativeSrc":"6429:5:34","nodeType":"YulIdentifier","src":"6429:5:34"},"nativeSrc":"6429:26:34","nodeType":"YulFunctionCall","src":"6429:26:34"},"variableNames":[{"name":"value","nativeSrc":"6420:5:34","nodeType":"YulIdentifier","src":"6420:5:34"}]}]},"condition":{"name":"newLen","nativeSrc":"6395:6:34","nodeType":"YulIdentifier","src":"6395:6:34"},"nativeSrc":"6392:77:34","nodeType":"YulIf","src":"6392:77:34"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6489:4:34","nodeType":"YulIdentifier","src":"6489:4:34"},{"arguments":[{"name":"value","nativeSrc":"6548:5:34","nodeType":"YulIdentifier","src":"6548:5:34"},{"name":"newLen","nativeSrc":"6555:6:34","nodeType":"YulIdentifier","src":"6555:6:34"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6495:52:34","nodeType":"YulIdentifier","src":"6495:52:34"},"nativeSrc":"6495:67:34","nodeType":"YulFunctionCall","src":"6495:67:34"}],"functionName":{"name":"sstore","nativeSrc":"6482:6:34","nodeType":"YulIdentifier","src":"6482:6:34"},"nativeSrc":"6482:81:34","nodeType":"YulFunctionCall","src":"6482:81:34"},"nativeSrc":"6482:81:34","nodeType":"YulExpressionStatement","src":"6482:81:34"}]},"nativeSrc":"6343:230:34","nodeType":"YulCase","src":"6343:230:34","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5696:6:34","nodeType":"YulIdentifier","src":"5696:6:34"},{"kind":"number","nativeSrc":"5704:2:34","nodeType":"YulLiteral","src":"5704:2:34","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5693:2:34","nodeType":"YulIdentifier","src":"5693:2:34"},"nativeSrc":"5693:14:34","nodeType":"YulFunctionCall","src":"5693:14:34"},"nativeSrc":"5686:887:34","nodeType":"YulSwitch","src":"5686:887:34"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5184:1395:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5265:4:34","nodeType":"YulTypedName","src":"5265:4:34","type":""},{"name":"src","nativeSrc":"5271:3:34","nodeType":"YulTypedName","src":"5271:3:34","type":""}],"src":"5184:1395:34"},{"body":{"nativeSrc":"6650:53:34","nodeType":"YulBlock","src":"6650:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6667:3:34","nodeType":"YulIdentifier","src":"6667:3:34"},{"arguments":[{"name":"value","nativeSrc":"6690:5:34","nodeType":"YulIdentifier","src":"6690:5:34"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6672:17:34","nodeType":"YulIdentifier","src":"6672:17:34"},"nativeSrc":"6672:24:34","nodeType":"YulFunctionCall","src":"6672:24:34"}],"functionName":{"name":"mstore","nativeSrc":"6660:6:34","nodeType":"YulIdentifier","src":"6660:6:34"},"nativeSrc":"6660:37:34","nodeType":"YulFunctionCall","src":"6660:37:34"},"nativeSrc":"6660:37:34","nodeType":"YulExpressionStatement","src":"6660:37:34"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6585:118:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6638:5:34","nodeType":"YulTypedName","src":"6638:5:34","type":""},{"name":"pos","nativeSrc":"6645:3:34","nodeType":"YulTypedName","src":"6645:3:34","type":""}],"src":"6585:118:34"},{"body":{"nativeSrc":"6807:124:34","nodeType":"YulBlock","src":"6807:124:34","statements":[{"nativeSrc":"6817:26:34","nodeType":"YulAssignment","src":"6817:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"6829:9:34","nodeType":"YulIdentifier","src":"6829:9:34"},{"kind":"number","nativeSrc":"6840:2:34","nodeType":"YulLiteral","src":"6840:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6825:3:34","nodeType":"YulIdentifier","src":"6825:3:34"},"nativeSrc":"6825:18:34","nodeType":"YulFunctionCall","src":"6825:18:34"},"variableNames":[{"name":"tail","nativeSrc":"6817:4:34","nodeType":"YulIdentifier","src":"6817:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6897:6:34","nodeType":"YulIdentifier","src":"6897:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"6910:9:34","nodeType":"YulIdentifier","src":"6910:9:34"},{"kind":"number","nativeSrc":"6921:1:34","nodeType":"YulLiteral","src":"6921:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6906:3:34","nodeType":"YulIdentifier","src":"6906:3:34"},"nativeSrc":"6906:17:34","nodeType":"YulFunctionCall","src":"6906:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6853:43:34","nodeType":"YulIdentifier","src":"6853:43:34"},"nativeSrc":"6853:71:34","nodeType":"YulFunctionCall","src":"6853:71:34"},"nativeSrc":"6853:71:34","nodeType":"YulExpressionStatement","src":"6853:71:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6709:222:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6779:9:34","nodeType":"YulTypedName","src":"6779:9:34","type":""},{"name":"value0","nativeSrc":"6791:6:34","nodeType":"YulTypedName","src":"6791:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6802:4:34","nodeType":"YulTypedName","src":"6802:4:34","type":""}],"src":"6709:222:34"},{"body":{"nativeSrc":"6965:152:34","nodeType":"YulBlock","src":"6965:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6982:1:34","nodeType":"YulLiteral","src":"6982:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"6985:77:34","nodeType":"YulLiteral","src":"6985:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6975:6:34","nodeType":"YulIdentifier","src":"6975:6:34"},"nativeSrc":"6975:88:34","nodeType":"YulFunctionCall","src":"6975:88:34"},"nativeSrc":"6975:88:34","nodeType":"YulExpressionStatement","src":"6975:88:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7079:1:34","nodeType":"YulLiteral","src":"7079:1:34","type":"","value":"4"},{"kind":"number","nativeSrc":"7082:4:34","nodeType":"YulLiteral","src":"7082:4:34","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7072:6:34","nodeType":"YulIdentifier","src":"7072:6:34"},"nativeSrc":"7072:15:34","nodeType":"YulFunctionCall","src":"7072:15:34"},"nativeSrc":"7072:15:34","nodeType":"YulExpressionStatement","src":"7072:15:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7103:1:34","nodeType":"YulLiteral","src":"7103:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"7106:4:34","nodeType":"YulLiteral","src":"7106:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7096:6:34","nodeType":"YulIdentifier","src":"7096:6:34"},"nativeSrc":"7096:15:34","nodeType":"YulFunctionCall","src":"7096:15:34"},"nativeSrc":"7096:15:34","nodeType":"YulExpressionStatement","src":"7096:15:34"}]},"name":"panic_error_0x11","nativeSrc":"6937:180:34","nodeType":"YulFunctionDefinition","src":"6937:180:34"},{"body":{"nativeSrc":"7174:51:34","nodeType":"YulBlock","src":"7174:51:34","statements":[{"nativeSrc":"7184:34:34","nodeType":"YulAssignment","src":"7184:34:34","value":{"arguments":[{"kind":"number","nativeSrc":"7209:1:34","nodeType":"YulLiteral","src":"7209:1:34","type":"","value":"1"},{"name":"value","nativeSrc":"7212:5:34","nodeType":"YulIdentifier","src":"7212:5:34"}],"functionName":{"name":"shr","nativeSrc":"7205:3:34","nodeType":"YulIdentifier","src":"7205:3:34"},"nativeSrc":"7205:13:34","nodeType":"YulFunctionCall","src":"7205:13:34"},"variableNames":[{"name":"newValue","nativeSrc":"7184:8:34","nodeType":"YulIdentifier","src":"7184:8:34"}]}]},"name":"shift_right_1_unsigned","nativeSrc":"7123:102:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7155:5:34","nodeType":"YulTypedName","src":"7155:5:34","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7165:8:34","nodeType":"YulTypedName","src":"7165:8:34","type":""}],"src":"7123:102:34"},{"body":{"nativeSrc":"7304:775:34","nodeType":"YulBlock","src":"7304:775:34","statements":[{"nativeSrc":"7314:15:34","nodeType":"YulAssignment","src":"7314:15:34","value":{"name":"_power","nativeSrc":"7323:6:34","nodeType":"YulIdentifier","src":"7323:6:34"},"variableNames":[{"name":"power","nativeSrc":"7314:5:34","nodeType":"YulIdentifier","src":"7314:5:34"}]},{"nativeSrc":"7338:14:34","nodeType":"YulAssignment","src":"7338:14:34","value":{"name":"_base","nativeSrc":"7347:5:34","nodeType":"YulIdentifier","src":"7347:5:34"},"variableNames":[{"name":"base","nativeSrc":"7338:4:34","nodeType":"YulIdentifier","src":"7338:4:34"}]},{"body":{"nativeSrc":"7396:677:34","nodeType":"YulBlock","src":"7396:677:34","statements":[{"body":{"nativeSrc":"7484:22:34","nodeType":"YulBlock","src":"7484:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7486:16:34","nodeType":"YulIdentifier","src":"7486:16:34"},"nativeSrc":"7486:18:34","nodeType":"YulFunctionCall","src":"7486:18:34"},"nativeSrc":"7486:18:34","nodeType":"YulExpressionStatement","src":"7486:18:34"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"7462:4:34","nodeType":"YulIdentifier","src":"7462:4:34"},{"arguments":[{"name":"max","nativeSrc":"7472:3:34","nodeType":"YulIdentifier","src":"7472:3:34"},{"name":"base","nativeSrc":"7477:4:34","nodeType":"YulIdentifier","src":"7477:4:34"}],"functionName":{"name":"div","nativeSrc":"7468:3:34","nodeType":"YulIdentifier","src":"7468:3:34"},"nativeSrc":"7468:14:34","nodeType":"YulFunctionCall","src":"7468:14:34"}],"functionName":{"name":"gt","nativeSrc":"7459:2:34","nodeType":"YulIdentifier","src":"7459:2:34"},"nativeSrc":"7459:24:34","nodeType":"YulFunctionCall","src":"7459:24:34"},"nativeSrc":"7456:50:34","nodeType":"YulIf","src":"7456:50:34"},{"body":{"nativeSrc":"7551:419:34","nodeType":"YulBlock","src":"7551:419:34","statements":[{"nativeSrc":"7931:25:34","nodeType":"YulAssignment","src":"7931:25:34","value":{"arguments":[{"name":"power","nativeSrc":"7944:5:34","nodeType":"YulIdentifier","src":"7944:5:34"},{"name":"base","nativeSrc":"7951:4:34","nodeType":"YulIdentifier","src":"7951:4:34"}],"functionName":{"name":"mul","nativeSrc":"7940:3:34","nodeType":"YulIdentifier","src":"7940:3:34"},"nativeSrc":"7940:16:34","nodeType":"YulFunctionCall","src":"7940:16:34"},"variableNames":[{"name":"power","nativeSrc":"7931:5:34","nodeType":"YulIdentifier","src":"7931:5:34"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7526:8:34","nodeType":"YulIdentifier","src":"7526:8:34"},{"kind":"number","nativeSrc":"7536:1:34","nodeType":"YulLiteral","src":"7536:1:34","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"7522:3:34","nodeType":"YulIdentifier","src":"7522:3:34"},"nativeSrc":"7522:16:34","nodeType":"YulFunctionCall","src":"7522:16:34"},"nativeSrc":"7519:451:34","nodeType":"YulIf","src":"7519:451:34"},{"nativeSrc":"7983:23:34","nodeType":"YulAssignment","src":"7983:23:34","value":{"arguments":[{"name":"base","nativeSrc":"7995:4:34","nodeType":"YulIdentifier","src":"7995:4:34"},{"name":"base","nativeSrc":"8001:4:34","nodeType":"YulIdentifier","src":"8001:4:34"}],"functionName":{"name":"mul","nativeSrc":"7991:3:34","nodeType":"YulIdentifier","src":"7991:3:34"},"nativeSrc":"7991:15:34","nodeType":"YulFunctionCall","src":"7991:15:34"},"variableNames":[{"name":"base","nativeSrc":"7983:4:34","nodeType":"YulIdentifier","src":"7983:4:34"}]},{"nativeSrc":"8019:44:34","nodeType":"YulAssignment","src":"8019:44:34","value":{"arguments":[{"name":"exponent","nativeSrc":"8054:8:34","nodeType":"YulIdentifier","src":"8054:8:34"}],"functionName":{"name":"shift_right_1_unsigned","nativeSrc":"8031:22:34","nodeType":"YulIdentifier","src":"8031:22:34"},"nativeSrc":"8031:32:34","nodeType":"YulFunctionCall","src":"8031:32:34"},"variableNames":[{"name":"exponent","nativeSrc":"8019:8:34","nodeType":"YulIdentifier","src":"8019:8:34"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7372:8:34","nodeType":"YulIdentifier","src":"7372:8:34"},{"kind":"number","nativeSrc":"7382:1:34","nodeType":"YulLiteral","src":"7382:1:34","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"7369:2:34","nodeType":"YulIdentifier","src":"7369:2:34"},"nativeSrc":"7369:15:34","nodeType":"YulFunctionCall","src":"7369:15:34"},"nativeSrc":"7361:712:34","nodeType":"YulForLoop","post":{"nativeSrc":"7385:2:34","nodeType":"YulBlock","src":"7385:2:34","statements":[]},"pre":{"nativeSrc":"7365:3:34","nodeType":"YulBlock","src":"7365:3:34","statements":[]},"src":"7361:712:34"}]},"name":"checked_exp_helper","nativeSrc":"7231:848:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nativeSrc":"7259:6:34","nodeType":"YulTypedName","src":"7259:6:34","type":""},{"name":"_base","nativeSrc":"7267:5:34","nodeType":"YulTypedName","src":"7267:5:34","type":""},{"name":"exponent","nativeSrc":"7274:8:34","nodeType":"YulTypedName","src":"7274:8:34","type":""},{"name":"max","nativeSrc":"7284:3:34","nodeType":"YulTypedName","src":"7284:3:34","type":""}],"returnVariables":[{"name":"power","nativeSrc":"7292:5:34","nodeType":"YulTypedName","src":"7292:5:34","type":""},{"name":"base","nativeSrc":"7299:4:34","nodeType":"YulTypedName","src":"7299:4:34","type":""}],"src":"7231:848:34"},{"body":{"nativeSrc":"8145:1013:34","nodeType":"YulBlock","src":"8145:1013:34","statements":[{"body":{"nativeSrc":"8340:20:34","nodeType":"YulBlock","src":"8340:20:34","statements":[{"nativeSrc":"8342:10:34","nodeType":"YulAssignment","src":"8342:10:34","value":{"kind":"number","nativeSrc":"8351:1:34","nodeType":"YulLiteral","src":"8351:1:34","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"8342:5:34","nodeType":"YulIdentifier","src":"8342:5:34"}]},{"nativeSrc":"8353:5:34","nodeType":"YulLeave","src":"8353:5:34"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"8330:8:34","nodeType":"YulIdentifier","src":"8330:8:34"}],"functionName":{"name":"iszero","nativeSrc":"8323:6:34","nodeType":"YulIdentifier","src":"8323:6:34"},"nativeSrc":"8323:16:34","nodeType":"YulFunctionCall","src":"8323:16:34"},"nativeSrc":"8320:40:34","nodeType":"YulIf","src":"8320:40:34"},{"body":{"nativeSrc":"8385:20:34","nodeType":"YulBlock","src":"8385:20:34","statements":[{"nativeSrc":"8387:10:34","nodeType":"YulAssignment","src":"8387:10:34","value":{"kind":"number","nativeSrc":"8396:1:34","nodeType":"YulLiteral","src":"8396:1:34","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"8387:5:34","nodeType":"YulIdentifier","src":"8387:5:34"}]},{"nativeSrc":"8398:5:34","nodeType":"YulLeave","src":"8398:5:34"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"8379:4:34","nodeType":"YulIdentifier","src":"8379:4:34"}],"functionName":{"name":"iszero","nativeSrc":"8372:6:34","nodeType":"YulIdentifier","src":"8372:6:34"},"nativeSrc":"8372:12:34","nodeType":"YulFunctionCall","src":"8372:12:34"},"nativeSrc":"8369:36:34","nodeType":"YulIf","src":"8369:36:34"},{"cases":[{"body":{"nativeSrc":"8515:20:34","nodeType":"YulBlock","src":"8515:20:34","statements":[{"nativeSrc":"8517:10:34","nodeType":"YulAssignment","src":"8517:10:34","value":{"kind":"number","nativeSrc":"8526:1:34","nodeType":"YulLiteral","src":"8526:1:34","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"8517:5:34","nodeType":"YulIdentifier","src":"8517:5:34"}]},{"nativeSrc":"8528:5:34","nodeType":"YulLeave","src":"8528:5:34"}]},"nativeSrc":"8508:27:34","nodeType":"YulCase","src":"8508:27:34","value":{"kind":"number","nativeSrc":"8513:1:34","nodeType":"YulLiteral","src":"8513:1:34","type":"","value":"1"}},{"body":{"nativeSrc":"8559:176:34","nodeType":"YulBlock","src":"8559:176:34","statements":[{"body":{"nativeSrc":"8594:22:34","nodeType":"YulBlock","src":"8594:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8596:16:34","nodeType":"YulIdentifier","src":"8596:16:34"},"nativeSrc":"8596:18:34","nodeType":"YulFunctionCall","src":"8596:18:34"},"nativeSrc":"8596:18:34","nodeType":"YulExpressionStatement","src":"8596:18:34"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"8579:8:34","nodeType":"YulIdentifier","src":"8579:8:34"},{"kind":"number","nativeSrc":"8589:3:34","nodeType":"YulLiteral","src":"8589:3:34","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"8576:2:34","nodeType":"YulIdentifier","src":"8576:2:34"},"nativeSrc":"8576:17:34","nodeType":"YulFunctionCall","src":"8576:17:34"},"nativeSrc":"8573:43:34","nodeType":"YulIf","src":"8573:43:34"},{"nativeSrc":"8629:25:34","nodeType":"YulAssignment","src":"8629:25:34","value":{"arguments":[{"kind":"number","nativeSrc":"8642:1:34","nodeType":"YulLiteral","src":"8642:1:34","type":"","value":"2"},{"name":"exponent","nativeSrc":"8645:8:34","nodeType":"YulIdentifier","src":"8645:8:34"}],"functionName":{"name":"exp","nativeSrc":"8638:3:34","nodeType":"YulIdentifier","src":"8638:3:34"},"nativeSrc":"8638:16:34","nodeType":"YulFunctionCall","src":"8638:16:34"},"variableNames":[{"name":"power","nativeSrc":"8629:5:34","nodeType":"YulIdentifier","src":"8629:5:34"}]},{"body":{"nativeSrc":"8685:22:34","nodeType":"YulBlock","src":"8685:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8687:16:34","nodeType":"YulIdentifier","src":"8687:16:34"},"nativeSrc":"8687:18:34","nodeType":"YulFunctionCall","src":"8687:18:34"},"nativeSrc":"8687:18:34","nodeType":"YulExpressionStatement","src":"8687:18:34"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"8673:5:34","nodeType":"YulIdentifier","src":"8673:5:34"},{"name":"max","nativeSrc":"8680:3:34","nodeType":"YulIdentifier","src":"8680:3:34"}],"functionName":{"name":"gt","nativeSrc":"8670:2:34","nodeType":"YulIdentifier","src":"8670:2:34"},"nativeSrc":"8670:14:34","nodeType":"YulFunctionCall","src":"8670:14:34"},"nativeSrc":"8667:40:34","nodeType":"YulIf","src":"8667:40:34"},{"nativeSrc":"8720:5:34","nodeType":"YulLeave","src":"8720:5:34"}]},"nativeSrc":"8544:191:34","nodeType":"YulCase","src":"8544:191:34","value":{"kind":"number","nativeSrc":"8549:1:34","nodeType":"YulLiteral","src":"8549:1:34","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"8465:4:34","nodeType":"YulIdentifier","src":"8465:4:34"},"nativeSrc":"8458:277:34","nodeType":"YulSwitch","src":"8458:277:34"},{"body":{"nativeSrc":"8867:123:34","nodeType":"YulBlock","src":"8867:123:34","statements":[{"nativeSrc":"8881:28:34","nodeType":"YulAssignment","src":"8881:28:34","value":{"arguments":[{"name":"base","nativeSrc":"8894:4:34","nodeType":"YulIdentifier","src":"8894:4:34"},{"name":"exponent","nativeSrc":"8900:8:34","nodeType":"YulIdentifier","src":"8900:8:34"}],"functionName":{"name":"exp","nativeSrc":"8890:3:34","nodeType":"YulIdentifier","src":"8890:3:34"},"nativeSrc":"8890:19:34","nodeType":"YulFunctionCall","src":"8890:19:34"},"variableNames":[{"name":"power","nativeSrc":"8881:5:34","nodeType":"YulIdentifier","src":"8881:5:34"}]},{"body":{"nativeSrc":"8940:22:34","nodeType":"YulBlock","src":"8940:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8942:16:34","nodeType":"YulIdentifier","src":"8942:16:34"},"nativeSrc":"8942:18:34","nodeType":"YulFunctionCall","src":"8942:18:34"},"nativeSrc":"8942:18:34","nodeType":"YulExpressionStatement","src":"8942:18:34"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"8928:5:34","nodeType":"YulIdentifier","src":"8928:5:34"},{"name":"max","nativeSrc":"8935:3:34","nodeType":"YulIdentifier","src":"8935:3:34"}],"functionName":{"name":"gt","nativeSrc":"8925:2:34","nodeType":"YulIdentifier","src":"8925:2:34"},"nativeSrc":"8925:14:34","nodeType":"YulFunctionCall","src":"8925:14:34"},"nativeSrc":"8922:40:34","nodeType":"YulIf","src":"8922:40:34"},{"nativeSrc":"8975:5:34","nodeType":"YulLeave","src":"8975:5:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"8770:4:34","nodeType":"YulIdentifier","src":"8770:4:34"},{"kind":"number","nativeSrc":"8776:2:34","nodeType":"YulLiteral","src":"8776:2:34","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"8767:2:34","nodeType":"YulIdentifier","src":"8767:2:34"},"nativeSrc":"8767:12:34","nodeType":"YulFunctionCall","src":"8767:12:34"},{"arguments":[{"name":"exponent","nativeSrc":"8784:8:34","nodeType":"YulIdentifier","src":"8784:8:34"},{"kind":"number","nativeSrc":"8794:2:34","nodeType":"YulLiteral","src":"8794:2:34","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"8781:2:34","nodeType":"YulIdentifier","src":"8781:2:34"},"nativeSrc":"8781:16:34","nodeType":"YulFunctionCall","src":"8781:16:34"}],"functionName":{"name":"and","nativeSrc":"8763:3:34","nodeType":"YulIdentifier","src":"8763:3:34"},"nativeSrc":"8763:35:34","nodeType":"YulFunctionCall","src":"8763:35:34"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"8819:4:34","nodeType":"YulIdentifier","src":"8819:4:34"},{"kind":"number","nativeSrc":"8825:3:34","nodeType":"YulLiteral","src":"8825:3:34","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"8816:2:34","nodeType":"YulIdentifier","src":"8816:2:34"},"nativeSrc":"8816:13:34","nodeType":"YulFunctionCall","src":"8816:13:34"},{"arguments":[{"name":"exponent","nativeSrc":"8834:8:34","nodeType":"YulIdentifier","src":"8834:8:34"},{"kind":"number","nativeSrc":"8844:2:34","nodeType":"YulLiteral","src":"8844:2:34","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8831:2:34","nodeType":"YulIdentifier","src":"8831:2:34"},"nativeSrc":"8831:16:34","nodeType":"YulFunctionCall","src":"8831:16:34"}],"functionName":{"name":"and","nativeSrc":"8812:3:34","nodeType":"YulIdentifier","src":"8812:3:34"},"nativeSrc":"8812:36:34","nodeType":"YulFunctionCall","src":"8812:36:34"}],"functionName":{"name":"or","nativeSrc":"8747:2:34","nodeType":"YulIdentifier","src":"8747:2:34"},"nativeSrc":"8747:111:34","nodeType":"YulFunctionCall","src":"8747:111:34"},"nativeSrc":"8744:246:34","nodeType":"YulIf","src":"8744:246:34"},{"nativeSrc":"9000:57:34","nodeType":"YulAssignment","src":"9000:57:34","value":{"arguments":[{"kind":"number","nativeSrc":"9034:1:34","nodeType":"YulLiteral","src":"9034:1:34","type":"","value":"1"},{"name":"base","nativeSrc":"9037:4:34","nodeType":"YulIdentifier","src":"9037:4:34"},{"name":"exponent","nativeSrc":"9043:8:34","nodeType":"YulIdentifier","src":"9043:8:34"},{"name":"max","nativeSrc":"9053:3:34","nodeType":"YulIdentifier","src":"9053:3:34"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"9015:18:34","nodeType":"YulIdentifier","src":"9015:18:34"},"nativeSrc":"9015:42:34","nodeType":"YulFunctionCall","src":"9015:42:34"},"variableNames":[{"name":"power","nativeSrc":"9000:5:34","nodeType":"YulIdentifier","src":"9000:5:34"},{"name":"base","nativeSrc":"9007:4:34","nodeType":"YulIdentifier","src":"9007:4:34"}]},{"body":{"nativeSrc":"9096:22:34","nodeType":"YulBlock","src":"9096:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9098:16:34","nodeType":"YulIdentifier","src":"9098:16:34"},"nativeSrc":"9098:18:34","nodeType":"YulFunctionCall","src":"9098:18:34"},"nativeSrc":"9098:18:34","nodeType":"YulExpressionStatement","src":"9098:18:34"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"9073:5:34","nodeType":"YulIdentifier","src":"9073:5:34"},{"arguments":[{"name":"max","nativeSrc":"9084:3:34","nodeType":"YulIdentifier","src":"9084:3:34"},{"name":"base","nativeSrc":"9089:4:34","nodeType":"YulIdentifier","src":"9089:4:34"}],"functionName":{"name":"div","nativeSrc":"9080:3:34","nodeType":"YulIdentifier","src":"9080:3:34"},"nativeSrc":"9080:14:34","nodeType":"YulFunctionCall","src":"9080:14:34"}],"functionName":{"name":"gt","nativeSrc":"9070:2:34","nodeType":"YulIdentifier","src":"9070:2:34"},"nativeSrc":"9070:25:34","nodeType":"YulFunctionCall","src":"9070:25:34"},"nativeSrc":"9067:51:34","nodeType":"YulIf","src":"9067:51:34"},{"nativeSrc":"9127:25:34","nodeType":"YulAssignment","src":"9127:25:34","value":{"arguments":[{"name":"power","nativeSrc":"9140:5:34","nodeType":"YulIdentifier","src":"9140:5:34"},{"name":"base","nativeSrc":"9147:4:34","nodeType":"YulIdentifier","src":"9147:4:34"}],"functionName":{"name":"mul","nativeSrc":"9136:3:34","nodeType":"YulIdentifier","src":"9136:3:34"},"nativeSrc":"9136:16:34","nodeType":"YulFunctionCall","src":"9136:16:34"},"variableNames":[{"name":"power","nativeSrc":"9127:5:34","nodeType":"YulIdentifier","src":"9127:5:34"}]}]},"name":"checked_exp_unsigned","nativeSrc":"8085:1073:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"8115:4:34","nodeType":"YulTypedName","src":"8115:4:34","type":""},{"name":"exponent","nativeSrc":"8121:8:34","nodeType":"YulTypedName","src":"8121:8:34","type":""},{"name":"max","nativeSrc":"8131:3:34","nodeType":"YulTypedName","src":"8131:3:34","type":""}],"returnVariables":[{"name":"power","nativeSrc":"8139:5:34","nodeType":"YulTypedName","src":"8139:5:34","type":""}],"src":"8085:1073:34"},{"body":{"nativeSrc":"9207:43:34","nodeType":"YulBlock","src":"9207:43:34","statements":[{"nativeSrc":"9217:27:34","nodeType":"YulAssignment","src":"9217:27:34","value":{"arguments":[{"name":"value","nativeSrc":"9232:5:34","nodeType":"YulIdentifier","src":"9232:5:34"},{"kind":"number","nativeSrc":"9239:4:34","nodeType":"YulLiteral","src":"9239:4:34","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"9228:3:34","nodeType":"YulIdentifier","src":"9228:3:34"},"nativeSrc":"9228:16:34","nodeType":"YulFunctionCall","src":"9228:16:34"},"variableNames":[{"name":"cleaned","nativeSrc":"9217:7:34","nodeType":"YulIdentifier","src":"9217:7:34"}]}]},"name":"cleanup_t_uint8","nativeSrc":"9164:86:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9189:5:34","nodeType":"YulTypedName","src":"9189:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9199:7:34","nodeType":"YulTypedName","src":"9199:7:34","type":""}],"src":"9164:86:34"},{"body":{"nativeSrc":"9320:217:34","nodeType":"YulBlock","src":"9320:217:34","statements":[{"nativeSrc":"9330:31:34","nodeType":"YulAssignment","src":"9330:31:34","value":{"arguments":[{"name":"base","nativeSrc":"9356:4:34","nodeType":"YulIdentifier","src":"9356:4:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9338:17:34","nodeType":"YulIdentifier","src":"9338:17:34"},"nativeSrc":"9338:23:34","nodeType":"YulFunctionCall","src":"9338:23:34"},"variableNames":[{"name":"base","nativeSrc":"9330:4:34","nodeType":"YulIdentifier","src":"9330:4:34"}]},{"nativeSrc":"9370:37:34","nodeType":"YulAssignment","src":"9370:37:34","value":{"arguments":[{"name":"exponent","nativeSrc":"9398:8:34","nodeType":"YulIdentifier","src":"9398:8:34"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"9382:15:34","nodeType":"YulIdentifier","src":"9382:15:34"},"nativeSrc":"9382:25:34","nodeType":"YulFunctionCall","src":"9382:25:34"},"variableNames":[{"name":"exponent","nativeSrc":"9370:8:34","nodeType":"YulIdentifier","src":"9370:8:34"}]},{"nativeSrc":"9417:113:34","nodeType":"YulAssignment","src":"9417:113:34","value":{"arguments":[{"name":"base","nativeSrc":"9447:4:34","nodeType":"YulIdentifier","src":"9447:4:34"},{"name":"exponent","nativeSrc":"9453:8:34","nodeType":"YulIdentifier","src":"9453:8:34"},{"kind":"number","nativeSrc":"9463:66:34","nodeType":"YulLiteral","src":"9463:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"9426:20:34","nodeType":"YulIdentifier","src":"9426:20:34"},"nativeSrc":"9426:104:34","nodeType":"YulFunctionCall","src":"9426:104:34"},"variableNames":[{"name":"power","nativeSrc":"9417:5:34","nodeType":"YulIdentifier","src":"9417:5:34"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"9256:281:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"9295:4:34","nodeType":"YulTypedName","src":"9295:4:34","type":""},{"name":"exponent","nativeSrc":"9301:8:34","nodeType":"YulTypedName","src":"9301:8:34","type":""}],"returnVariables":[{"name":"power","nativeSrc":"9314:5:34","nodeType":"YulTypedName","src":"9314:5:34","type":""}],"src":"9256:281:34"},{"body":{"nativeSrc":"9591:362:34","nodeType":"YulBlock","src":"9591:362:34","statements":[{"nativeSrc":"9601:25:34","nodeType":"YulAssignment","src":"9601:25:34","value":{"arguments":[{"name":"x","nativeSrc":"9624:1:34","nodeType":"YulIdentifier","src":"9624:1:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9606:17:34","nodeType":"YulIdentifier","src":"9606:17:34"},"nativeSrc":"9606:20:34","nodeType":"YulFunctionCall","src":"9606:20:34"},"variableNames":[{"name":"x","nativeSrc":"9601:1:34","nodeType":"YulIdentifier","src":"9601:1:34"}]},{"nativeSrc":"9635:25:34","nodeType":"YulAssignment","src":"9635:25:34","value":{"arguments":[{"name":"y","nativeSrc":"9658:1:34","nodeType":"YulIdentifier","src":"9658:1:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9640:17:34","nodeType":"YulIdentifier","src":"9640:17:34"},"nativeSrc":"9640:20:34","nodeType":"YulFunctionCall","src":"9640:20:34"},"variableNames":[{"name":"y","nativeSrc":"9635:1:34","nodeType":"YulIdentifier","src":"9635:1:34"}]},{"nativeSrc":"9669:28:34","nodeType":"YulVariableDeclaration","src":"9669:28:34","value":{"arguments":[{"name":"x","nativeSrc":"9692:1:34","nodeType":"YulIdentifier","src":"9692:1:34"},{"name":"y","nativeSrc":"9695:1:34","nodeType":"YulIdentifier","src":"9695:1:34"}],"functionName":{"name":"mul","nativeSrc":"9688:3:34","nodeType":"YulIdentifier","src":"9688:3:34"},"nativeSrc":"9688:9:34","nodeType":"YulFunctionCall","src":"9688:9:34"},"variables":[{"name":"product_raw","nativeSrc":"9673:11:34","nodeType":"YulTypedName","src":"9673:11:34","type":""}]},{"nativeSrc":"9706:41:34","nodeType":"YulAssignment","src":"9706:41:34","value":{"arguments":[{"name":"product_raw","nativeSrc":"9735:11:34","nodeType":"YulIdentifier","src":"9735:11:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9717:17:34","nodeType":"YulIdentifier","src":"9717:17:34"},"nativeSrc":"9717:30:34","nodeType":"YulFunctionCall","src":"9717:30:34"},"variableNames":[{"name":"product","nativeSrc":"9706:7:34","nodeType":"YulIdentifier","src":"9706:7:34"}]},{"body":{"nativeSrc":"9924:22:34","nodeType":"YulBlock","src":"9924:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9926:16:34","nodeType":"YulIdentifier","src":"9926:16:34"},"nativeSrc":"9926:18:34","nodeType":"YulFunctionCall","src":"9926:18:34"},"nativeSrc":"9926:18:34","nodeType":"YulExpressionStatement","src":"9926:18:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"9857:1:34","nodeType":"YulIdentifier","src":"9857:1:34"}],"functionName":{"name":"iszero","nativeSrc":"9850:6:34","nodeType":"YulIdentifier","src":"9850:6:34"},"nativeSrc":"9850:9:34","nodeType":"YulFunctionCall","src":"9850:9:34"},{"arguments":[{"name":"y","nativeSrc":"9880:1:34","nodeType":"YulIdentifier","src":"9880:1:34"},{"arguments":[{"name":"product","nativeSrc":"9887:7:34","nodeType":"YulIdentifier","src":"9887:7:34"},{"name":"x","nativeSrc":"9896:1:34","nodeType":"YulIdentifier","src":"9896:1:34"}],"functionName":{"name":"div","nativeSrc":"9883:3:34","nodeType":"YulIdentifier","src":"9883:3:34"},"nativeSrc":"9883:15:34","nodeType":"YulFunctionCall","src":"9883:15:34"}],"functionName":{"name":"eq","nativeSrc":"9877:2:34","nodeType":"YulIdentifier","src":"9877:2:34"},"nativeSrc":"9877:22:34","nodeType":"YulFunctionCall","src":"9877:22:34"}],"functionName":{"name":"or","nativeSrc":"9830:2:34","nodeType":"YulIdentifier","src":"9830:2:34"},"nativeSrc":"9830:83:34","nodeType":"YulFunctionCall","src":"9830:83:34"}],"functionName":{"name":"iszero","nativeSrc":"9810:6:34","nodeType":"YulIdentifier","src":"9810:6:34"},"nativeSrc":"9810:113:34","nodeType":"YulFunctionCall","src":"9810:113:34"},"nativeSrc":"9807:139:34","nodeType":"YulIf","src":"9807:139:34"}]},"name":"checked_mul_t_uint256","nativeSrc":"9543:410:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9574:1:34","nodeType":"YulTypedName","src":"9574:1:34","type":""},{"name":"y","nativeSrc":"9577:1:34","nodeType":"YulTypedName","src":"9577:1:34","type":""}],"returnVariables":[{"name":"product","nativeSrc":"9583:7:34","nodeType":"YulTypedName","src":"9583:7:34","type":""}],"src":"9543:410:34"},{"body":{"nativeSrc":"10004:32:34","nodeType":"YulBlock","src":"10004:32:34","statements":[{"nativeSrc":"10014:16:34","nodeType":"YulAssignment","src":"10014:16:34","value":{"name":"value","nativeSrc":"10025:5:34","nodeType":"YulIdentifier","src":"10025:5:34"},"variableNames":[{"name":"cleaned","nativeSrc":"10014:7:34","nodeType":"YulIdentifier","src":"10014:7:34"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"9959:77:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9986:5:34","nodeType":"YulTypedName","src":"9986:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9996:7:34","nodeType":"YulTypedName","src":"9996:7:34","type":""}],"src":"9959:77:34"},{"body":{"nativeSrc":"10107:53:34","nodeType":"YulBlock","src":"10107:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10124:3:34","nodeType":"YulIdentifier","src":"10124:3:34"},{"arguments":[{"name":"value","nativeSrc":"10147:5:34","nodeType":"YulIdentifier","src":"10147:5:34"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10129:17:34","nodeType":"YulIdentifier","src":"10129:17:34"},"nativeSrc":"10129:24:34","nodeType":"YulFunctionCall","src":"10129:24:34"}],"functionName":{"name":"mstore","nativeSrc":"10117:6:34","nodeType":"YulIdentifier","src":"10117:6:34"},"nativeSrc":"10117:37:34","nodeType":"YulFunctionCall","src":"10117:37:34"},"nativeSrc":"10117:37:34","nodeType":"YulExpressionStatement","src":"10117:37:34"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10042:118:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10095:5:34","nodeType":"YulTypedName","src":"10095:5:34","type":""},{"name":"pos","nativeSrc":"10102:3:34","nodeType":"YulTypedName","src":"10102:3:34","type":""}],"src":"10042:118:34"},{"body":{"nativeSrc":"10231:53:34","nodeType":"YulBlock","src":"10231:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10248:3:34","nodeType":"YulIdentifier","src":"10248:3:34"},{"arguments":[{"name":"value","nativeSrc":"10271:5:34","nodeType":"YulIdentifier","src":"10271:5:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10253:17:34","nodeType":"YulIdentifier","src":"10253:17:34"},"nativeSrc":"10253:24:34","nodeType":"YulFunctionCall","src":"10253:24:34"}],"functionName":{"name":"mstore","nativeSrc":"10241:6:34","nodeType":"YulIdentifier","src":"10241:6:34"},"nativeSrc":"10241:37:34","nodeType":"YulFunctionCall","src":"10241:37:34"},"nativeSrc":"10241:37:34","nodeType":"YulExpressionStatement","src":"10241:37:34"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10166:118:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10219:5:34","nodeType":"YulTypedName","src":"10219:5:34","type":""},{"name":"pos","nativeSrc":"10226:3:34","nodeType":"YulTypedName","src":"10226:3:34","type":""}],"src":"10166:118:34"},{"body":{"nativeSrc":"10500:454:34","nodeType":"YulBlock","src":"10500:454:34","statements":[{"nativeSrc":"10510:27:34","nodeType":"YulAssignment","src":"10510:27:34","value":{"arguments":[{"name":"headStart","nativeSrc":"10522:9:34","nodeType":"YulIdentifier","src":"10522:9:34"},{"kind":"number","nativeSrc":"10533:3:34","nodeType":"YulLiteral","src":"10533:3:34","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10518:3:34","nodeType":"YulIdentifier","src":"10518:3:34"},"nativeSrc":"10518:19:34","nodeType":"YulFunctionCall","src":"10518:19:34"},"variableNames":[{"name":"tail","nativeSrc":"10510:4:34","nodeType":"YulIdentifier","src":"10510:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10591:6:34","nodeType":"YulIdentifier","src":"10591:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"10604:9:34","nodeType":"YulIdentifier","src":"10604:9:34"},{"kind":"number","nativeSrc":"10615:1:34","nodeType":"YulLiteral","src":"10615:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10600:3:34","nodeType":"YulIdentifier","src":"10600:3:34"},"nativeSrc":"10600:17:34","nodeType":"YulFunctionCall","src":"10600:17:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10547:43:34","nodeType":"YulIdentifier","src":"10547:43:34"},"nativeSrc":"10547:71:34","nodeType":"YulFunctionCall","src":"10547:71:34"},"nativeSrc":"10547:71:34","nodeType":"YulExpressionStatement","src":"10547:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10672:6:34","nodeType":"YulIdentifier","src":"10672:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"10685:9:34","nodeType":"YulIdentifier","src":"10685:9:34"},{"kind":"number","nativeSrc":"10696:2:34","nodeType":"YulLiteral","src":"10696:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10681:3:34","nodeType":"YulIdentifier","src":"10681:3:34"},"nativeSrc":"10681:18:34","nodeType":"YulFunctionCall","src":"10681:18:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10628:43:34","nodeType":"YulIdentifier","src":"10628:43:34"},"nativeSrc":"10628:72:34","nodeType":"YulFunctionCall","src":"10628:72:34"},"nativeSrc":"10628:72:34","nodeType":"YulExpressionStatement","src":"10628:72:34"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10754:6:34","nodeType":"YulIdentifier","src":"10754:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"10767:9:34","nodeType":"YulIdentifier","src":"10767:9:34"},{"kind":"number","nativeSrc":"10778:2:34","nodeType":"YulLiteral","src":"10778:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10763:3:34","nodeType":"YulIdentifier","src":"10763:3:34"},"nativeSrc":"10763:18:34","nodeType":"YulFunctionCall","src":"10763:18:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10710:43:34","nodeType":"YulIdentifier","src":"10710:43:34"},"nativeSrc":"10710:72:34","nodeType":"YulFunctionCall","src":"10710:72:34"},"nativeSrc":"10710:72:34","nodeType":"YulExpressionStatement","src":"10710:72:34"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"10836:6:34","nodeType":"YulIdentifier","src":"10836:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"10849:9:34","nodeType":"YulIdentifier","src":"10849:9:34"},{"kind":"number","nativeSrc":"10860:2:34","nodeType":"YulLiteral","src":"10860:2:34","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10845:3:34","nodeType":"YulIdentifier","src":"10845:3:34"},"nativeSrc":"10845:18:34","nodeType":"YulFunctionCall","src":"10845:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10792:43:34","nodeType":"YulIdentifier","src":"10792:43:34"},"nativeSrc":"10792:72:34","nodeType":"YulFunctionCall","src":"10792:72:34"},"nativeSrc":"10792:72:34","nodeType":"YulExpressionStatement","src":"10792:72:34"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"10918:6:34","nodeType":"YulIdentifier","src":"10918:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"10931:9:34","nodeType":"YulIdentifier","src":"10931:9:34"},{"kind":"number","nativeSrc":"10942:3:34","nodeType":"YulLiteral","src":"10942:3:34","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10927:3:34","nodeType":"YulIdentifier","src":"10927:3:34"},"nativeSrc":"10927:19:34","nodeType":"YulFunctionCall","src":"10927:19:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10874:43:34","nodeType":"YulIdentifier","src":"10874:43:34"},"nativeSrc":"10874:73:34","nodeType":"YulFunctionCall","src":"10874:73:34"},"nativeSrc":"10874:73:34","nodeType":"YulExpressionStatement","src":"10874:73:34"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"10290:664:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10440:9:34","nodeType":"YulTypedName","src":"10440:9:34","type":""},{"name":"value4","nativeSrc":"10452:6:34","nodeType":"YulTypedName","src":"10452:6:34","type":""},{"name":"value3","nativeSrc":"10460:6:34","nodeType":"YulTypedName","src":"10460:6:34","type":""},{"name":"value2","nativeSrc":"10468:6:34","nodeType":"YulTypedName","src":"10468:6:34","type":""},{"name":"value1","nativeSrc":"10476:6:34","nodeType":"YulTypedName","src":"10476:6:34","type":""},{"name":"value0","nativeSrc":"10484:6:34","nodeType":"YulTypedName","src":"10484:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10495:4:34","nodeType":"YulTypedName","src":"10495:4:34","type":""}],"src":"10290:664:34"},{"body":{"nativeSrc":"11056:73:34","nodeType":"YulBlock","src":"11056:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11073:3:34","nodeType":"YulIdentifier","src":"11073:3:34"},{"name":"length","nativeSrc":"11078:6:34","nodeType":"YulIdentifier","src":"11078:6:34"}],"functionName":{"name":"mstore","nativeSrc":"11066:6:34","nodeType":"YulIdentifier","src":"11066:6:34"},"nativeSrc":"11066:19:34","nodeType":"YulFunctionCall","src":"11066:19:34"},"nativeSrc":"11066:19:34","nodeType":"YulExpressionStatement","src":"11066:19:34"},{"nativeSrc":"11094:29:34","nodeType":"YulAssignment","src":"11094:29:34","value":{"arguments":[{"name":"pos","nativeSrc":"11113:3:34","nodeType":"YulIdentifier","src":"11113:3:34"},{"kind":"number","nativeSrc":"11118:4:34","nodeType":"YulLiteral","src":"11118:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11109:3:34","nodeType":"YulIdentifier","src":"11109:3:34"},"nativeSrc":"11109:14:34","nodeType":"YulFunctionCall","src":"11109:14:34"},"variableNames":[{"name":"updated_pos","nativeSrc":"11094:11:34","nodeType":"YulIdentifier","src":"11094:11:34"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10960:169:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11028:3:34","nodeType":"YulTypedName","src":"11028:3:34","type":""},{"name":"length","nativeSrc":"11033:6:34","nodeType":"YulTypedName","src":"11033:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"11044:11:34","nodeType":"YulTypedName","src":"11044:11:34","type":""}],"src":"10960:169:34"},{"body":{"nativeSrc":"11197:184:34","nodeType":"YulBlock","src":"11197:184:34","statements":[{"nativeSrc":"11207:10:34","nodeType":"YulVariableDeclaration","src":"11207:10:34","value":{"kind":"number","nativeSrc":"11216:1:34","nodeType":"YulLiteral","src":"11216:1:34","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"11211:1:34","nodeType":"YulTypedName","src":"11211:1:34","type":""}]},{"body":{"nativeSrc":"11276:63:34","nodeType":"YulBlock","src":"11276:63:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"11301:3:34","nodeType":"YulIdentifier","src":"11301:3:34"},{"name":"i","nativeSrc":"11306:1:34","nodeType":"YulIdentifier","src":"11306:1:34"}],"functionName":{"name":"add","nativeSrc":"11297:3:34","nodeType":"YulIdentifier","src":"11297:3:34"},"nativeSrc":"11297:11:34","nodeType":"YulFunctionCall","src":"11297:11:34"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11320:3:34","nodeType":"YulIdentifier","src":"11320:3:34"},{"name":"i","nativeSrc":"11325:1:34","nodeType":"YulIdentifier","src":"11325:1:34"}],"functionName":{"name":"add","nativeSrc":"11316:3:34","nodeType":"YulIdentifier","src":"11316:3:34"},"nativeSrc":"11316:11:34","nodeType":"YulFunctionCall","src":"11316:11:34"}],"functionName":{"name":"mload","nativeSrc":"11310:5:34","nodeType":"YulIdentifier","src":"11310:5:34"},"nativeSrc":"11310:18:34","nodeType":"YulFunctionCall","src":"11310:18:34"}],"functionName":{"name":"mstore","nativeSrc":"11290:6:34","nodeType":"YulIdentifier","src":"11290:6:34"},"nativeSrc":"11290:39:34","nodeType":"YulFunctionCall","src":"11290:39:34"},"nativeSrc":"11290:39:34","nodeType":"YulExpressionStatement","src":"11290:39:34"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"11237:1:34","nodeType":"YulIdentifier","src":"11237:1:34"},{"name":"length","nativeSrc":"11240:6:34","nodeType":"YulIdentifier","src":"11240:6:34"}],"functionName":{"name":"lt","nativeSrc":"11234:2:34","nodeType":"YulIdentifier","src":"11234:2:34"},"nativeSrc":"11234:13:34","nodeType":"YulFunctionCall","src":"11234:13:34"},"nativeSrc":"11226:113:34","nodeType":"YulForLoop","post":{"nativeSrc":"11248:19:34","nodeType":"YulBlock","src":"11248:19:34","statements":[{"nativeSrc":"11250:15:34","nodeType":"YulAssignment","src":"11250:15:34","value":{"arguments":[{"name":"i","nativeSrc":"11259:1:34","nodeType":"YulIdentifier","src":"11259:1:34"},{"kind":"number","nativeSrc":"11262:2:34","nodeType":"YulLiteral","src":"11262:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11255:3:34","nodeType":"YulIdentifier","src":"11255:3:34"},"nativeSrc":"11255:10:34","nodeType":"YulFunctionCall","src":"11255:10:34"},"variableNames":[{"name":"i","nativeSrc":"11250:1:34","nodeType":"YulIdentifier","src":"11250:1:34"}]}]},"pre":{"nativeSrc":"11230:3:34","nodeType":"YulBlock","src":"11230:3:34","statements":[]},"src":"11226:113:34"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"11359:3:34","nodeType":"YulIdentifier","src":"11359:3:34"},{"name":"length","nativeSrc":"11364:6:34","nodeType":"YulIdentifier","src":"11364:6:34"}],"functionName":{"name":"add","nativeSrc":"11355:3:34","nodeType":"YulIdentifier","src":"11355:3:34"},"nativeSrc":"11355:16:34","nodeType":"YulFunctionCall","src":"11355:16:34"},{"kind":"number","nativeSrc":"11373:1:34","nodeType":"YulLiteral","src":"11373:1:34","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"11348:6:34","nodeType":"YulIdentifier","src":"11348:6:34"},"nativeSrc":"11348:27:34","nodeType":"YulFunctionCall","src":"11348:27:34"},"nativeSrc":"11348:27:34","nodeType":"YulExpressionStatement","src":"11348:27:34"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"11135:246:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"11179:3:34","nodeType":"YulTypedName","src":"11179:3:34","type":""},{"name":"dst","nativeSrc":"11184:3:34","nodeType":"YulTypedName","src":"11184:3:34","type":""},{"name":"length","nativeSrc":"11189:6:34","nodeType":"YulTypedName","src":"11189:6:34","type":""}],"src":"11135:246:34"},{"body":{"nativeSrc":"11435:54:34","nodeType":"YulBlock","src":"11435:54:34","statements":[{"nativeSrc":"11445:38:34","nodeType":"YulAssignment","src":"11445:38:34","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11463:5:34","nodeType":"YulIdentifier","src":"11463:5:34"},{"kind":"number","nativeSrc":"11470:2:34","nodeType":"YulLiteral","src":"11470:2:34","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"11459:3:34","nodeType":"YulIdentifier","src":"11459:3:34"},"nativeSrc":"11459:14:34","nodeType":"YulFunctionCall","src":"11459:14:34"},{"arguments":[{"kind":"number","nativeSrc":"11479:2:34","nodeType":"YulLiteral","src":"11479:2:34","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"11475:3:34","nodeType":"YulIdentifier","src":"11475:3:34"},"nativeSrc":"11475:7:34","nodeType":"YulFunctionCall","src":"11475:7:34"}],"functionName":{"name":"and","nativeSrc":"11455:3:34","nodeType":"YulIdentifier","src":"11455:3:34"},"nativeSrc":"11455:28:34","nodeType":"YulFunctionCall","src":"11455:28:34"},"variableNames":[{"name":"result","nativeSrc":"11445:6:34","nodeType":"YulIdentifier","src":"11445:6:34"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"11387:102:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11418:5:34","nodeType":"YulTypedName","src":"11418:5:34","type":""}],"returnVariables":[{"name":"result","nativeSrc":"11428:6:34","nodeType":"YulTypedName","src":"11428:6:34","type":""}],"src":"11387:102:34"},{"body":{"nativeSrc":"11587:285:34","nodeType":"YulBlock","src":"11587:285:34","statements":[{"nativeSrc":"11597:53:34","nodeType":"YulVariableDeclaration","src":"11597:53:34","value":{"arguments":[{"name":"value","nativeSrc":"11644:5:34","nodeType":"YulIdentifier","src":"11644:5:34"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"11611:32:34","nodeType":"YulIdentifier","src":"11611:32:34"},"nativeSrc":"11611:39:34","nodeType":"YulFunctionCall","src":"11611:39:34"},"variables":[{"name":"length","nativeSrc":"11601:6:34","nodeType":"YulTypedName","src":"11601:6:34","type":""}]},{"nativeSrc":"11659:78:34","nodeType":"YulAssignment","src":"11659:78:34","value":{"arguments":[{"name":"pos","nativeSrc":"11725:3:34","nodeType":"YulIdentifier","src":"11725:3:34"},{"name":"length","nativeSrc":"11730:6:34","nodeType":"YulIdentifier","src":"11730:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11666:58:34","nodeType":"YulIdentifier","src":"11666:58:34"},"nativeSrc":"11666:71:34","nodeType":"YulFunctionCall","src":"11666:71:34"},"variableNames":[{"name":"pos","nativeSrc":"11659:3:34","nodeType":"YulIdentifier","src":"11659:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11785:5:34","nodeType":"YulIdentifier","src":"11785:5:34"},{"kind":"number","nativeSrc":"11792:4:34","nodeType":"YulLiteral","src":"11792:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11781:3:34","nodeType":"YulIdentifier","src":"11781:3:34"},"nativeSrc":"11781:16:34","nodeType":"YulFunctionCall","src":"11781:16:34"},{"name":"pos","nativeSrc":"11799:3:34","nodeType":"YulIdentifier","src":"11799:3:34"},{"name":"length","nativeSrc":"11804:6:34","nodeType":"YulIdentifier","src":"11804:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"11746:34:34","nodeType":"YulIdentifier","src":"11746:34:34"},"nativeSrc":"11746:65:34","nodeType":"YulFunctionCall","src":"11746:65:34"},"nativeSrc":"11746:65:34","nodeType":"YulExpressionStatement","src":"11746:65:34"},{"nativeSrc":"11820:46:34","nodeType":"YulAssignment","src":"11820:46:34","value":{"arguments":[{"name":"pos","nativeSrc":"11831:3:34","nodeType":"YulIdentifier","src":"11831:3:34"},{"arguments":[{"name":"length","nativeSrc":"11858:6:34","nodeType":"YulIdentifier","src":"11858:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"11836:21:34","nodeType":"YulIdentifier","src":"11836:21:34"},"nativeSrc":"11836:29:34","nodeType":"YulFunctionCall","src":"11836:29:34"}],"functionName":{"name":"add","nativeSrc":"11827:3:34","nodeType":"YulIdentifier","src":"11827:3:34"},"nativeSrc":"11827:39:34","nodeType":"YulFunctionCall","src":"11827:39:34"},"variableNames":[{"name":"end","nativeSrc":"11820:3:34","nodeType":"YulIdentifier","src":"11820:3:34"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11495:377:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11568:5:34","nodeType":"YulTypedName","src":"11568:5:34","type":""},{"name":"pos","nativeSrc":"11575:3:34","nodeType":"YulTypedName","src":"11575:3:34","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11583:3:34","nodeType":"YulTypedName","src":"11583:3:34","type":""}],"src":"11495:377:34"},{"body":{"nativeSrc":"11996:195:34","nodeType":"YulBlock","src":"11996:195:34","statements":[{"nativeSrc":"12006:26:34","nodeType":"YulAssignment","src":"12006:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"12018:9:34","nodeType":"YulIdentifier","src":"12018:9:34"},{"kind":"number","nativeSrc":"12029:2:34","nodeType":"YulLiteral","src":"12029:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12014:3:34","nodeType":"YulIdentifier","src":"12014:3:34"},"nativeSrc":"12014:18:34","nodeType":"YulFunctionCall","src":"12014:18:34"},"variableNames":[{"name":"tail","nativeSrc":"12006:4:34","nodeType":"YulIdentifier","src":"12006:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12053:9:34","nodeType":"YulIdentifier","src":"12053:9:34"},{"kind":"number","nativeSrc":"12064:1:34","nodeType":"YulLiteral","src":"12064:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12049:3:34","nodeType":"YulIdentifier","src":"12049:3:34"},"nativeSrc":"12049:17:34","nodeType":"YulFunctionCall","src":"12049:17:34"},{"arguments":[{"name":"tail","nativeSrc":"12072:4:34","nodeType":"YulIdentifier","src":"12072:4:34"},{"name":"headStart","nativeSrc":"12078:9:34","nodeType":"YulIdentifier","src":"12078:9:34"}],"functionName":{"name":"sub","nativeSrc":"12068:3:34","nodeType":"YulIdentifier","src":"12068:3:34"},"nativeSrc":"12068:20:34","nodeType":"YulFunctionCall","src":"12068:20:34"}],"functionName":{"name":"mstore","nativeSrc":"12042:6:34","nodeType":"YulIdentifier","src":"12042:6:34"},"nativeSrc":"12042:47:34","nodeType":"YulFunctionCall","src":"12042:47:34"},"nativeSrc":"12042:47:34","nodeType":"YulExpressionStatement","src":"12042:47:34"},{"nativeSrc":"12098:86:34","nodeType":"YulAssignment","src":"12098:86:34","value":{"arguments":[{"name":"value0","nativeSrc":"12170:6:34","nodeType":"YulIdentifier","src":"12170:6:34"},{"name":"tail","nativeSrc":"12179:4:34","nodeType":"YulIdentifier","src":"12179:4:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"12106:63:34","nodeType":"YulIdentifier","src":"12106:63:34"},"nativeSrc":"12106:78:34","nodeType":"YulFunctionCall","src":"12106:78:34"},"variableNames":[{"name":"tail","nativeSrc":"12098:4:34","nodeType":"YulIdentifier","src":"12098:4:34"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11878:313:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11968:9:34","nodeType":"YulTypedName","src":"11968:9:34","type":""},{"name":"value0","nativeSrc":"11980:6:34","nodeType":"YulTypedName","src":"11980:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11991:4:34","nodeType":"YulTypedName","src":"11991:4:34","type":""}],"src":"11878:313:34"},{"body":{"nativeSrc":"12255:40:34","nodeType":"YulBlock","src":"12255:40:34","statements":[{"nativeSrc":"12266:22:34","nodeType":"YulAssignment","src":"12266:22:34","value":{"arguments":[{"name":"value","nativeSrc":"12282:5:34","nodeType":"YulIdentifier","src":"12282:5:34"}],"functionName":{"name":"mload","nativeSrc":"12276:5:34","nodeType":"YulIdentifier","src":"12276:5:34"},"nativeSrc":"12276:12:34","nodeType":"YulFunctionCall","src":"12276:12:34"},"variableNames":[{"name":"length","nativeSrc":"12266:6:34","nodeType":"YulIdentifier","src":"12266:6:34"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"12197:98:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12238:5:34","nodeType":"YulTypedName","src":"12238:5:34","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12248:6:34","nodeType":"YulTypedName","src":"12248:6:34","type":""}],"src":"12197:98:34"},{"body":{"nativeSrc":"12357:60:34","nodeType":"YulBlock","src":"12357:60:34","statements":[{"nativeSrc":"12367:11:34","nodeType":"YulAssignment","src":"12367:11:34","value":{"name":"ptr","nativeSrc":"12375:3:34","nodeType":"YulIdentifier","src":"12375:3:34"},"variableNames":[{"name":"data","nativeSrc":"12367:4:34","nodeType":"YulIdentifier","src":"12367:4:34"}]},{"nativeSrc":"12388:22:34","nodeType":"YulAssignment","src":"12388:22:34","value":{"arguments":[{"name":"ptr","nativeSrc":"12400:3:34","nodeType":"YulIdentifier","src":"12400:3:34"},{"kind":"number","nativeSrc":"12405:4:34","nodeType":"YulLiteral","src":"12405:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12396:3:34","nodeType":"YulIdentifier","src":"12396:3:34"},"nativeSrc":"12396:14:34","nodeType":"YulFunctionCall","src":"12396:14:34"},"variableNames":[{"name":"data","nativeSrc":"12388:4:34","nodeType":"YulIdentifier","src":"12388:4:34"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"12301:116:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12344:3:34","nodeType":"YulTypedName","src":"12344:3:34","type":""}],"returnVariables":[{"name":"data","nativeSrc":"12352:4:34","nodeType":"YulTypedName","src":"12352:4:34","type":""}],"src":"12301:116:34"},{"body":{"nativeSrc":"12478:99:34","nodeType":"YulBlock","src":"12478:99:34","statements":[{"nativeSrc":"12489:42:34","nodeType":"YulVariableDeclaration","src":"12489:42:34","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"12526:3:34","nodeType":"YulIdentifier","src":"12526:3:34"}],"functionName":{"name":"mload","nativeSrc":"12520:5:34","nodeType":"YulIdentifier","src":"12520:5:34"},"nativeSrc":"12520:10:34","nodeType":"YulFunctionCall","src":"12520:10:34"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"12502:17:34","nodeType":"YulIdentifier","src":"12502:17:34"},"nativeSrc":"12502:29:34","nodeType":"YulFunctionCall","src":"12502:29:34"},"variables":[{"name":"value","nativeSrc":"12493:5:34","nodeType":"YulTypedName","src":"12493:5:34","type":""}]},{"nativeSrc":"12541:29:34","nodeType":"YulAssignment","src":"12541:29:34","value":{"name":"value","nativeSrc":"12565:5:34","nodeType":"YulIdentifier","src":"12565:5:34"},"variableNames":[{"name":"returnValue","nativeSrc":"12541:11:34","nodeType":"YulIdentifier","src":"12541:11:34"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"12423:154:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12458:3:34","nodeType":"YulTypedName","src":"12458:3:34","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"12466:11:34","nodeType":"YulTypedName","src":"12466:11:34","type":""}],"src":"12423:154:34"},{"body":{"nativeSrc":"12673:504:34","nodeType":"YulBlock","src":"12673:504:34","statements":[{"nativeSrc":"12684:52:34","nodeType":"YulVariableDeclaration","src":"12684:52:34","value":{"arguments":[{"name":"array","nativeSrc":"12730:5:34","nodeType":"YulIdentifier","src":"12730:5:34"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"12698:31:34","nodeType":"YulIdentifier","src":"12698:31:34"},"nativeSrc":"12698:38:34","nodeType":"YulFunctionCall","src":"12698:38:34"},"variables":[{"name":"length","nativeSrc":"12688:6:34","nodeType":"YulTypedName","src":"12688:6:34","type":""}]},{"nativeSrc":"12745:21:34","nodeType":"YulVariableDeclaration","src":"12745:21:34","value":{"name":"array","nativeSrc":"12761:5:34","nodeType":"YulIdentifier","src":"12761:5:34"},"variables":[{"name":"dataArea","nativeSrc":"12749:8:34","nodeType":"YulTypedName","src":"12749:8:34","type":""}]},{"nativeSrc":"12776:52:34","nodeType":"YulAssignment","src":"12776:52:34","value":{"arguments":[{"name":"array","nativeSrc":"12822:5:34","nodeType":"YulIdentifier","src":"12822:5:34"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"12788:33:34","nodeType":"YulIdentifier","src":"12788:33:34"},"nativeSrc":"12788:40:34","nodeType":"YulFunctionCall","src":"12788:40:34"},"variableNames":[{"name":"dataArea","nativeSrc":"12776:8:34","nodeType":"YulIdentifier","src":"12776:8:34"}]},{"nativeSrc":"12838:44:34","nodeType":"YulAssignment","src":"12838:44:34","value":{"arguments":[{"name":"dataArea","nativeSrc":"12873:8:34","nodeType":"YulIdentifier","src":"12873:8:34"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"12847:25:34","nodeType":"YulIdentifier","src":"12847:25:34"},"nativeSrc":"12847:35:34","nodeType":"YulFunctionCall","src":"12847:35:34"},"variableNames":[{"name":"value","nativeSrc":"12838:5:34","nodeType":"YulIdentifier","src":"12838:5:34"}]},{"body":{"nativeSrc":"12910:260:34","nodeType":"YulBlock","src":"12910:260:34","statements":[{"nativeSrc":"12924:236:34","nodeType":"YulAssignment","src":"12924:236:34","value":{"arguments":[{"name":"value","nativeSrc":"12954:5:34","nodeType":"YulIdentifier","src":"12954:5:34"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13021:1:34","nodeType":"YulLiteral","src":"13021:1:34","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"13028:2:34","nodeType":"YulLiteral","src":"13028:2:34","type":"","value":"32"},{"name":"length","nativeSrc":"13032:6:34","nodeType":"YulIdentifier","src":"13032:6:34"}],"functionName":{"name":"sub","nativeSrc":"13024:3:34","nodeType":"YulIdentifier","src":"13024:3:34"},"nativeSrc":"13024:15:34","nodeType":"YulFunctionCall","src":"13024:15:34"}],"functionName":{"name":"mul","nativeSrc":"13017:3:34","nodeType":"YulIdentifier","src":"13017:3:34"},"nativeSrc":"13017:23:34","nodeType":"YulFunctionCall","src":"13017:23:34"},{"kind":"number","nativeSrc":"13062:66:34","nodeType":"YulLiteral","src":"13062:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"12977:18:34","nodeType":"YulIdentifier","src":"12977:18:34"},"nativeSrc":"12977:169:34","nodeType":"YulFunctionCall","src":"12977:169:34"}],"functionName":{"name":"and","nativeSrc":"12933:3:34","nodeType":"YulIdentifier","src":"12933:3:34"},"nativeSrc":"12933:227:34","nodeType":"YulFunctionCall","src":"12933:227:34"},"variableNames":[{"name":"value","nativeSrc":"12924:5:34","nodeType":"YulIdentifier","src":"12924:5:34"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"12898:6:34","nodeType":"YulIdentifier","src":"12898:6:34"},{"kind":"number","nativeSrc":"12906:2:34","nodeType":"YulLiteral","src":"12906:2:34","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12895:2:34","nodeType":"YulIdentifier","src":"12895:2:34"},"nativeSrc":"12895:14:34","nodeType":"YulFunctionCall","src":"12895:14:34"},"nativeSrc":"12892:278:34","nodeType":"YulIf","src":"12892:278:34"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"12583:594:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"12657:5:34","nodeType":"YulTypedName","src":"12657:5:34","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12667:5:34","nodeType":"YulTypedName","src":"12667:5:34","type":""}],"src":"12583:594:34"},{"body":{"nativeSrc":"13309:206:34","nodeType":"YulBlock","src":"13309:206:34","statements":[{"nativeSrc":"13319:26:34","nodeType":"YulAssignment","src":"13319:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"13331:9:34","nodeType":"YulIdentifier","src":"13331:9:34"},{"kind":"number","nativeSrc":"13342:2:34","nodeType":"YulLiteral","src":"13342:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13327:3:34","nodeType":"YulIdentifier","src":"13327:3:34"},"nativeSrc":"13327:18:34","nodeType":"YulFunctionCall","src":"13327:18:34"},"variableNames":[{"name":"tail","nativeSrc":"13319:4:34","nodeType":"YulIdentifier","src":"13319:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13399:6:34","nodeType":"YulIdentifier","src":"13399:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"13412:9:34","nodeType":"YulIdentifier","src":"13412:9:34"},{"kind":"number","nativeSrc":"13423:1:34","nodeType":"YulLiteral","src":"13423:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13408:3:34","nodeType":"YulIdentifier","src":"13408:3:34"},"nativeSrc":"13408:17:34","nodeType":"YulFunctionCall","src":"13408:17:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13355:43:34","nodeType":"YulIdentifier","src":"13355:43:34"},"nativeSrc":"13355:71:34","nodeType":"YulFunctionCall","src":"13355:71:34"},"nativeSrc":"13355:71:34","nodeType":"YulExpressionStatement","src":"13355:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13480:6:34","nodeType":"YulIdentifier","src":"13480:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"13493:9:34","nodeType":"YulIdentifier","src":"13493:9:34"},{"kind":"number","nativeSrc":"13504:2:34","nodeType":"YulLiteral","src":"13504:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13489:3:34","nodeType":"YulIdentifier","src":"13489:3:34"},"nativeSrc":"13489:18:34","nodeType":"YulFunctionCall","src":"13489:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13436:43:34","nodeType":"YulIdentifier","src":"13436:43:34"},"nativeSrc":"13436:72:34","nodeType":"YulFunctionCall","src":"13436:72:34"},"nativeSrc":"13436:72:34","nodeType":"YulExpressionStatement","src":"13436:72:34"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13183:332:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13273:9:34","nodeType":"YulTypedName","src":"13273:9:34","type":""},{"name":"value1","nativeSrc":"13285:6:34","nodeType":"YulTypedName","src":"13285:6:34","type":""},{"name":"value0","nativeSrc":"13293:6:34","nodeType":"YulTypedName","src":"13293:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13304:4:34","nodeType":"YulTypedName","src":"13304:4:34","type":""}],"src":"13183:332:34"},{"body":{"nativeSrc":"13565:147:34","nodeType":"YulBlock","src":"13565:147:34","statements":[{"nativeSrc":"13575:25:34","nodeType":"YulAssignment","src":"13575:25:34","value":{"arguments":[{"name":"x","nativeSrc":"13598:1:34","nodeType":"YulIdentifier","src":"13598:1:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13580:17:34","nodeType":"YulIdentifier","src":"13580:17:34"},"nativeSrc":"13580:20:34","nodeType":"YulFunctionCall","src":"13580:20:34"},"variableNames":[{"name":"x","nativeSrc":"13575:1:34","nodeType":"YulIdentifier","src":"13575:1:34"}]},{"nativeSrc":"13609:25:34","nodeType":"YulAssignment","src":"13609:25:34","value":{"arguments":[{"name":"y","nativeSrc":"13632:1:34","nodeType":"YulIdentifier","src":"13632:1:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13614:17:34","nodeType":"YulIdentifier","src":"13614:17:34"},"nativeSrc":"13614:20:34","nodeType":"YulFunctionCall","src":"13614:20:34"},"variableNames":[{"name":"y","nativeSrc":"13609:1:34","nodeType":"YulIdentifier","src":"13609:1:34"}]},{"nativeSrc":"13643:16:34","nodeType":"YulAssignment","src":"13643:16:34","value":{"arguments":[{"name":"x","nativeSrc":"13654:1:34","nodeType":"YulIdentifier","src":"13654:1:34"},{"name":"y","nativeSrc":"13657:1:34","nodeType":"YulIdentifier","src":"13657:1:34"}],"functionName":{"name":"add","nativeSrc":"13650:3:34","nodeType":"YulIdentifier","src":"13650:3:34"},"nativeSrc":"13650:9:34","nodeType":"YulFunctionCall","src":"13650:9:34"},"variableNames":[{"name":"sum","nativeSrc":"13643:3:34","nodeType":"YulIdentifier","src":"13643:3:34"}]},{"body":{"nativeSrc":"13683:22:34","nodeType":"YulBlock","src":"13683:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13685:16:34","nodeType":"YulIdentifier","src":"13685:16:34"},"nativeSrc":"13685:18:34","nodeType":"YulFunctionCall","src":"13685:18:34"},"nativeSrc":"13685:18:34","nodeType":"YulExpressionStatement","src":"13685:18:34"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13675:1:34","nodeType":"YulIdentifier","src":"13675:1:34"},{"name":"sum","nativeSrc":"13678:3:34","nodeType":"YulIdentifier","src":"13678:3:34"}],"functionName":{"name":"gt","nativeSrc":"13672:2:34","nodeType":"YulIdentifier","src":"13672:2:34"},"nativeSrc":"13672:10:34","nodeType":"YulFunctionCall","src":"13672:10:34"},"nativeSrc":"13669:36:34","nodeType":"YulIf","src":"13669:36:34"}]},"name":"checked_add_t_uint256","nativeSrc":"13521:191:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13552:1:34","nodeType":"YulTypedName","src":"13552:1:34","type":""},{"name":"y","nativeSrc":"13555:1:34","nodeType":"YulTypedName","src":"13555:1:34","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13561:3:34","nodeType":"YulTypedName","src":"13561:3:34","type":""}],"src":"13521:191:34"},{"body":{"nativeSrc":"13872:288:34","nodeType":"YulBlock","src":"13872:288:34","statements":[{"nativeSrc":"13882:26:34","nodeType":"YulAssignment","src":"13882:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"13894:9:34","nodeType":"YulIdentifier","src":"13894:9:34"},{"kind":"number","nativeSrc":"13905:2:34","nodeType":"YulLiteral","src":"13905:2:34","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13890:3:34","nodeType":"YulIdentifier","src":"13890:3:34"},"nativeSrc":"13890:18:34","nodeType":"YulFunctionCall","src":"13890:18:34"},"variableNames":[{"name":"tail","nativeSrc":"13882:4:34","nodeType":"YulIdentifier","src":"13882:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13962:6:34","nodeType":"YulIdentifier","src":"13962:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"13975:9:34","nodeType":"YulIdentifier","src":"13975:9:34"},{"kind":"number","nativeSrc":"13986:1:34","nodeType":"YulLiteral","src":"13986:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13971:3:34","nodeType":"YulIdentifier","src":"13971:3:34"},"nativeSrc":"13971:17:34","nodeType":"YulFunctionCall","src":"13971:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13918:43:34","nodeType":"YulIdentifier","src":"13918:43:34"},"nativeSrc":"13918:71:34","nodeType":"YulFunctionCall","src":"13918:71:34"},"nativeSrc":"13918:71:34","nodeType":"YulExpressionStatement","src":"13918:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14043:6:34","nodeType":"YulIdentifier","src":"14043:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"14056:9:34","nodeType":"YulIdentifier","src":"14056:9:34"},{"kind":"number","nativeSrc":"14067:2:34","nodeType":"YulLiteral","src":"14067:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14052:3:34","nodeType":"YulIdentifier","src":"14052:3:34"},"nativeSrc":"14052:18:34","nodeType":"YulFunctionCall","src":"14052:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13999:43:34","nodeType":"YulIdentifier","src":"13999:43:34"},"nativeSrc":"13999:72:34","nodeType":"YulFunctionCall","src":"13999:72:34"},"nativeSrc":"13999:72:34","nodeType":"YulExpressionStatement","src":"13999:72:34"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14125:6:34","nodeType":"YulIdentifier","src":"14125:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"14138:9:34","nodeType":"YulIdentifier","src":"14138:9:34"},{"kind":"number","nativeSrc":"14149:2:34","nodeType":"YulLiteral","src":"14149:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14134:3:34","nodeType":"YulIdentifier","src":"14134:3:34"},"nativeSrc":"14134:18:34","nodeType":"YulFunctionCall","src":"14134:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14081:43:34","nodeType":"YulIdentifier","src":"14081:43:34"},"nativeSrc":"14081:72:34","nodeType":"YulFunctionCall","src":"14081:72:34"},"nativeSrc":"14081:72:34","nodeType":"YulExpressionStatement","src":"14081:72:34"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13718:442:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13828:9:34","nodeType":"YulTypedName","src":"13828:9:34","type":""},{"name":"value2","nativeSrc":"13840:6:34","nodeType":"YulTypedName","src":"13840:6:34","type":""},{"name":"value1","nativeSrc":"13848:6:34","nodeType":"YulTypedName","src":"13848:6:34","type":""},{"name":"value0","nativeSrc":"13856:6:34","nodeType":"YulTypedName","src":"13856:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13867:4:34","nodeType":"YulTypedName","src":"13867:4:34","type":""}],"src":"13718:442:34"},{"body":{"nativeSrc":"14264:124:34","nodeType":"YulBlock","src":"14264:124:34","statements":[{"nativeSrc":"14274:26:34","nodeType":"YulAssignment","src":"14274:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"14286:9:34","nodeType":"YulIdentifier","src":"14286:9:34"},{"kind":"number","nativeSrc":"14297:2:34","nodeType":"YulLiteral","src":"14297:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14282:3:34","nodeType":"YulIdentifier","src":"14282:3:34"},"nativeSrc":"14282:18:34","nodeType":"YulFunctionCall","src":"14282:18:34"},"variableNames":[{"name":"tail","nativeSrc":"14274:4:34","nodeType":"YulIdentifier","src":"14274:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14354:6:34","nodeType":"YulIdentifier","src":"14354:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"14367:9:34","nodeType":"YulIdentifier","src":"14367:9:34"},{"kind":"number","nativeSrc":"14378:1:34","nodeType":"YulLiteral","src":"14378:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14363:3:34","nodeType":"YulIdentifier","src":"14363:3:34"},"nativeSrc":"14363:17:34","nodeType":"YulFunctionCall","src":"14363:17:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14310:43:34","nodeType":"YulIdentifier","src":"14310:43:34"},"nativeSrc":"14310:71:34","nodeType":"YulFunctionCall","src":"14310:71:34"},"nativeSrc":"14310:71:34","nodeType":"YulExpressionStatement","src":"14310:71:34"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"14166:222:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14236:9:34","nodeType":"YulTypedName","src":"14236:9:34","type":""},{"name":"value0","nativeSrc":"14248:6:34","nodeType":"YulTypedName","src":"14248:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14259:4:34","nodeType":"YulTypedName","src":"14259:4:34","type":""}],"src":"14166:222:34"},{"body":{"nativeSrc":"14439:93:34","nodeType":"YulBlock","src":"14439:93:34","statements":[{"nativeSrc":"14449:77:34","nodeType":"YulAssignment","src":"14449:77:34","value":{"arguments":[{"name":"value","nativeSrc":"14464:5:34","nodeType":"YulIdentifier","src":"14464:5:34"},{"kind":"number","nativeSrc":"14471:54:34","nodeType":"YulLiteral","src":"14471:54:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"14460:3:34","nodeType":"YulIdentifier","src":"14460:3:34"},"nativeSrc":"14460:66:34","nodeType":"YulFunctionCall","src":"14460:66:34"},"variableNames":[{"name":"cleaned","nativeSrc":"14449:7:34","nodeType":"YulIdentifier","src":"14449:7:34"}]}]},"name":"cleanup_t_uint208","nativeSrc":"14394:138:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14421:5:34","nodeType":"YulTypedName","src":"14421:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14431:7:34","nodeType":"YulTypedName","src":"14431:7:34","type":""}],"src":"14394:138:34"},{"body":{"nativeSrc":"14582:200:34","nodeType":"YulBlock","src":"14582:200:34","statements":[{"nativeSrc":"14592:25:34","nodeType":"YulAssignment","src":"14592:25:34","value":{"arguments":[{"name":"x","nativeSrc":"14615:1:34","nodeType":"YulIdentifier","src":"14615:1:34"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"14597:17:34","nodeType":"YulIdentifier","src":"14597:17:34"},"nativeSrc":"14597:20:34","nodeType":"YulFunctionCall","src":"14597:20:34"},"variableNames":[{"name":"x","nativeSrc":"14592:1:34","nodeType":"YulIdentifier","src":"14592:1:34"}]},{"nativeSrc":"14626:25:34","nodeType":"YulAssignment","src":"14626:25:34","value":{"arguments":[{"name":"y","nativeSrc":"14649:1:34","nodeType":"YulIdentifier","src":"14649:1:34"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"14631:17:34","nodeType":"YulIdentifier","src":"14631:17:34"},"nativeSrc":"14631:20:34","nodeType":"YulFunctionCall","src":"14631:20:34"},"variableNames":[{"name":"y","nativeSrc":"14626:1:34","nodeType":"YulIdentifier","src":"14626:1:34"}]},{"nativeSrc":"14660:16:34","nodeType":"YulAssignment","src":"14660:16:34","value":{"arguments":[{"name":"x","nativeSrc":"14671:1:34","nodeType":"YulIdentifier","src":"14671:1:34"},{"name":"y","nativeSrc":"14674:1:34","nodeType":"YulIdentifier","src":"14674:1:34"}],"functionName":{"name":"add","nativeSrc":"14667:3:34","nodeType":"YulIdentifier","src":"14667:3:34"},"nativeSrc":"14667:9:34","nodeType":"YulFunctionCall","src":"14667:9:34"},"variableNames":[{"name":"sum","nativeSrc":"14660:3:34","nodeType":"YulIdentifier","src":"14660:3:34"}]},{"body":{"nativeSrc":"14753:22:34","nodeType":"YulBlock","src":"14753:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14755:16:34","nodeType":"YulIdentifier","src":"14755:16:34"},"nativeSrc":"14755:18:34","nodeType":"YulFunctionCall","src":"14755:18:34"},"nativeSrc":"14755:18:34","nodeType":"YulExpressionStatement","src":"14755:18:34"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"14692:3:34","nodeType":"YulIdentifier","src":"14692:3:34"},{"kind":"number","nativeSrc":"14697:54:34","nodeType":"YulLiteral","src":"14697:54:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14689:2:34","nodeType":"YulIdentifier","src":"14689:2:34"},"nativeSrc":"14689:63:34","nodeType":"YulFunctionCall","src":"14689:63:34"},"nativeSrc":"14686:89:34","nodeType":"YulIf","src":"14686:89:34"}]},"name":"checked_add_t_uint208","nativeSrc":"14538:244:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14569:1:34","nodeType":"YulTypedName","src":"14569:1:34","type":""},{"name":"y","nativeSrc":"14572:1:34","nodeType":"YulTypedName","src":"14572:1:34","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"14578:3:34","nodeType":"YulTypedName","src":"14578:3:34","type":""}],"src":"14538:244:34"},{"body":{"nativeSrc":"14843:32:34","nodeType":"YulBlock","src":"14843:32:34","statements":[{"nativeSrc":"14853:16:34","nodeType":"YulAssignment","src":"14853:16:34","value":{"name":"value","nativeSrc":"14864:5:34","nodeType":"YulIdentifier","src":"14864:5:34"},"variableNames":[{"name":"cleaned","nativeSrc":"14853:7:34","nodeType":"YulIdentifier","src":"14853:7:34"}]}]},"name":"cleanup_t_rational_208_by_1","nativeSrc":"14788:87:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14825:5:34","nodeType":"YulTypedName","src":"14825:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14835:7:34","nodeType":"YulTypedName","src":"14835:7:34","type":""}],"src":"14788:87:34"},{"body":{"nativeSrc":"14949:90:34","nodeType":"YulBlock","src":"14949:90:34","statements":[{"nativeSrc":"14959:74:34","nodeType":"YulAssignment","src":"14959:74:34","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15025:5:34","nodeType":"YulIdentifier","src":"15025:5:34"}],"functionName":{"name":"cleanup_t_rational_208_by_1","nativeSrc":"14997:27:34","nodeType":"YulIdentifier","src":"14997:27:34"},"nativeSrc":"14997:34:34","nodeType":"YulFunctionCall","src":"14997:34:34"}],"functionName":{"name":"identity","nativeSrc":"14988:8:34","nodeType":"YulIdentifier","src":"14988:8:34"},"nativeSrc":"14988:44:34","nodeType":"YulFunctionCall","src":"14988:44:34"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"14972:15:34","nodeType":"YulIdentifier","src":"14972:15:34"},"nativeSrc":"14972:61:34","nodeType":"YulFunctionCall","src":"14972:61:34"},"variableNames":[{"name":"converted","nativeSrc":"14959:9:34","nodeType":"YulIdentifier","src":"14959:9:34"}]}]},"name":"convert_t_rational_208_by_1_to_t_uint8","nativeSrc":"14881:158:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14929:5:34","nodeType":"YulTypedName","src":"14929:5:34","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"14939:9:34","nodeType":"YulTypedName","src":"14939:9:34","type":""}],"src":"14881:158:34"},{"body":{"nativeSrc":"15118:74:34","nodeType":"YulBlock","src":"15118:74:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15135:3:34","nodeType":"YulIdentifier","src":"15135:3:34"},{"arguments":[{"name":"value","nativeSrc":"15179:5:34","nodeType":"YulIdentifier","src":"15179:5:34"}],"functionName":{"name":"convert_t_rational_208_by_1_to_t_uint8","nativeSrc":"15140:38:34","nodeType":"YulIdentifier","src":"15140:38:34"},"nativeSrc":"15140:45:34","nodeType":"YulFunctionCall","src":"15140:45:34"}],"functionName":{"name":"mstore","nativeSrc":"15128:6:34","nodeType":"YulIdentifier","src":"15128:6:34"},"nativeSrc":"15128:58:34","nodeType":"YulFunctionCall","src":"15128:58:34"},"nativeSrc":"15128:58:34","nodeType":"YulExpressionStatement","src":"15128:58:34"}]},"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nativeSrc":"15045:147:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15106:5:34","nodeType":"YulTypedName","src":"15106:5:34","type":""},{"name":"pos","nativeSrc":"15113:3:34","nodeType":"YulTypedName","src":"15113:3:34","type":""}],"src":"15045:147:34"},{"body":{"nativeSrc":"15332:214:34","nodeType":"YulBlock","src":"15332:214:34","statements":[{"nativeSrc":"15342:26:34","nodeType":"YulAssignment","src":"15342:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"15354:9:34","nodeType":"YulIdentifier","src":"15354:9:34"},{"kind":"number","nativeSrc":"15365:2:34","nodeType":"YulLiteral","src":"15365:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15350:3:34","nodeType":"YulIdentifier","src":"15350:3:34"},"nativeSrc":"15350:18:34","nodeType":"YulFunctionCall","src":"15350:18:34"},"variableNames":[{"name":"tail","nativeSrc":"15342:4:34","nodeType":"YulIdentifier","src":"15342:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15430:6:34","nodeType":"YulIdentifier","src":"15430:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"15443:9:34","nodeType":"YulIdentifier","src":"15443:9:34"},{"kind":"number","nativeSrc":"15454:1:34","nodeType":"YulLiteral","src":"15454:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15439:3:34","nodeType":"YulIdentifier","src":"15439:3:34"},"nativeSrc":"15439:17:34","nodeType":"YulFunctionCall","src":"15439:17:34"}],"functionName":{"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nativeSrc":"15378:51:34","nodeType":"YulIdentifier","src":"15378:51:34"},"nativeSrc":"15378:79:34","nodeType":"YulFunctionCall","src":"15378:79:34"},"nativeSrc":"15378:79:34","nodeType":"YulExpressionStatement","src":"15378:79:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15511:6:34","nodeType":"YulIdentifier","src":"15511:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"15524:9:34","nodeType":"YulIdentifier","src":"15524:9:34"},{"kind":"number","nativeSrc":"15535:2:34","nodeType":"YulLiteral","src":"15535:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15520:3:34","nodeType":"YulIdentifier","src":"15520:3:34"},"nativeSrc":"15520:18:34","nodeType":"YulFunctionCall","src":"15520:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15467:43:34","nodeType":"YulIdentifier","src":"15467:43:34"},"nativeSrc":"15467:72:34","nodeType":"YulFunctionCall","src":"15467:72:34"},"nativeSrc":"15467:72:34","nodeType":"YulExpressionStatement","src":"15467:72:34"}]},"name":"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"15198:348:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15296:9:34","nodeType":"YulTypedName","src":"15296:9:34","type":""},{"name":"value1","nativeSrc":"15308:6:34","nodeType":"YulTypedName","src":"15308:6:34","type":""},{"name":"value0","nativeSrc":"15316:6:34","nodeType":"YulTypedName","src":"15316:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15327:4:34","nodeType":"YulTypedName","src":"15327:4:34","type":""}],"src":"15198:348:34"},{"body":{"nativeSrc":"15597:202:34","nodeType":"YulBlock","src":"15597:202:34","statements":[{"nativeSrc":"15607:25:34","nodeType":"YulAssignment","src":"15607:25:34","value":{"arguments":[{"name":"x","nativeSrc":"15630:1:34","nodeType":"YulIdentifier","src":"15630:1:34"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"15612:17:34","nodeType":"YulIdentifier","src":"15612:17:34"},"nativeSrc":"15612:20:34","nodeType":"YulFunctionCall","src":"15612:20:34"},"variableNames":[{"name":"x","nativeSrc":"15607:1:34","nodeType":"YulIdentifier","src":"15607:1:34"}]},{"nativeSrc":"15641:25:34","nodeType":"YulAssignment","src":"15641:25:34","value":{"arguments":[{"name":"y","nativeSrc":"15664:1:34","nodeType":"YulIdentifier","src":"15664:1:34"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"15646:17:34","nodeType":"YulIdentifier","src":"15646:17:34"},"nativeSrc":"15646:20:34","nodeType":"YulFunctionCall","src":"15646:20:34"},"variableNames":[{"name":"y","nativeSrc":"15641:1:34","nodeType":"YulIdentifier","src":"15641:1:34"}]},{"nativeSrc":"15675:17:34","nodeType":"YulAssignment","src":"15675:17:34","value":{"arguments":[{"name":"x","nativeSrc":"15687:1:34","nodeType":"YulIdentifier","src":"15687:1:34"},{"name":"y","nativeSrc":"15690:1:34","nodeType":"YulIdentifier","src":"15690:1:34"}],"functionName":{"name":"sub","nativeSrc":"15683:3:34","nodeType":"YulIdentifier","src":"15683:3:34"},"nativeSrc":"15683:9:34","nodeType":"YulFunctionCall","src":"15683:9:34"},"variableNames":[{"name":"diff","nativeSrc":"15675:4:34","nodeType":"YulIdentifier","src":"15675:4:34"}]},{"body":{"nativeSrc":"15770:22:34","nodeType":"YulBlock","src":"15770:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15772:16:34","nodeType":"YulIdentifier","src":"15772:16:34"},"nativeSrc":"15772:18:34","nodeType":"YulFunctionCall","src":"15772:18:34"},"nativeSrc":"15772:18:34","nodeType":"YulExpressionStatement","src":"15772:18:34"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"15708:4:34","nodeType":"YulIdentifier","src":"15708:4:34"},{"kind":"number","nativeSrc":"15714:54:34","nodeType":"YulLiteral","src":"15714:54:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15705:2:34","nodeType":"YulIdentifier","src":"15705:2:34"},"nativeSrc":"15705:64:34","nodeType":"YulFunctionCall","src":"15705:64:34"},"nativeSrc":"15702:90:34","nodeType":"YulIf","src":"15702:90:34"}]},"name":"checked_sub_t_uint208","nativeSrc":"15552:247:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15583:1:34","nodeType":"YulTypedName","src":"15583:1:34","type":""},{"name":"y","nativeSrc":"15586:1:34","nodeType":"YulTypedName","src":"15586:1:34","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"15592:4:34","nodeType":"YulTypedName","src":"15592:4:34","type":""}],"src":"15552:247:34"},{"body":{"nativeSrc":"15850:149:34","nodeType":"YulBlock","src":"15850:149:34","statements":[{"nativeSrc":"15860:25:34","nodeType":"YulAssignment","src":"15860:25:34","value":{"arguments":[{"name":"x","nativeSrc":"15883:1:34","nodeType":"YulIdentifier","src":"15883:1:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15865:17:34","nodeType":"YulIdentifier","src":"15865:17:34"},"nativeSrc":"15865:20:34","nodeType":"YulFunctionCall","src":"15865:20:34"},"variableNames":[{"name":"x","nativeSrc":"15860:1:34","nodeType":"YulIdentifier","src":"15860:1:34"}]},{"nativeSrc":"15894:25:34","nodeType":"YulAssignment","src":"15894:25:34","value":{"arguments":[{"name":"y","nativeSrc":"15917:1:34","nodeType":"YulIdentifier","src":"15917:1:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15899:17:34","nodeType":"YulIdentifier","src":"15899:17:34"},"nativeSrc":"15899:20:34","nodeType":"YulFunctionCall","src":"15899:20:34"},"variableNames":[{"name":"y","nativeSrc":"15894:1:34","nodeType":"YulIdentifier","src":"15894:1:34"}]},{"nativeSrc":"15928:17:34","nodeType":"YulAssignment","src":"15928:17:34","value":{"arguments":[{"name":"x","nativeSrc":"15940:1:34","nodeType":"YulIdentifier","src":"15940:1:34"},{"name":"y","nativeSrc":"15943:1:34","nodeType":"YulIdentifier","src":"15943:1:34"}],"functionName":{"name":"sub","nativeSrc":"15936:3:34","nodeType":"YulIdentifier","src":"15936:3:34"},"nativeSrc":"15936:9:34","nodeType":"YulFunctionCall","src":"15936:9:34"},"variableNames":[{"name":"diff","nativeSrc":"15928:4:34","nodeType":"YulIdentifier","src":"15928:4:34"}]},{"body":{"nativeSrc":"15970:22:34","nodeType":"YulBlock","src":"15970:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15972:16:34","nodeType":"YulIdentifier","src":"15972:16:34"},"nativeSrc":"15972:18:34","nodeType":"YulFunctionCall","src":"15972:18:34"},"nativeSrc":"15972:18:34","nodeType":"YulExpressionStatement","src":"15972:18:34"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"15961:4:34","nodeType":"YulIdentifier","src":"15961:4:34"},{"name":"x","nativeSrc":"15967:1:34","nodeType":"YulIdentifier","src":"15967:1:34"}],"functionName":{"name":"gt","nativeSrc":"15958:2:34","nodeType":"YulIdentifier","src":"15958:2:34"},"nativeSrc":"15958:11:34","nodeType":"YulFunctionCall","src":"15958:11:34"},"nativeSrc":"15955:37:34","nodeType":"YulIf","src":"15955:37:34"}]},"name":"checked_sub_t_uint256","nativeSrc":"15805:194:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15836:1:34","nodeType":"YulTypedName","src":"15836:1:34","type":""},{"name":"y","nativeSrc":"15839:1:34","nodeType":"YulTypedName","src":"15839:1:34","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"15845:4:34","nodeType":"YulTypedName","src":"15845:4:34","type":""}],"src":"15805:194:34"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint208(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function checked_add_t_uint208(x, y) -> sum {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_208_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_208_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_208_by_1(value)))\n    }\n\n    function abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_208_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint208(x, y) -> diff {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n","id":34,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x60ED CODESIZE SUB DUP1 PUSH3 0x60ED DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x127D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7472696E6F73746F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5472696E6F73546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54524E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x123 SWAP2 SWAP1 PUSH3 0x153E JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x135 SWAP2 SWAP1 PUSH3 0x153E JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1C8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1BF SWAP2 SWAP1 PUSH3 0x1636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1D9 DUP2 PUSH3 0x2D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1F0 PUSH1 0x6 DUP4 PUSH3 0x398 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x20E PUSH1 0x7 DUP3 PUSH3 0x398 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x24D PUSH3 0x3F0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x2CA DUP2 PUSH3 0x2A0 PUSH3 0x44D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x2AE SWAP2 SWAP1 PUSH3 0x17E3 JUMP JUMPDEST PUSH3 0x186A0 PUSH3 0x2BE SWAP2 SWAP1 PUSH3 0x1834 JUMP JUMPDEST PUSH3 0x456 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x1C9A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x3BE JUMPI PUSH3 0x3B6 DUP4 PUSH3 0x4E3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x3EA JUMP JUMPDEST DUP3 PUSH3 0x3D0 DUP4 PUSH3 0x550 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x3E1 SWAP2 SWAP1 PUSH3 0x153E JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x432 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4CB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4C2 SWAP2 SWAP1 PUSH3 0x1636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4DF PUSH1 0x0 DUP4 DUP4 PUSH3 0x55A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x533 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x52A SWAP2 SWAP1 PUSH3 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x541 SWAP1 PUSH3 0x19ED JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x56D DUP4 DUP4 DUP4 PUSH3 0x572 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x585 DUP4 DUP4 DUP4 PUSH3 0x647 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x62F JUMPI PUSH1 0x0 PUSH3 0x5CC PUSH3 0x66F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x5E0 PUSH3 0x679 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x62C JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x623 SWAP3 SWAP2 SWAP1 PUSH3 0x1A5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH3 0x642 DUP4 DUP4 DUP4 PUSH3 0x69D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x657 PUSH3 0x7A3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x66A DUP4 DUP4 DUP4 PUSH3 0x7ED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x704 JUMPI PUSH3 0x701 PUSH1 0xB PUSH3 0xA1D PUSH1 0x20 SHL PUSH3 0x13E8 OR PUSH3 0x6F5 DUP5 PUSH3 0xA35 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAA6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x76B JUMPI PUSH3 0x768 PUSH1 0xB PUSH3 0xAF6 PUSH1 0x20 SHL PUSH3 0x13FE OR PUSH3 0x75C DUP5 PUSH3 0xA35 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAA6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMPDEST PUSH3 0x79E PUSH3 0x780 DUP5 PUSH3 0xB0E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x791 DUP5 PUSH3 0xB0E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH3 0xB77 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x7B3 PUSH3 0xE2A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x843 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x836 SWAP2 SWAP1 PUSH3 0x1A8A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x919 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x8D2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1AC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x964 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x9B1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0xA10 SWAP2 SWAP1 PUSH3 0x1B02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xA2D SWAP2 SWAP1 PUSH3 0x1B45 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0xA9E JUMPI PUSH1 0xD0 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA95 SWAP3 SWAP2 SWAP1 PUSH3 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xAEA PUSH3 0xABD PUSH3 0xE41 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAD9 PUSH3 0xAD2 DUP9 PUSH3 0xE49 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP7 DUP9 PUSH1 0x20 SHR JUMP JUMPDEST DUP8 PUSH3 0xEBD PUSH1 0x20 SHL SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xB06 SWAP2 SWAP1 PUSH3 0x1C0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0xBB4 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH3 0xE25 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xCEF JUMPI PUSH1 0x0 DUP1 PUSH3 0xC5E PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0xAF6 PUSH1 0x20 SHL PUSH3 0x13FE OR PUSH3 0xC52 DUP7 PUSH3 0xA35 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAA6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xCE4 SWAP3 SWAP2 SWAP1 PUSH3 0x1A5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xE24 JUMPI PUSH1 0x0 DUP1 PUSH3 0xD93 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0xA1D PUSH1 0x20 SHL PUSH3 0x13E8 OR PUSH3 0xD87 DUP7 PUSH3 0xA35 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAA6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xE19 SWAP3 SWAP2 SWAP1 PUSH3 0x1A5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH3 0xEB2 JUMPI PUSH3 0xE82 DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH3 0xE76 SWAP2 SWAP1 PUSH3 0x1C5F JUMP JUMPDEST PUSH3 0xEE2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xEB5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xED6 DUP6 PUSH1 0x0 ADD DUP6 DUP6 PUSH3 0xEF7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH3 0x1123 JUMPI PUSH1 0x0 PUSH3 0xF2F DUP8 PUSH1 0x1 DUP5 PUSH3 0xF23 SWAP2 SWAP1 PUSH3 0x1C5F JUMP JUMPDEST PUSH3 0xEE2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP3 PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH3 0xFC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP3 PUSH6 0xFFFFFFFFFFFF AND SUB PUSH3 0x1033 JUMPI DUP7 DUP4 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x1113 JUMP JUMPDEST DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 DUP8 SWAP6 POP SWAP6 POP POP POP POP POP PUSH3 0x120B JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1245 DUP3 PUSH3 0x1218 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1257 DUP2 PUSH3 0x1238 JUMP JUMPDEST DUP2 EQ PUSH3 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1277 DUP2 PUSH3 0x124C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1297 JUMPI PUSH3 0x1296 PUSH3 0x1213 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x12A7 DUP6 DUP3 DUP7 ADD PUSH3 0x1266 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x12BA DUP6 DUP3 DUP7 ADD PUSH3 0x1266 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1346 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x135C JUMPI PUSH3 0x135B PUSH3 0x12FE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x13C6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x1387 JUMP JUMPDEST PUSH3 0x13D2 DUP7 DUP4 PUSH3 0x1387 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x141F PUSH3 0x1419 PUSH3 0x1413 DUP5 PUSH3 0x13EA JUMP JUMPDEST PUSH3 0x13F4 JUMP JUMPDEST PUSH3 0x13EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x143B DUP4 PUSH3 0x13FE JUMP JUMPDEST PUSH3 0x1453 PUSH3 0x144A DUP3 PUSH3 0x1426 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x1394 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x146A PUSH3 0x145B JUMP JUMPDEST PUSH3 0x1477 DUP2 DUP5 DUP5 PUSH3 0x1430 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x149F JUMPI PUSH3 0x1493 PUSH1 0x0 DUP3 PUSH3 0x1460 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x147D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x14EE JUMPI PUSH3 0x14B8 DUP2 PUSH3 0x1362 JUMP JUMPDEST PUSH3 0x14C3 DUP5 PUSH3 0x1377 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x14D3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x14EB PUSH3 0x14E2 DUP6 PUSH3 0x1377 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x147C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1513 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x14F3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x152E DUP4 DUP4 PUSH3 0x1500 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1549 DUP3 PUSH3 0x12C4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1565 JUMPI PUSH3 0x1564 PUSH3 0x12CF JUMP JUMPDEST JUMPDEST PUSH3 0x1571 DUP3 SLOAD PUSH3 0x132D JUMP JUMPDEST PUSH3 0x157E DUP3 DUP3 DUP6 PUSH3 0x14A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x15B6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x15A1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x15AD DUP6 DUP3 PUSH3 0x1520 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x161D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x15C6 DUP7 PUSH3 0x1362 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x15F0 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x15C9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x1610 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x160C PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x1500 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1630 DUP2 PUSH3 0x1238 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x164D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1625 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x16E1 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x16B9 JUMPI PUSH3 0x16B8 PUSH3 0x1653 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x16C9 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x16D9 DUP6 PUSH3 0x1682 JUMP JUMPDEST SWAP5 POP PUSH3 0x1699 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x16FC JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x17CF JUMP JUMPDEST DUP2 PUSH3 0x170C JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x17CF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x1725 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x1730 JUMPI PUSH3 0x1766 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x17CF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x1745 JUMPI PUSH3 0x1744 PUSH3 0x1653 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x175F JUMPI PUSH3 0x175E PUSH3 0x1653 JUMP JUMPDEST JUMPDEST POP PUSH3 0x17CF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x17A0 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x179A JUMPI PUSH3 0x1799 PUSH3 0x1653 JUMP JUMPDEST JUMPDEST PUSH3 0x17CF JUMP JUMPDEST PUSH3 0x17AF DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x168F JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x17C9 JUMPI PUSH3 0x17C8 PUSH3 0x1653 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x17F0 DUP3 PUSH3 0x13EA JUMP JUMPDEST SWAP2 POP PUSH3 0x17FD DUP4 PUSH3 0x17D6 JUMP JUMPDEST SWAP3 POP PUSH3 0x182C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x16EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1841 DUP3 PUSH3 0x13EA JUMP JUMPDEST SWAP2 POP PUSH3 0x184E DUP4 PUSH3 0x13EA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x185E DUP2 PUSH3 0x13EA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x1878 JUMPI PUSH3 0x1877 PUSH3 0x1653 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1894 DUP2 PUSH3 0x187F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x18A5 DUP2 PUSH3 0x13EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x18C2 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x1889 JUMP JUMPDEST PUSH3 0x18D1 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x1889 JUMP JUMPDEST PUSH3 0x18E0 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x1889 JUMP JUMPDEST PUSH3 0x18EF PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x189A JUMP JUMPDEST PUSH3 0x18FE PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x1625 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1939 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x191C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1963 DUP3 PUSH3 0x12C4 JUMP JUMPDEST PUSH3 0x196F DUP2 DUP6 PUSH3 0x1908 JUMP JUMPDEST SWAP4 POP PUSH3 0x1981 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1919 JUMP JUMPDEST PUSH3 0x198C DUP2 PUSH3 0x1945 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x19B3 DUP2 DUP5 PUSH3 0x1956 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x19E4 DUP3 MLOAD PUSH3 0x187F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x19FA DUP3 PUSH3 0x19BB JUMP JUMPDEST DUP3 PUSH3 0x1A06 DUP5 PUSH3 0x19C6 JUMP JUMPDEST SWAP1 POP PUSH3 0x1A13 DUP2 PUSH3 0x19D6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x1A56 JUMPI PUSH3 0x1A51 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x1387 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1A74 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x189A JUMP JUMPDEST PUSH3 0x1A83 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x189A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A97 DUP3 PUSH3 0x13EA JUMP JUMPDEST SWAP2 POP PUSH3 0x1AA4 DUP4 PUSH3 0x13EA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x1ABF JUMPI PUSH3 0x1ABE PUSH3 0x1653 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1ADC PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1625 JUMP JUMPDEST PUSH3 0x1AEB PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x189A JUMP JUMPDEST PUSH3 0x1AFA PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x189A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1B19 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x189A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B52 DUP3 PUSH3 0x1B1F JUMP JUMPDEST SWAP2 POP PUSH3 0x1B5F DUP4 PUSH3 0x1B1F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1B94 JUMPI PUSH3 0x1B93 PUSH3 0x1653 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BC5 PUSH3 0x1BBF PUSH3 0x1BB9 DUP5 PUSH3 0x1B9A JUMP JUMPDEST PUSH3 0x13F4 JUMP JUMPDEST PUSH3 0x17D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1BD7 DUP2 PUSH3 0x1BA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1BF4 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1BCC JUMP JUMPDEST PUSH3 0x1C03 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x189A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C17 DUP3 PUSH3 0x1B1F JUMP JUMPDEST SWAP2 POP PUSH3 0x1C24 DUP4 PUSH3 0x1B1F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C59 JUMPI PUSH3 0x1C58 PUSH3 0x1653 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C6C DUP3 PUSH3 0x13EA JUMP JUMPDEST SWAP2 POP PUSH3 0x1C79 DUP4 PUSH3 0x13EA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x1C94 JUMPI PUSH3 0x1C93 PUSH3 0x1653 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x43F8 PUSH3 0x1CF5 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1C9F ADD MSTORE PUSH1 0x0 PUSH2 0x1C64 ADD MSTORE PUSH1 0x0 PUSH2 0x20C8 ADD MSTORE PUSH1 0x0 PUSH2 0x20A7 ADD MSTORE PUSH1 0x0 PUSH2 0x15BA ADD MSTORE PUSH1 0x0 PUSH2 0x1610 ADD MSTORE PUSH1 0x0 PUSH2 0x1639 ADD MSTORE PUSH2 0x43F8 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD9D98CE4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD9D98CE4 EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x6E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x712 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x72E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x666 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x5AE JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x502 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x601E2603 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x47C JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3C4 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x33E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x298 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x35A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x35E7 JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x35A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x855 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x368A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH2 0x93D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x94F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x36A5 JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37E PUSH2 0x979 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x3487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0xA1F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x35A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x37CC JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x35A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x436 PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x3873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH2 0xD2D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x500 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0xD41 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53A PUSH2 0xD73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x544 PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x557 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x568 PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x598 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x36A5 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B6 PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0x3A2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D4 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x3487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x634 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x35A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x664 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x3A9F JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x680 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67B SWAP2 SWAP1 PUSH2 0x3B2C JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x697 SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x122B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x3BCE JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F7 SWAP2 SWAP1 PUSH2 0x3C3A JUMP JUMPDEST PUSH2 0x1336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0x1350 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x748 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x76D SWAP1 PUSH2 0x3D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x799 SWAP1 PUSH2 0x3D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7FB PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0x808 DUP2 DUP6 DUP6 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x828 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0x835 DUP6 DUP3 DUP6 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x840 DUP6 DUP6 DUP6 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85F PUSH2 0x15B6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x86F PUSH2 0xEF4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0x8BF JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B6 SWAP3 SWAP2 SWAP1 PUSH2 0x3D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x918 PUSH2 0x8CB DUP5 PUSH2 0x166D JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x16C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x945 PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0x94D PUSH2 0x1848 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x957 PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0x961 DUP3 DUP3 PUSH2 0x18AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x976 PUSH2 0x970 PUSH2 0x1414 JUMP JUMPDEST DUP3 PUSH2 0x192D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D74696D657374616D70000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA29 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0xA35 DUP2 DUP4 PUSH2 0x19AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA5C DUP7 PUSH2 0xC5C JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0xAA3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xFD9A760900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9A SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAAF DUP8 DUP8 PUSH2 0x122B JUMP JUMPDEST SWAP1 POP PUSH2 0xABB DUP9 DUP8 PUSH2 0x18AB JUMP JUMPDEST PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23E30C8B PUSH2 0xB00 PUSH2 0x1414 JUMP JUMPDEST DUP11 DUP11 DUP7 DUP12 DUP12 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB26 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB69 SWAP2 SWAP1 PUSH2 0x3E4F JUMP JUMPDEST EQ PUSH2 0xBAB JUMPI DUP8 PUSH1 0x40 MLOAD PUSH32 0x678C5B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBB5 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP PUSH2 0xBCD DUP10 ADDRESS DUP5 DUP11 PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x142E JUMP JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 PUSH2 0xC08 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0xC27 JUMPI PUSH2 0xC22 DUP10 DUP4 DUP10 PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x192D JUMP JUMPDEST PUSH2 0xC3D JUMP JUMPDEST PUSH2 0xC31 DUP10 DUP9 PUSH2 0x192D JUMP JUMPDEST PUSH2 0xC3C DUP10 DUP3 DUP5 PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC57 PUSH2 0x813 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC98 JUMPI PUSH1 0x0 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0xCA0 PUSH2 0x813 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xCCB SWAP2 SWAP1 PUSH2 0x3EDF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDE DUP3 PUSH2 0x1AC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD35 PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0xD3F PUSH1 0x0 PUSH2 0x1B20 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD53 DUP3 PUSH2 0xD4D PUSH2 0x1414 JUMP JUMPDEST DUP4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0xD5D DUP3 DUP3 PUSH2 0x192D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6C DUP3 PUSH2 0x1BE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7B PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0xD83 PUSH2 0x1BF8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xD99 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0xDA1 PUSH2 0x1C96 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC2 JUMPI PUSH2 0xDC1 PUSH2 0x3F13 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDF0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE64 PUSH2 0xEF4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0xEB4 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAB SWAP3 SWAP2 SWAP1 PUSH2 0x3D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED0 PUSH2 0xEC0 DUP5 PUSH2 0x166D JUMP JUMPDEST PUSH1 0xB PUSH2 0x16C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF0B SWAP1 PUSH2 0x3D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF37 SWAP1 PUSH2 0x3D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF84 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF59 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF84 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF67 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD7 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1CD1 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1005 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0x1012 DUP2 DUP6 DUP6 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1062 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1059 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10C4 PUSH2 0x10BC PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10A1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1D39 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 POP PUSH2 0x10D0 DUP2 DUP8 PUSH2 0x1D83 JUMP JUMPDEST PUSH2 0x10DA DUP2 DUP9 PUSH2 0x19AF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1128 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111F SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x1157 DUP13 PUSH2 0x1DDB JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x116D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1190 DUP3 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11A0 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1214 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP3 SWAP2 SWAP1 PUSH2 0x3FE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121F DUP11 DUP11 DUP11 PUSH2 0x141C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x129D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xB5A7DB9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A7 DUP4 DUP4 PUSH2 0x1E32 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x133E PUSH2 0x33B9 JUMP JUMPDEST PUSH2 0x1348 DUP4 DUP4 PUSH2 0x1E3A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1358 PUSH2 0x17C1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13CA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C1 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13D3 DUP2 PUSH2 0x1B20 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E1 DUP3 PUSH2 0xCE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x13F6 SWAP2 SWAP1 PUSH2 0x4011 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x140C SWAP2 SWAP1 PUSH2 0x405F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1429 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E9B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143A DUP5 DUP5 PUSH2 0x12AF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x14BC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x14AC JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14BB DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1E9B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1534 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152B SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15A6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159D SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15B1 DUP4 DUP4 DUP4 PUSH2 0x2072 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1632 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x165F JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1667 PUSH2 0x2082 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x16BF JUMPI PUSH1 0x30 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B6 SWAP3 SWAP2 SWAP1 PUSH2 0x4129 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x174F JUMPI PUSH1 0x0 PUSH2 0x16EE DUP5 PUSH2 0x2118 JUMP JUMPDEST DUP5 PUSH2 0x16F9 SWAP2 SWAP1 PUSH2 0x3EDF JUMP JUMPDEST SWAP1 POP PUSH2 0x1708 DUP8 PUSH1 0x0 ADD DUP3 PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP7 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x173D JUMPI DUP1 SWAP2 POP PUSH2 0x174D JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x174A SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x1760 DUP8 PUSH1 0x0 ADD DUP8 DUP6 DUP6 PUSH2 0x22CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x17B2 JUMPI PUSH2 0x1783 DUP8 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x177E SWAP2 SWAP1 PUSH2 0x3EDF JUMP JUMPDEST PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17C9 PUSH2 0x1414 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17E7 PUSH2 0xE2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1846 JUMPI PUSH2 0x180A PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x183D SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1850 PUSH2 0x2343 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1894 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A1 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1914 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1929 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2072 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x199F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1996 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19AB DUP3 PUSH1 0x0 DUP4 PUSH2 0x2072 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BA DUP4 PUSH2 0x9B6 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1ABE DUP2 DUP4 PUSH2 0x1AB9 DUP7 PUSH2 0x2383 JUMP JUMPDEST PUSH2 0x2395 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B19 PUSH2 0x1B14 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x260E JUMP JUMPDEST PUSH2 0x261F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF1 DUP3 PUSH2 0x2677 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C00 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1C44 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C51 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C91 PUSH1 0x6 PUSH32 0x0 PUSH2 0x2701 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CCC PUSH1 0x7 PUSH32 0x0 PUSH2 0x2701 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1D2E JUMPI PUSH2 0x1CFF DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1CFA SWAP2 SWAP1 PUSH2 0x3EDF JUMP JUMPDEST PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D4C PUSH2 0x1D46 PUSH2 0x15B6 JUMP JUMPDEST DUP4 PUSH2 0x27B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1D65 DUP9 DUP9 DUP9 DUP9 PUSH2 0x27F2 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1D75 DUP3 DUP3 PUSH2 0x28E6 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8E DUP4 PUSH2 0x1DDB JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1DD6 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DCD SWAP3 SWAP2 SWAP1 PUSH2 0x4152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E42 PUSH2 0x33B9 JUMP JUMPDEST PUSH2 0x1E93 DUP3 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A4A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F0D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F04 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F7F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F76 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x206C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2063 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x207D DUP4 DUP4 DUP4 PUSH2 0x2B1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20FD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x417B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0x212A JUMPI DUP2 SWAP1 POP PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x215C JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x217B JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x2196 JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x21AF JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x21C7 JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x21DE JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x21EE JUMPI PUSH1 0x1 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 MUL SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x220A JUMPI PUSH2 0x2209 PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x2223 JUMPI PUSH2 0x2222 PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x223C JUMPI PUSH2 0x223B PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x2255 JUMPI PUSH2 0x2254 PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x226E JUMPI PUSH2 0x226D PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x2287 JUMPI PUSH2 0x2286 PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x22A9 DUP2 DUP6 DUP2 PUSH2 0x22A1 JUMPI PUSH2 0x22A0 PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 GT PUSH2 0x2BD0 JUMP JUMPDEST DUP2 SUB SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x2338 JUMPI PUSH1 0x0 PUSH2 0x22E1 DUP5 DUP5 PUSH2 0x2BDC JUMP JUMPDEST SWAP1 POP DUP5 PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x22F6 DUP8 DUP4 PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2322 JUMPI DUP1 SWAP3 POP PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x232F SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x22CD JUMP JUMPDEST DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x234B PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x2381 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x238E DUP3 PUSH2 0xCE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x23D1 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2609 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24EF JUMPI PUSH1 0x0 DUP1 PUSH2 0x2460 PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x13FE PUSH2 0x245B DUP7 PUSH2 0x2C02 JUMP JUMPDEST PUSH2 0x2C70 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x24E4 SWAP3 SWAP2 SWAP1 PUSH2 0x41FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2608 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2579 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x13E8 PUSH2 0x2574 DUP7 PUSH2 0x2C02 JUMP JUMPDEST PUSH2 0x2C70 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x25FD SWAP3 SWAP2 SWAP1 PUSH2 0x41FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x266F JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2666 SWAP3 SWAP2 SWAP1 PUSH2 0x4261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C8 PUSH2 0xA39 JUMP JUMPDEST ISZERO PUSH2 0x26FF JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x271E JUMPI PUSH2 0x2717 DUP4 PUSH2 0x2CB0 JUMP JUMPDEST SWAP1 POP PUSH2 0x27AB JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x272A SWAP1 PUSH2 0x3D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2756 SWAP1 PUSH2 0x3D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2778 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2786 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2832 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2857 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x428A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2879 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28CD JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x28DC JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x28FA JUMPI PUSH2 0x28F9 PUSH2 0x42CF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x290D JUMPI PUSH2 0x290C PUSH2 0x42CF JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2A46 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2927 JUMPI PUSH2 0x2926 PUSH2 0x42CF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x293A JUMPI PUSH2 0x2939 PUSH2 0x42CF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2971 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2985 JUMPI PUSH2 0x2984 PUSH2 0x42CF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2998 JUMPI PUSH2 0x2997 PUSH2 0x42CF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x29DD JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D4 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x29F0 JUMPI PUSH2 0x29EF PUSH2 0x42CF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A03 JUMPI PUSH2 0x2A02 PUSH2 0x42CF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2A45 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3C SWAP2 SWAP1 PUSH2 0x368A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2A52 PUSH2 0x33B9 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x2A6E JUMPI PUSH2 0x2A6D PUSH2 0x42FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B2A DUP4 DUP4 DUP4 PUSH2 0x2D24 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2BC0 JUMPI PUSH1 0x0 PUSH2 0x2B68 PUSH2 0x813 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B74 PUSH2 0x2D3C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2BBD JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BB4 SWAP3 SWAP2 SWAP1 PUSH2 0x41FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0x2BCB DUP4 DUP4 DUP4 PUSH2 0x2D60 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2BED SWAP2 SWAP1 PUSH2 0x432D JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2BFA SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2C68 JUMPI PUSH1 0xD0 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5F SWAP3 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA4 PUSH2 0x2C7E PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x2C94 PUSH2 0x2C8A DUP9 PUSH2 0x1CD1 JUMP JUMPDEST DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x2E1A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2CBD DUP4 PUSH2 0x2E37 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CDC JUMPI PUSH2 0x2CDB PUSH2 0x3F13 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2D0E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D2C PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x2D37 DUP4 DUP4 DUP4 PUSH2 0x2E87 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DAD JUMPI PUSH2 0x2DAA PUSH1 0xB PUSH2 0x13E8 PUSH2 0x2DA5 DUP5 PUSH2 0x2C02 JUMP JUMPDEST PUSH2 0x2C70 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DFA JUMPI PUSH2 0x2DF7 PUSH1 0xB PUSH2 0x13FE PUSH2 0x2DF2 DUP5 PUSH2 0x2C02 JUMP JUMPDEST PUSH2 0x2C70 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x2E15 PUSH2 0x2E06 DUP5 PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x2E0F DUP5 PUSH2 0x9B6 JUMP JUMPDEST DUP4 PUSH2 0x2395 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E2B DUP6 PUSH1 0x0 ADD DUP6 DUP6 PUSH2 0x30AC JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2E7E JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2ED9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2ECD SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2FAC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2F65 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FF5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3042 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x309F SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x32C9 JUMPI PUSH1 0x0 PUSH2 0x30D9 DUP8 PUSH1 0x1 DUP5 PUSH2 0x30D4 SWAP2 SWAP1 PUSH2 0x3EDF JUMP JUMPDEST PUSH2 0x22B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP3 PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x316F JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP3 PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x31DA JUMPI DUP7 DUP4 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x32BA JUMP JUMPDEST DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 DUP8 SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0x33B1 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3431 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3416 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3459 DUP3 PUSH2 0x33F7 JUMP JUMPDEST PUSH2 0x3463 DUP2 DUP6 PUSH2 0x3402 JUMP JUMPDEST SWAP4 POP PUSH2 0x3473 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3413 JUMP JUMPDEST PUSH2 0x347C DUP2 PUSH2 0x343D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34A1 DUP2 DUP5 PUSH2 0x344E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34DE DUP3 PUSH2 0x34B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34EE DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x34F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x350B DUP2 PUSH2 0x34E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3524 DUP2 PUSH2 0x3511 JUMP JUMPDEST DUP2 EQ PUSH2 0x352F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3541 DUP2 PUSH2 0x351B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x355E JUMPI PUSH2 0x355D PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x356C DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x357D DUP6 DUP3 DUP7 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359C DUP2 PUSH2 0x3587 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35C6 DUP2 PUSH2 0x3511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3600 JUMPI PUSH2 0x35FF PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x360E DUP7 DUP3 DUP8 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x361F DUP7 DUP3 DUP8 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3630 DUP7 DUP3 DUP8 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3650 DUP2 PUSH2 0x363A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x366B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3647 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3684 DUP2 PUSH2 0x3671 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x369F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x367B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36BB JUMPI PUSH2 0x36BA PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36C9 DUP5 DUP3 DUP6 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36E8 JUMPI PUSH2 0x36E7 PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36F6 DUP5 DUP3 DUP6 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3708 DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3723 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x36FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3734 DUP3 PUSH2 0x34D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3744 DUP2 PUSH2 0x3729 JUMP JUMPDEST DUP2 EQ PUSH2 0x374F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3761 DUP2 PUSH2 0x373B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x378C JUMPI PUSH2 0x378B PUSH2 0x3767 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37A9 JUMPI PUSH2 0x37A8 PUSH2 0x376C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x37C5 JUMPI PUSH2 0x37C4 PUSH2 0x3771 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x37E8 JUMPI PUSH2 0x37E7 PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37F6 DUP9 DUP3 DUP10 ADD PUSH2 0x3752 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3807 DUP9 DUP3 DUP10 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x3818 DUP9 DUP3 DUP10 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3839 JUMPI PUSH2 0x3838 PUSH2 0x34AE JUMP JUMPDEST JUMPDEST PUSH2 0x3845 DUP9 DUP3 DUP10 ADD PUSH2 0x3776 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x386D DUP2 PUSH2 0x3854 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3888 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38C3 DUP2 PUSH2 0x388E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38FE DUP2 PUSH2 0x3511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3910 DUP4 DUP4 PUSH2 0x38F5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3934 DUP3 PUSH2 0x38C9 JUMP JUMPDEST PUSH2 0x393E DUP2 DUP6 PUSH2 0x38D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3949 DUP4 PUSH2 0x38E5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x397A JUMPI DUP2 MLOAD PUSH2 0x3961 DUP9 DUP3 PUSH2 0x3904 JUMP JUMPDEST SWAP8 POP PUSH2 0x396C DUP4 PUSH2 0x391C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x394D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x399C PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x38BA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x39AE DUP2 DUP10 PUSH2 0x344E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x39C2 DUP2 DUP9 PUSH2 0x344E JUMP JUMPDEST SWAP1 POP PUSH2 0x39D1 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x39DE PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x39EB PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x367B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x39FD DUP2 DUP5 PUSH2 0x3929 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A26 DUP2 PUSH2 0x3A0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A41 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A50 DUP2 PUSH2 0x363A JUMP JUMPDEST DUP2 EQ PUSH2 0x3A5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A6D DUP2 PUSH2 0x3A47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A7C DUP2 PUSH2 0x3671 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A99 DUP2 PUSH2 0x3A73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3ABC JUMPI PUSH2 0x3ABB PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3ACA DUP10 DUP3 DUP11 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3ADB DUP10 DUP3 DUP11 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3AEC DUP10 DUP3 DUP11 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3AFD DUP10 DUP3 DUP11 ADD PUSH2 0x3A5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3B0E DUP10 DUP3 DUP11 ADD PUSH2 0x3A8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3B1F DUP10 DUP3 DUP11 ADD PUSH2 0x3A8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3B4B JUMPI PUSH2 0x3B4A PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B59 DUP11 DUP3 DUP12 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3B6A DUP11 DUP3 DUP12 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x3B7B DUP11 DUP3 DUP12 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3B8C DUP11 DUP3 DUP12 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3B9D DUP11 DUP3 DUP12 ADD PUSH2 0x3A5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3BAE DUP11 DUP3 DUP12 ADD PUSH2 0x3A8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3BBF DUP11 DUP3 DUP12 ADD PUSH2 0x3A8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BE5 JUMPI PUSH2 0x3BE4 PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BF3 DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3C04 DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C17 DUP2 PUSH2 0x3854 JUMP JUMPDEST DUP2 EQ PUSH2 0x3C22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C34 DUP2 PUSH2 0x3C0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C51 JUMPI PUSH2 0x3C50 PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C5F DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3C70 DUP6 DUP3 DUP7 ADD PUSH2 0x3C25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C83 DUP2 PUSH2 0x3A0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CB8 DUP2 PUSH2 0x3C89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3CD4 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3C7A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3CE7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3CAF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D02 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3D4F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3D62 JUMPI PUSH2 0x3D61 PUSH2 0x3D08 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D7D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x3D8A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A1D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DBD DUP4 DUP6 PUSH2 0x3D91 JUMP JUMPDEST SWAP4 POP PUSH2 0x3DCA DUP4 DUP6 DUP5 PUSH2 0x3DA2 JUMP JUMPDEST PUSH2 0x3DD3 DUP4 PUSH2 0x343D JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3DF3 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x3E00 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x3E0D PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x3E1A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x35BD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3E2D DUP2 DUP5 DUP7 PUSH2 0x3DB1 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E49 DUP2 PUSH2 0x3A73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E65 JUMPI PUSH2 0x3E64 PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E73 DUP5 DUP3 DUP6 ADD PUSH2 0x3E3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3EB6 DUP3 PUSH2 0x3511 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EC1 DUP4 PUSH2 0x3511 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3ED9 JUMPI PUSH2 0x3ED8 PUSH2 0x3E7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EEA DUP3 PUSH2 0x3511 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EF5 DUP4 PUSH2 0x3511 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3F0D JUMPI PUSH2 0x3F0C PUSH2 0x3E7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F57 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x3F64 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x3F71 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x3F7E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3F9C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x3FA9 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x3FB6 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x3FC3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x3FD0 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x3FDD PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3FFD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x400A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x36FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x401C DUP3 PUSH2 0x3C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x4027 DUP4 PUSH2 0x3C89 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4059 JUMPI PUSH2 0x4058 PUSH2 0x3E7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406A DUP3 PUSH2 0x3C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x4075 DUP4 PUSH2 0x3C89 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40A7 JUMPI PUSH2 0x40A6 PUSH2 0x3E7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x40C2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x40CF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x40DC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4113 PUSH2 0x410E PUSH2 0x4109 DUP5 PUSH2 0x40E4 JUMP JUMPDEST PUSH2 0x40EE JUMP JUMPDEST PUSH2 0x363A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4123 DUP2 PUSH2 0x40F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x413E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x411A JUMP JUMPDEST PUSH2 0x414B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4167 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x4174 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4190 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x419D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x41AA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x41B7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x41C4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x36FF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4212 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x421F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x424B PUSH2 0x4246 PUSH2 0x4241 DUP5 PUSH2 0x4226 JUMP JUMPDEST PUSH2 0x40EE JUMP JUMPDEST PUSH2 0x363A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x425B DUP2 PUSH2 0x4230 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4276 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4252 JUMP JUMPDEST PUSH2 0x4283 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x429F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x42AC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3647 JUMP JUMPDEST PUSH2 0x42B9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x42C6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x367B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4338 DUP3 PUSH2 0x3511 JUMP JUMPDEST SWAP2 POP PUSH2 0x4343 DUP4 PUSH2 0x3511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4353 JUMPI PUSH2 0x4352 PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4383 PUSH2 0x437E PUSH2 0x4379 DUP5 PUSH2 0x435E JUMP JUMPDEST PUSH2 0x40EE JUMP JUMPDEST PUSH2 0x363A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4393 DUP2 PUSH2 0x4368 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x43AE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x43BB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 LOG0 SWAP7 SWAP16 0xC4 DUP11 LOG1 0xB4 ADDRESS 0x2D SWAP4 PUSH14 0xF14C2FE266F384F975433279F9A3 PUSH23 0xC09380B7AC64736F6C6343000816003300000000000000 ","sourceMap":"649:1554:33:-:0;;;766:242;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:52:14;;;;;;;;;;;;;;;;;1616:4;3328:431:26;;;;;;;;;;;;;;;;;882:12:33;1601:113:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1241:5:21;1231:7;;:15;;;;;;;;;;;;;;;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3401:45:26;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1577:52:14;948::33::3;954:18;989:10;:8;;;:10;;:::i;:::-;983:2;:16;;;;:::i;:::-;974:6;:25;;;;:::i;:::-;948:5;;;:52;;:::i;:::-;766:242:::0;;649:1554;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2887:340:22:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4113:179:26:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;2707:82:9:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;1708:286:22:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:23:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;1614:182:33:-;1758:30;1772:4;1778:2;1782:5;1758:13;;;:30;;:::i;:::-;1614:182;;;:::o;2356:413:15:-;2450:30;2464:4;2470:2;2474:5;2450:13;;;:30;;:::i;:::-;2510:1;2494:18;;:4;:18;;;2490:226;;2528:14;2545:13;:11;;;:13;;:::i;:::-;2528:30;;2572:11;2586:12;:10;;;:12;;:::i;:::-;2572:26;;2625:3;2616:6;:12;2612:94;;;2679:6;2687:3;2655:36;;;;;;;;;;;;:::i;:::-;;;;;;;;2612:94;2514:202;;2490:226;2725:37;2746:4;2752:2;2756:5;2725:20;;;:37;;:::i;:::-;2356:413;;;:::o;1113:145:13:-;1474:19:21;:17;;;:19;;:::i;:::-;1221:30:13::1;1235:4;1241:2;1245:5;1221:13;;;:30;;:::i;:::-;1113:145:::0;;;:::o;2849:97:9:-;2901:7;2927:12;;2920:19;;2849:97;:::o;2113:103:15:-;2166:7;2192:17;2185:24;;;;2113:103;:::o;7232:399:2:-;7351:1;7335:18;;:4;:18;;;7331:107;;7369:58;7375:17;7394:4;;;;;7400:26;7419:6;7400:18;;;:26;;:::i;:::-;7369:5;;;:58;;:::i;:::-;;;7331:107;7465:1;7451:16;;:2;:16;;;7447:110;;7483:63;7489:17;7508:9;;;;;7519:26;7538:6;7519:18;;;:26;;:::i;:::-;7483:5;;;:63;;:::i;:::-;;;7447:110;7566:58;7585:15;7595:4;7585:9;;;:15;;:::i;:::-;7602:13;7612:2;7602:9;;;:13;;:::i;:::-;7617:6;7566:18;;;:58;;:::i;:::-;7232:399;;;:::o;2002:128:21:-;2067:8;:6;;;:8;;:::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;6008:1107:9:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;9304:96:2:-;9362:7;9392:1;9388;:5;;;;:::i;:::-;9381:12;;9304:96;;;;:::o;4174:218:29:-;4231:7;4262:17;4254:25;;:5;:25;4250:105;;;4333:3;4338:5;4302:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4250:105;4379:5;4364:21;;4174:218;;;:::o;9025:273:2:-;9192:16;9210;9245:46;9256:7;:5;;;:7;;:::i;:::-;9265:25;9268:14;:5;:12;;;:14;;:::i;:::-;9284:5;9265:2;:25;;:::i;:::-;9245:5;:10;;;;:46;;;;;:::i;:::-;9238:53;;;;9025:273;;;;;;:::o;9406:101::-;9469:7;9499:1;9495;:5;;;;:::i;:::-;9488:12;;9406:101;;;;:::o;5539:117::-;5604:7;5630:10;:19;5641:7;5630:19;;;;;;;;;;;;;;;;;;;;;;;;;5623:26;;5539:117;;;:::o;7717:789::-;7826:2;7818:10;;:4;:10;;;;:24;;;;;7841:1;7832:6;:10;7818:24;7814:686;;;7878:1;7862:18;;:4;:18;;;7858:315;;7901:16;7919;7939:150;7966:20;:26;7987:4;7966:26;;;;;;;;;;;;;;;8014:9;;;;;8045:26;8064:6;8045:18;;;:26;;:::i;:::-;7939:5;;;:150;;:::i;:::-;7900:189;;;;;;;;8133:4;8112:46;;;8139:8;8149;8112:46;;;;;;;:::i;:::-;;;;;;;;7882:291;;7858:315;8204:1;8190:16;;:2;:16;;;8186:304;;8227:16;8245;8265:143;8292:20;:24;8313:2;8292:24;;;;;;;;;;;;;;;8338:4;;;;;8364:26;8383:6;8364:18;;;:26;;:::i;:::-;8265:5;;;:143;;:::i;:::-;8226:182;;;;;;;;8452:2;8431:44;;;8456:8;8466;8431:44;;;;;;;:::i;:::-;;;;;;;;8208:282;;8186:304;7814:686;7717:789;;;:::o;1850:84:21:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;1261:104:33:-;1308:6;1341:15;1327:30;;1261:104;:::o;10310:206:31:-;10372:7;10391:11;10405:4;:17;;:24;;;;10391:38;;10453:1;10446:3;:8;:63;;10461:41;10475:4;:17;;10500:1;10494:3;:7;;;;:::i;:::-;10461:13;;;:41;;:::i;:::-;:48;;;;;;;;;;;;10446:63;;;10457:1;10446:63;10439:70;;;10310:206;;;:::o;8145:210::-;8257:16;8275;8310:38;8318:4;:17;;8337:3;8342:5;8310:7;;;:38;;:::i;:::-;8303:45;;;;8145:210;;;;;;:::o;14289:265::-;14399:28;14472:9;14469:1;14462:20;14534:3;14527:4;14524:1;14514:18;14510:28;14495:43;;14289:265;;;;:::o;11657:922::-;11778:16;11796;11824:11;11838:4;:11;;;;11824:25;;11870:1;11864:3;:7;11860:713;;;11887:26;11916:28;11930:4;11942:1;11936:3;:7;;;;:::i;:::-;11916:13;;;:28;;:::i;:::-;11887:57;;11958:14;11975:4;:9;;;;;;;;;;;;11958:26;;11998:17;12018:4;:11;;;;;;;;;;;;11998:31;;12113:3;12103:13;;:7;:13;;;12099:89;;;12143:30;;;;;;;;;;;;;;12099:89;12262:3;12251:14;;:7;:14;;;12247:163;;12299:5;12285:4;:11;;;:19;;;;;;;;;;;;;;;;;;12247:163;;;12343:4;12353:41;;;;;;;;12374:3;12353:41;;;;;;12387:5;12353:41;;;;;12343:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12247:163;12431:9;12442:5;12423:25;;;;;;;;;;11860:713;12479:4;12489:41;;;;;;;;12510:3;12489:41;;;;;;12523:5;12489:41;;;;;12479:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12553:1;12556:5;12545:17;;;;;11657:922;;;;;;;:::o;88:117:34:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;6937:180::-;6985:77;6982:1;6975:88;7082:4;7079:1;7072:15;7106:4;7103:1;7096:15;7123:102;7165:8;7212:5;7209:1;7205:13;7184:34;;7123:102;;;:::o;7231:848::-;7292:5;7299:4;7323:6;7314:15;;7347:5;7338:14;;7361:712;7382:1;7372:8;7369:15;7361:712;;;7477:4;7472:3;7468:14;7462:4;7459:24;7456:50;;;7486:18;;:::i;:::-;7456:50;7536:1;7526:8;7522:16;7519:451;;;7951:4;7944:5;7940:16;7931:25;;7519:451;8001:4;7995;7991:15;7983:23;;8031:32;8054:8;8031:32;:::i;:::-;8019:44;;7361:712;;;7231:848;;;;;;;:::o;8085:1073::-;8139:5;8330:8;8320:40;;8351:1;8342:10;;8353:5;;8320:40;8379:4;8369:36;;8396:1;8387:10;;8398:5;;8369:36;8465:4;8513:1;8508:27;;;;8549:1;8544:191;;;;8458:277;;8508:27;8526:1;8517:10;;8528:5;;;8544:191;8589:3;8579:8;8576:17;8573:43;;;8596:18;;:::i;:::-;8573:43;8645:8;8642:1;8638:16;8629:25;;8680:3;8673:5;8670:14;8667:40;;;8687:18;;:::i;:::-;8667:40;8720:5;;;8458:277;;8844:2;8834:8;8831:16;8825:3;8819:4;8816:13;8812:36;8794:2;8784:8;8781:16;8776:2;8770:4;8767:12;8763:35;8747:111;8744:246;;;8900:8;8894:4;8890:19;8881:28;;8935:3;8928:5;8925:14;8922:40;;;8942:18;;:::i;:::-;8922:40;8975:5;;8744:246;9015:42;9053:3;9043:8;9037:4;9034:1;9015:42;:::i;:::-;9000:57;;;;9089:4;9084:3;9080:14;9073:5;9070:25;9067:51;;;9098:18;;:::i;:::-;9067:51;9147:4;9140:5;9136:16;9127:25;;8085:1073;;;;;;:::o;9164:86::-;9199:7;9239:4;9232:5;9228:16;9217:27;;9164:86;;;:::o;9256:281::-;9314:5;9338:23;9356:4;9338:23;:::i;:::-;9330:31;;9382:25;9398:8;9382:25;:::i;:::-;9370:37;;9426:104;9463:66;9453:8;9447:4;9426:104;:::i;:::-;9417:113;;9256:281;;;;:::o;9543:410::-;9583:7;9606:20;9624:1;9606:20;:::i;:::-;9601:25;;9640:20;9658:1;9640:20;:::i;:::-;9635:25;;9695:1;9692;9688:9;9717:30;9735:11;9717:30;:::i;:::-;9706:41;;9896:1;9887:7;9883:15;9880:1;9877:22;9857:1;9850:9;9830:83;9807:139;;9926:18;;:::i;:::-;9807:139;9591:362;9543:410;;;;:::o;9959:77::-;9996:7;10025:5;10014:16;;9959:77;;;:::o;10042:118::-;10129:24;10147:5;10129:24;:::i;:::-;10124:3;10117:37;10042:118;;:::o;10166:::-;10253:24;10271:5;10253:24;:::i;:::-;10248:3;10241:37;10166:118;;:::o;10290:664::-;10495:4;10533:3;10522:9;10518:19;10510:27;;10547:71;10615:1;10604:9;10600:17;10591:6;10547:71;:::i;:::-;10628:72;10696:2;10685:9;10681:18;10672:6;10628:72;:::i;:::-;10710;10778:2;10767:9;10763:18;10754:6;10710:72;:::i;:::-;10792;10860:2;10849:9;10845:18;10836:6;10792:72;:::i;:::-;10874:73;10942:3;10931:9;10927:19;10918:6;10874:73;:::i;:::-;10290:664;;;;;;;;:::o;10960:169::-;11044:11;11078:6;11073:3;11066:19;11118:4;11113:3;11109:14;11094:29;;10960:169;;;;:::o;11135:246::-;11216:1;11226:113;11240:6;11237:1;11234:13;11226:113;;;11325:1;11320:3;11316:11;11310:18;11306:1;11301:3;11297:11;11290:39;11262:2;11259:1;11255:10;11250:15;;11226:113;;;11373:1;11364:6;11359:3;11355:16;11348:27;11197:184;11135:246;;;:::o;11387:102::-;11428:6;11479:2;11475:7;11470:2;11463:5;11459:14;11455:28;11445:38;;11387:102;;;:::o;11495:377::-;11583:3;11611:39;11644:5;11611:39;:::i;:::-;11666:71;11730:6;11725:3;11666:71;:::i;:::-;11659:78;;11746:65;11804:6;11799:3;11792:4;11785:5;11781:16;11746:65;:::i;:::-;11836:29;11858:6;11836:29;:::i;:::-;11831:3;11827:39;11820:46;;11587:285;11495:377;;;;:::o;11878:313::-;11991:4;12029:2;12018:9;12014:18;12006:26;;12078:9;12072:4;12068:20;12064:1;12053:9;12049:17;12042:47;12106:78;12179:4;12170:6;12106:78;:::i;:::-;12098:86;;11878:313;;;;:::o;12197:98::-;12248:6;12282:5;12276:12;12266:22;;12197:98;;;:::o;12301:116::-;12352:4;12375:3;12367:11;;12405:4;12400:3;12396:14;12388:22;;12301:116;;;:::o;12423:154::-;12466:11;12502:29;12526:3;12520:10;12502:29;:::i;:::-;12565:5;12541:29;;12478:99;12423:154;;;:::o;12583:594::-;12667:5;12698:38;12730:5;12698:38;:::i;:::-;12761:5;12788:40;12822:5;12788:40;:::i;:::-;12776:52;;12847:35;12873:8;12847:35;:::i;:::-;12838:44;;12906:2;12898:6;12895:14;12892:278;;;12977:169;13062:66;13032:6;13028:2;13024:15;13021:1;13017:23;12977:169;:::i;:::-;12954:5;12933:227;12924:236;;12892:278;12673:504;;12583:594;;;:::o;13183:332::-;13304:4;13342:2;13331:9;13327:18;13319:26;;13355:71;13423:1;13412:9;13408:17;13399:6;13355:71;:::i;:::-;13436:72;13504:2;13493:9;13489:18;13480:6;13436:72;:::i;:::-;13183:332;;;;;:::o;13521:191::-;13561:3;13580:20;13598:1;13580:20;:::i;:::-;13575:25;;13614:20;13632:1;13614:20;:::i;:::-;13609:25;;13657:1;13654;13650:9;13643:16;;13678:3;13675:1;13672:10;13669:36;;;13685:18;;:::i;:::-;13669:36;13521:191;;;;:::o;13718:442::-;13867:4;13905:2;13894:9;13890:18;13882:26;;13918:71;13986:1;13975:9;13971:17;13962:6;13918:71;:::i;:::-;13999:72;14067:2;14056:9;14052:18;14043:6;13999:72;:::i;:::-;14081;14149:2;14138:9;14134:18;14125:6;14081:72;:::i;:::-;13718:442;;;;;;:::o;14166:222::-;14259:4;14297:2;14286:9;14282:18;14274:26;;14310:71;14378:1;14367:9;14363:17;14354:6;14310:71;:::i;:::-;14166:222;;;;:::o;14394:138::-;14431:7;14471:54;14464:5;14460:66;14449:77;;14394:138;;;:::o;14538:244::-;14578:3;14597:20;14615:1;14597:20;:::i;:::-;14592:25;;14631:20;14649:1;14631:20;:::i;:::-;14626:25;;14674:1;14671;14667:9;14660:16;;14697:54;14692:3;14689:63;14686:89;;;14755:18;;:::i;:::-;14686:89;14538:244;;;;:::o;14788:87::-;14835:7;14864:5;14853:16;;14788:87;;;:::o;14881:158::-;14939:9;14972:61;14988:44;14997:34;15025:5;14997:34;:::i;:::-;14988:44;:::i;:::-;14972:61;:::i;:::-;14959:74;;14881:158;;;:::o;15045:147::-;15140:45;15179:5;15140:45;:::i;:::-;15135:3;15128:58;15045:147;;:::o;15198:348::-;15327:4;15365:2;15354:9;15350:18;15342:26;;15378:79;15454:1;15443:9;15439:17;15430:6;15378:79;:::i;:::-;15467:72;15535:2;15524:9;15520:18;15511:6;15467:72;:::i;:::-;15198:348;;;;;:::o;15552:247::-;15592:4;15612:20;15630:1;15612:20;:::i;:::-;15607:25;;15646:20;15664:1;15646:20;:::i;:::-;15641:25;;15690:1;15687;15683:9;15675:17;;15714:54;15708:4;15705:64;15702:90;;;15772:18;;:::i;:::-;15702:90;15552:247;;;;:::o;15805:194::-;15845:4;15865:20;15883:1;15865:20;:::i;:::-;15860:25;;15899:20;15917:1;15899:20;:::i;:::-;15894:25;;15943:1;15940;15936:9;15928:17;;15967:1;15961:4;15958:11;15955:37;;;15972:18;;:::i;:::-;15955:37;15805:194;;;;:::o;649:1554:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLOCK_MODE_9343":{"entryPoint":2425,"id":9343,"parameterSlots":0,"returnSlots":1},"@DOMAIN_SEPARATOR_2094":{"entryPoint":2133,"id":2094,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3779":{"entryPoint":7259,"id":3779,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3791":{"entryPoint":7318,"id":3791,"parameterSlots":0,"returnSlots":1},"@_add_754":{"entryPoint":5096,"id":754,"parameterSlots":2,"returnSlots":1},"@_approve_1430":{"entryPoint":5148,"id":1430,"parameterSlots":3,"returnSlots":0},"@_approve_1490":{"entryPoint":7835,"id":1490,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3709":{"entryPoint":8322,"id":3709,"parameterSlots":0,"returnSlots":1},"@_burn_1412":{"entryPoint":6445,"id":1412,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":6081,"id":84,"parameterSlots":0,"returnSlots":0},"@_checkpoints_705":{"entryPoint":7738,"id":705,"parameterSlots":2,"returnSlots":1},"@_delegate_535":{"entryPoint":6575,"id":535,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_3688":{"entryPoint":5558,"id":3688,"parameterSlots":0,"returnSlots":1},"@_flashFeeReceiver_1779":{"entryPoint":6851,"id":1779,"parameterSlots":0,"returnSlots":1},"@_flashFee_1767":{"entryPoint":7730,"id":1767,"parameterSlots":2,"returnSlots":1},"@_getVotingUnits_2196":{"entryPoint":9091,"id":2196,"parameterSlots":1,"returnSlots":1},"@_hashTypedDataV4_3725":{"entryPoint":7481,"id":3725,"parameterSlots":1,"returnSlots":1},"@_insert_8318":{"entryPoint":12460,"id":8318,"parameterSlots":3,"returnSlots":2},"@_maxSupply_2128":{"entryPoint":11580,"id":2128,"parameterSlots":0,"returnSlots":1},"@_mint_1379":{"entryPoint":6315,"id":1379,"parameterSlots":2,"returnSlots":0},"@_moveDelegateVotes_668":{"entryPoint":9109,"id":668,"parameterSlots":3,"returnSlots":0},"@_msgSender_2301":{"entryPoint":5140,"id":2301,"parameterSlots":0,"returnSlots":1},"@_numCheckpoints_686":{"entryPoint":6856,"id":686,"parameterSlots":1,"returnSlots":1},"@_pause_2539":{"entryPoint":7160,"id":2539,"parameterSlots":0,"returnSlots":0},"@_push_740":{"entryPoint":11376,"id":740,"parameterSlots":3,"returnSlots":2},"@_requireNotPaused_2510":{"entryPoint":9920,"id":2510,"parameterSlots":0,"returnSlots":0},"@_requirePaused_2523":{"entryPoint":9027,"id":2523,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_1538":{"entryPoint":5166,"id":1538,"parameterSlots":3,"returnSlots":0},"@_subtract_768":{"entryPoint":5118,"id":768,"parameterSlots":2,"returnSlots":1},"@_throwError_3564":{"entryPoint":10470,"id":3564,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":6944,"id":146,"parameterSlots":1,"returnSlots":0},"@_transferVotingUnits_590":{"entryPoint":11616,"id":590,"parameterSlots":3,"returnSlots":0},"@_transfer_1269":{"entryPoint":5314,"id":1269,"parameterSlots":3,"returnSlots":0},"@_unpause_2555":{"entryPoint":6216,"id":2555,"parameterSlots":0,"returnSlots":0},"@_unsafeAccess_8437":{"entryPoint":8885,"id":8437,"parameterSlots":2,"returnSlots":1},"@_update_1346":{"entryPoint":11911,"id":1346,"parameterSlots":3,"returnSlots":0},"@_update_1940":{"entryPoint":11556,"id":1940,"parameterSlots":3,"returnSlots":0},"@_update_2182":{"entryPoint":11039,"id":2182,"parameterSlots":3,"returnSlots":0},"@_update_9365":{"entryPoint":8306,"id":9365,"parameterSlots":3,"returnSlots":0},"@_upperBinaryLookup_8370":{"entryPoint":8906,"id":8370,"parameterSlots":4,"returnSlots":1},"@_useCheckedNonce_2386":{"entryPoint":7555,"id":2386,"parameterSlots":2,"returnSlots":0},"@_useNonce_2361":{"entryPoint":7643,"id":2361,"parameterSlots":1,"returnSlots":1},"@allowance_1166":{"entryPoint":4783,"id":1166,"parameterSlots":2,"returnSlots":1},"@approve_1190":{"entryPoint":2032,"id":1190,"parameterSlots":2,"returnSlots":1},"@at_8224":{"entryPoint":10826,"id":8224,"parameterSlots":2,"returnSlots":1},"@average_4124":{"entryPoint":11228,"id":4124,"parameterSlots":2,"returnSlots":1},"@balanceOf_1125":{"entryPoint":3301,"id":1125,"parameterSlots":1,"returnSlots":1},"@burnFrom_1662":{"entryPoint":3393,"id":1662,"parameterSlots":2,"returnSlots":0},"@burn_1641":{"entryPoint":2405,"id":1641,"parameterSlots":1,"returnSlots":0},"@byteLength_2674":{"entryPoint":11831,"id":2674,"parameterSlots":1,"returnSlots":1},"@checkpoints_2226":{"entryPoint":4918,"id":2226,"parameterSlots":2,"returnSlots":1},"@clock_9334":{"entryPoint":3828,"id":9334,"parameterSlots":0,"returnSlots":1},"@decimals_1103":{"entryPoint":2124,"id":1103,"parameterSlots":0,"returnSlots":1},"@delegateBySig_500":{"entryPoint":4125,"id":500,"parameterSlots":6,"returnSlots":0},"@delegate_443":{"entryPoint":2591,"id":443,"parameterSlots":1,"returnSlots":0},"@delegates_426":{"entryPoint":2486,"id":426,"parameterSlots":1,"returnSlots":1},"@eip712Domain_3767":{"entryPoint":3461,"id":3767,"parameterSlots":0,"returnSlots":7},"@flashFee_1750":{"entryPoint":4651,"id":1750,"parameterSlots":2,"returnSlots":1},"@flashLoan_1906":{"entryPoint":2640,"id":1906,"parameterSlots":5,"returnSlots":1},"@getBalance_9393":{"entryPoint":5078,"id":9393,"parameterSlots":1,"returnSlots":1},"@getPastTotalSupply_402":{"entryPoint":3673,"id":402,"parameterSlots":1,"returnSlots":1},"@getPastVotes_370":{"entryPoint":2148,"id":370,"parameterSlots":2,"returnSlots":1},"@getVotes_334":{"entryPoint":3982,"id":334,"parameterSlots":1,"returnSlots":1},"@latest_8143":{"entryPoint":7377,"id":8143,"parameterSlots":1,"returnSlots":1},"@length_8206":{"entryPoint":9742,"id":8206,"parameterSlots":1,"returnSlots":1},"@maxFlashLoan_1722":{"entryPoint":3164,"id":1722,"parameterSlots":1,"returnSlots":1},"@mint_9321":{"entryPoint":2383,"id":9321,"parameterSlots":2,"returnSlots":0},"@name_1085":{"entryPoint":1886,"id":1085,"parameterSlots":0,"returnSlots":1},"@nonces_2084":{"entryPoint":7142,"id":2084,"parameterSlots":1,"returnSlots":1},"@nonces_2346":{"entryPoint":9847,"id":2346,"parameterSlots":1,"returnSlots":1},"@nonces_9381":{"entryPoint":3425,"id":9381,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_2209":{"entryPoint":3283,"id":2209,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":3631,"id":67,"parameterSlots":0,"returnSlots":1},"@pause_9297":{"entryPoint":3443,"id":9297,"parameterSlots":0,"returnSlots":0},"@paused_2498":{"entryPoint":2617,"id":2498,"parameterSlots":0,"returnSlots":1},"@permit_2067":{"entryPoint":4323,"id":2067,"parameterSlots":7,"returnSlots":0},"@push_7946":{"entryPoint":11802,"id":7946,"parameterSlots":3,"returnSlots":2},"@recover_3515":{"entryPoint":7507,"id":3515,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":3373,"id":98,"parameterSlots":0,"returnSlots":0},"@sqrt_4851":{"entryPoint":8472,"id":4851,"parameterSlots":1,"returnSlots":1},"@symbol_1094":{"entryPoint":3836,"id":1094,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2741":{"entryPoint":9985,"id":2741,"parameterSlots":2,"returnSlots":1},"@toString_2642":{"entryPoint":11440,"id":2642,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3865":{"entryPoint":10161,"id":3865,"parameterSlots":2,"returnSlots":1},"@toUint208_5667":{"entryPoint":11266,"id":5667,"parameterSlots":1,"returnSlots":1},"@toUint32_6283":{"entryPoint":9759,"id":6283,"parameterSlots":1,"returnSlots":1},"@toUint48_6227":{"entryPoint":5741,"id":6227,"parameterSlots":1,"returnSlots":1},"@toUint_7236":{"entryPoint":11216,"id":7236,"parameterSlots":1,"returnSlots":1},"@totalMintedSupply_9402":{"entryPoint":3149,"id":9402,"parameterSlots":0,"returnSlots":1},"@totalSupply_1112":{"entryPoint":2067,"id":1112,"parameterSlots":0,"returnSlots":1},"@transferFrom_1222":{"entryPoint":2077,"id":1222,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":4944,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_1149":{"entryPoint":4090,"id":1149,"parameterSlots":2,"returnSlots":1},"@tryRecover_3479":{"entryPoint":10226,"id":3479,"parameterSlots":4,"returnSlots":3},"@unpause_9306":{"entryPoint":2365,"id":9306,"parameterSlots":0,"returnSlots":0},"@upperLookupRecent_8113":{"entryPoint":5831,"id":8113,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":13564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":14986,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":15930,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":14198,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_contract$_IERC3156FlashBorrower_$797":{"entryPoint":14162,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":13618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":15397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":14942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":14034,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":15310,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":13799,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":15148,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":13639,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":15007,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":15418,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":15951,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC3156FlashBorrower_$797t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":14284,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":13989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":14596,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":14079,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":14633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":13715,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":14522,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":13947,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":15793,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack":{"entryPoint":17290,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_32_by_1_to_t_uint8_fromStack":{"entryPoint":16978,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack":{"entryPoint":16666,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":13390,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Checkpoint208_$7923_memory_ptr_to_t_struct$_Checkpoint208_$7923_memory_ptr_fromStack":{"entryPoint":15550,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint208_to_t_uint208":{"entryPoint":15535,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":14581,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":13757,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":14436,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48":{"entryPoint":15482,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":14877,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":13895,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":14094,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":16360,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15838,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":16722,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16557,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":13730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14727,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":13962,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16263,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16194,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":16763,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":17034,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":17305,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":16993,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":16681,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13447,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint208_$7923_memory_ptr__to_t_struct$_Checkpoint208_$7923_memory_ptr__fromStack_reversed":{"entryPoint":15597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":13772,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16893,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed":{"entryPoint":15720,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":14451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":14892,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":13910,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14565,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14537,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":13303,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14620,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":14548,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":15761,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":13314,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint208":{"entryPoint":16401,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":16043,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":17197,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint208":{"entryPoint":16479,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":16095,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":13523,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":13703,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":14478,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":13937,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC3156FlashBorrower_$797":{"entryPoint":14121,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_208_by_1":{"entryPoint":17246,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_32_by_1":{"entryPoint":16934,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_48_by_1":{"entryPoint":16612,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":13491,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint208":{"entryPoint":15497,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":13585,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":14420,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":14859,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":13882,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_208_by_1_to_t_uint8":{"entryPoint":17256,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_32_by_1_to_t_uint8":{"entryPoint":16944,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_48_by_1_to_t_uint8":{"entryPoint":16632,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":15778,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":13331,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":15671,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":16622,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":15996,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":16846,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":17103,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":15624,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":17150,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":16147,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":14188,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":14183,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":14193,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":13486,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":13481,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":13373,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":13541,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":14963,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC3156FlashBorrower_$797":{"entryPoint":14139,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":13595,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":15374,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":14919,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:29353:34","nodeType":"YulBlock","src":"0:29353:34","statements":[{"body":{"nativeSrc":"66:40:34","nodeType":"YulBlock","src":"66:40:34","statements":[{"nativeSrc":"77:22:34","nodeType":"YulAssignment","src":"77:22:34","value":{"arguments":[{"name":"value","nativeSrc":"93:5:34","nodeType":"YulIdentifier","src":"93:5:34"}],"functionName":{"name":"mload","nativeSrc":"87:5:34","nodeType":"YulIdentifier","src":"87:5:34"},"nativeSrc":"87:12:34","nodeType":"YulFunctionCall","src":"87:12:34"},"variableNames":[{"name":"length","nativeSrc":"77:6:34","nodeType":"YulIdentifier","src":"77:6:34"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:34","nodeType":"YulTypedName","src":"49:5:34","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:34","nodeType":"YulTypedName","src":"59:6:34","type":""}],"src":"7:99:34"},{"body":{"nativeSrc":"208:73:34","nodeType":"YulBlock","src":"208:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:34","nodeType":"YulIdentifier","src":"225:3:34"},{"name":"length","nativeSrc":"230:6:34","nodeType":"YulIdentifier","src":"230:6:34"}],"functionName":{"name":"mstore","nativeSrc":"218:6:34","nodeType":"YulIdentifier","src":"218:6:34"},"nativeSrc":"218:19:34","nodeType":"YulFunctionCall","src":"218:19:34"},"nativeSrc":"218:19:34","nodeType":"YulExpressionStatement","src":"218:19:34"},{"nativeSrc":"246:29:34","nodeType":"YulAssignment","src":"246:29:34","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:34","nodeType":"YulIdentifier","src":"265:3:34"},{"kind":"number","nativeSrc":"270:4:34","nodeType":"YulLiteral","src":"270:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:34","nodeType":"YulIdentifier","src":"261:3:34"},"nativeSrc":"261:14:34","nodeType":"YulFunctionCall","src":"261:14:34"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:34","nodeType":"YulIdentifier","src":"246:11:34"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:34","nodeType":"YulTypedName","src":"180:3:34","type":""},{"name":"length","nativeSrc":"185:6:34","nodeType":"YulTypedName","src":"185:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:34","nodeType":"YulTypedName","src":"196:11:34","type":""}],"src":"112:169:34"},{"body":{"nativeSrc":"349:184:34","nodeType":"YulBlock","src":"349:184:34","statements":[{"nativeSrc":"359:10:34","nodeType":"YulVariableDeclaration","src":"359:10:34","value":{"kind":"number","nativeSrc":"368:1:34","nodeType":"YulLiteral","src":"368:1:34","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:34","nodeType":"YulTypedName","src":"363:1:34","type":""}]},{"body":{"nativeSrc":"428:63:34","nodeType":"YulBlock","src":"428:63:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:34","nodeType":"YulIdentifier","src":"453:3:34"},{"name":"i","nativeSrc":"458:1:34","nodeType":"YulIdentifier","src":"458:1:34"}],"functionName":{"name":"add","nativeSrc":"449:3:34","nodeType":"YulIdentifier","src":"449:3:34"},"nativeSrc":"449:11:34","nodeType":"YulFunctionCall","src":"449:11:34"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:34","nodeType":"YulIdentifier","src":"472:3:34"},{"name":"i","nativeSrc":"477:1:34","nodeType":"YulIdentifier","src":"477:1:34"}],"functionName":{"name":"add","nativeSrc":"468:3:34","nodeType":"YulIdentifier","src":"468:3:34"},"nativeSrc":"468:11:34","nodeType":"YulFunctionCall","src":"468:11:34"}],"functionName":{"name":"mload","nativeSrc":"462:5:34","nodeType":"YulIdentifier","src":"462:5:34"},"nativeSrc":"462:18:34","nodeType":"YulFunctionCall","src":"462:18:34"}],"functionName":{"name":"mstore","nativeSrc":"442:6:34","nodeType":"YulIdentifier","src":"442:6:34"},"nativeSrc":"442:39:34","nodeType":"YulFunctionCall","src":"442:39:34"},"nativeSrc":"442:39:34","nodeType":"YulExpressionStatement","src":"442:39:34"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:34","nodeType":"YulIdentifier","src":"389:1:34"},{"name":"length","nativeSrc":"392:6:34","nodeType":"YulIdentifier","src":"392:6:34"}],"functionName":{"name":"lt","nativeSrc":"386:2:34","nodeType":"YulIdentifier","src":"386:2:34"},"nativeSrc":"386:13:34","nodeType":"YulFunctionCall","src":"386:13:34"},"nativeSrc":"378:113:34","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:34","nodeType":"YulBlock","src":"400:19:34","statements":[{"nativeSrc":"402:15:34","nodeType":"YulAssignment","src":"402:15:34","value":{"arguments":[{"name":"i","nativeSrc":"411:1:34","nodeType":"YulIdentifier","src":"411:1:34"},{"kind":"number","nativeSrc":"414:2:34","nodeType":"YulLiteral","src":"414:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:34","nodeType":"YulIdentifier","src":"407:3:34"},"nativeSrc":"407:10:34","nodeType":"YulFunctionCall","src":"407:10:34"},"variableNames":[{"name":"i","nativeSrc":"402:1:34","nodeType":"YulIdentifier","src":"402:1:34"}]}]},"pre":{"nativeSrc":"382:3:34","nodeType":"YulBlock","src":"382:3:34","statements":[]},"src":"378:113:34"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:34","nodeType":"YulIdentifier","src":"511:3:34"},{"name":"length","nativeSrc":"516:6:34","nodeType":"YulIdentifier","src":"516:6:34"}],"functionName":{"name":"add","nativeSrc":"507:3:34","nodeType":"YulIdentifier","src":"507:3:34"},"nativeSrc":"507:16:34","nodeType":"YulFunctionCall","src":"507:16:34"},{"kind":"number","nativeSrc":"525:1:34","nodeType":"YulLiteral","src":"525:1:34","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:34","nodeType":"YulIdentifier","src":"500:6:34"},"nativeSrc":"500:27:34","nodeType":"YulFunctionCall","src":"500:27:34"},"nativeSrc":"500:27:34","nodeType":"YulExpressionStatement","src":"500:27:34"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:34","nodeType":"YulTypedName","src":"331:3:34","type":""},{"name":"dst","nativeSrc":"336:3:34","nodeType":"YulTypedName","src":"336:3:34","type":""},{"name":"length","nativeSrc":"341:6:34","nodeType":"YulTypedName","src":"341:6:34","type":""}],"src":"287:246:34"},{"body":{"nativeSrc":"587:54:34","nodeType":"YulBlock","src":"587:54:34","statements":[{"nativeSrc":"597:38:34","nodeType":"YulAssignment","src":"597:38:34","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:34","nodeType":"YulIdentifier","src":"615:5:34"},{"kind":"number","nativeSrc":"622:2:34","nodeType":"YulLiteral","src":"622:2:34","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:34","nodeType":"YulIdentifier","src":"611:3:34"},"nativeSrc":"611:14:34","nodeType":"YulFunctionCall","src":"611:14:34"},{"arguments":[{"kind":"number","nativeSrc":"631:2:34","nodeType":"YulLiteral","src":"631:2:34","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:34","nodeType":"YulIdentifier","src":"627:3:34"},"nativeSrc":"627:7:34","nodeType":"YulFunctionCall","src":"627:7:34"}],"functionName":{"name":"and","nativeSrc":"607:3:34","nodeType":"YulIdentifier","src":"607:3:34"},"nativeSrc":"607:28:34","nodeType":"YulFunctionCall","src":"607:28:34"},"variableNames":[{"name":"result","nativeSrc":"597:6:34","nodeType":"YulIdentifier","src":"597:6:34"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:34","nodeType":"YulTypedName","src":"570:5:34","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:34","nodeType":"YulTypedName","src":"580:6:34","type":""}],"src":"539:102:34"},{"body":{"nativeSrc":"739:285:34","nodeType":"YulBlock","src":"739:285:34","statements":[{"nativeSrc":"749:53:34","nodeType":"YulVariableDeclaration","src":"749:53:34","value":{"arguments":[{"name":"value","nativeSrc":"796:5:34","nodeType":"YulIdentifier","src":"796:5:34"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:34","nodeType":"YulIdentifier","src":"763:32:34"},"nativeSrc":"763:39:34","nodeType":"YulFunctionCall","src":"763:39:34"},"variables":[{"name":"length","nativeSrc":"753:6:34","nodeType":"YulTypedName","src":"753:6:34","type":""}]},{"nativeSrc":"811:78:34","nodeType":"YulAssignment","src":"811:78:34","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:34","nodeType":"YulIdentifier","src":"877:3:34"},{"name":"length","nativeSrc":"882:6:34","nodeType":"YulIdentifier","src":"882:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:34","nodeType":"YulIdentifier","src":"818:58:34"},"nativeSrc":"818:71:34","nodeType":"YulFunctionCall","src":"818:71:34"},"variableNames":[{"name":"pos","nativeSrc":"811:3:34","nodeType":"YulIdentifier","src":"811:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:34","nodeType":"YulIdentifier","src":"937:5:34"},{"kind":"number","nativeSrc":"944:4:34","nodeType":"YulLiteral","src":"944:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:34","nodeType":"YulIdentifier","src":"933:3:34"},"nativeSrc":"933:16:34","nodeType":"YulFunctionCall","src":"933:16:34"},{"name":"pos","nativeSrc":"951:3:34","nodeType":"YulIdentifier","src":"951:3:34"},{"name":"length","nativeSrc":"956:6:34","nodeType":"YulIdentifier","src":"956:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:34","nodeType":"YulIdentifier","src":"898:34:34"},"nativeSrc":"898:65:34","nodeType":"YulFunctionCall","src":"898:65:34"},"nativeSrc":"898:65:34","nodeType":"YulExpressionStatement","src":"898:65:34"},{"nativeSrc":"972:46:34","nodeType":"YulAssignment","src":"972:46:34","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:34","nodeType":"YulIdentifier","src":"983:3:34"},{"arguments":[{"name":"length","nativeSrc":"1010:6:34","nodeType":"YulIdentifier","src":"1010:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:34","nodeType":"YulIdentifier","src":"988:21:34"},"nativeSrc":"988:29:34","nodeType":"YulFunctionCall","src":"988:29:34"}],"functionName":{"name":"add","nativeSrc":"979:3:34","nodeType":"YulIdentifier","src":"979:3:34"},"nativeSrc":"979:39:34","nodeType":"YulFunctionCall","src":"979:39:34"},"variableNames":[{"name":"end","nativeSrc":"972:3:34","nodeType":"YulIdentifier","src":"972:3:34"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:34","nodeType":"YulTypedName","src":"720:5:34","type":""},{"name":"pos","nativeSrc":"727:3:34","nodeType":"YulTypedName","src":"727:3:34","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:34","nodeType":"YulTypedName","src":"735:3:34","type":""}],"src":"647:377:34"},{"body":{"nativeSrc":"1148:195:34","nodeType":"YulBlock","src":"1148:195:34","statements":[{"nativeSrc":"1158:26:34","nodeType":"YulAssignment","src":"1158:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:34","nodeType":"YulIdentifier","src":"1170:9:34"},{"kind":"number","nativeSrc":"1181:2:34","nodeType":"YulLiteral","src":"1181:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:34","nodeType":"YulIdentifier","src":"1166:3:34"},"nativeSrc":"1166:18:34","nodeType":"YulFunctionCall","src":"1166:18:34"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:34","nodeType":"YulIdentifier","src":"1158:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:34","nodeType":"YulIdentifier","src":"1205:9:34"},{"kind":"number","nativeSrc":"1216:1:34","nodeType":"YulLiteral","src":"1216:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:34","nodeType":"YulIdentifier","src":"1201:3:34"},"nativeSrc":"1201:17:34","nodeType":"YulFunctionCall","src":"1201:17:34"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:34","nodeType":"YulIdentifier","src":"1224:4:34"},{"name":"headStart","nativeSrc":"1230:9:34","nodeType":"YulIdentifier","src":"1230:9:34"}],"functionName":{"name":"sub","nativeSrc":"1220:3:34","nodeType":"YulIdentifier","src":"1220:3:34"},"nativeSrc":"1220:20:34","nodeType":"YulFunctionCall","src":"1220:20:34"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:34","nodeType":"YulIdentifier","src":"1194:6:34"},"nativeSrc":"1194:47:34","nodeType":"YulFunctionCall","src":"1194:47:34"},"nativeSrc":"1194:47:34","nodeType":"YulExpressionStatement","src":"1194:47:34"},{"nativeSrc":"1250:86:34","nodeType":"YulAssignment","src":"1250:86:34","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:34","nodeType":"YulIdentifier","src":"1322:6:34"},{"name":"tail","nativeSrc":"1331:4:34","nodeType":"YulIdentifier","src":"1331:4:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:34","nodeType":"YulIdentifier","src":"1258:63:34"},"nativeSrc":"1258:78:34","nodeType":"YulFunctionCall","src":"1258:78:34"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:34","nodeType":"YulIdentifier","src":"1250:4:34"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:34","nodeType":"YulTypedName","src":"1120:9:34","type":""},{"name":"value0","nativeSrc":"1132:6:34","nodeType":"YulTypedName","src":"1132:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:34","nodeType":"YulTypedName","src":"1143:4:34","type":""}],"src":"1030:313:34"},{"body":{"nativeSrc":"1389:35:34","nodeType":"YulBlock","src":"1389:35:34","statements":[{"nativeSrc":"1399:19:34","nodeType":"YulAssignment","src":"1399:19:34","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:34","nodeType":"YulLiteral","src":"1415:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:34","nodeType":"YulIdentifier","src":"1409:5:34"},"nativeSrc":"1409:9:34","nodeType":"YulFunctionCall","src":"1409:9:34"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:34","nodeType":"YulIdentifier","src":"1399:6:34"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:34","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:34","nodeType":"YulTypedName","src":"1382:6:34","type":""}],"src":"1349:75:34"},{"body":{"nativeSrc":"1519:28:34","nodeType":"YulBlock","src":"1519:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:34","nodeType":"YulLiteral","src":"1536:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:34","nodeType":"YulLiteral","src":"1539:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:34","nodeType":"YulIdentifier","src":"1529:6:34"},"nativeSrc":"1529:12:34","nodeType":"YulFunctionCall","src":"1529:12:34"},"nativeSrc":"1529:12:34","nodeType":"YulExpressionStatement","src":"1529:12:34"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:34","nodeType":"YulFunctionDefinition","src":"1430:117:34"},{"body":{"nativeSrc":"1642:28:34","nodeType":"YulBlock","src":"1642:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:34","nodeType":"YulLiteral","src":"1659:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:34","nodeType":"YulLiteral","src":"1662:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:34","nodeType":"YulIdentifier","src":"1652:6:34"},"nativeSrc":"1652:12:34","nodeType":"YulFunctionCall","src":"1652:12:34"},"nativeSrc":"1652:12:34","nodeType":"YulExpressionStatement","src":"1652:12:34"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:34","nodeType":"YulFunctionDefinition","src":"1553:117:34"},{"body":{"nativeSrc":"1721:81:34","nodeType":"YulBlock","src":"1721:81:34","statements":[{"nativeSrc":"1731:65:34","nodeType":"YulAssignment","src":"1731:65:34","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:34","nodeType":"YulIdentifier","src":"1746:5:34"},{"kind":"number","nativeSrc":"1753:42:34","nodeType":"YulLiteral","src":"1753:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:34","nodeType":"YulIdentifier","src":"1742:3:34"},"nativeSrc":"1742:54:34","nodeType":"YulFunctionCall","src":"1742:54:34"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:34","nodeType":"YulIdentifier","src":"1731:7:34"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:34","nodeType":"YulTypedName","src":"1703:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:34","nodeType":"YulTypedName","src":"1713:7:34","type":""}],"src":"1676:126:34"},{"body":{"nativeSrc":"1853:51:34","nodeType":"YulBlock","src":"1853:51:34","statements":[{"nativeSrc":"1863:35:34","nodeType":"YulAssignment","src":"1863:35:34","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:34","nodeType":"YulIdentifier","src":"1892:5:34"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:34","nodeType":"YulIdentifier","src":"1874:17:34"},"nativeSrc":"1874:24:34","nodeType":"YulFunctionCall","src":"1874:24:34"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:34","nodeType":"YulIdentifier","src":"1863:7:34"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:34","nodeType":"YulTypedName","src":"1835:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:34","nodeType":"YulTypedName","src":"1845:7:34","type":""}],"src":"1808:96:34"},{"body":{"nativeSrc":"1953:79:34","nodeType":"YulBlock","src":"1953:79:34","statements":[{"body":{"nativeSrc":"2010:16:34","nodeType":"YulBlock","src":"2010:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:34","nodeType":"YulLiteral","src":"2019:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:34","nodeType":"YulLiteral","src":"2022:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:34","nodeType":"YulIdentifier","src":"2012:6:34"},"nativeSrc":"2012:12:34","nodeType":"YulFunctionCall","src":"2012:12:34"},"nativeSrc":"2012:12:34","nodeType":"YulExpressionStatement","src":"2012:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:34","nodeType":"YulIdentifier","src":"1976:5:34"},{"arguments":[{"name":"value","nativeSrc":"2001:5:34","nodeType":"YulIdentifier","src":"2001:5:34"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:34","nodeType":"YulIdentifier","src":"1983:17:34"},"nativeSrc":"1983:24:34","nodeType":"YulFunctionCall","src":"1983:24:34"}],"functionName":{"name":"eq","nativeSrc":"1973:2:34","nodeType":"YulIdentifier","src":"1973:2:34"},"nativeSrc":"1973:35:34","nodeType":"YulFunctionCall","src":"1973:35:34"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:34","nodeType":"YulIdentifier","src":"1966:6:34"},"nativeSrc":"1966:43:34","nodeType":"YulFunctionCall","src":"1966:43:34"},"nativeSrc":"1963:63:34","nodeType":"YulIf","src":"1963:63:34"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:34","nodeType":"YulTypedName","src":"1946:5:34","type":""}],"src":"1910:122:34"},{"body":{"nativeSrc":"2090:87:34","nodeType":"YulBlock","src":"2090:87:34","statements":[{"nativeSrc":"2100:29:34","nodeType":"YulAssignment","src":"2100:29:34","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:34","nodeType":"YulIdentifier","src":"2122:6:34"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:34","nodeType":"YulIdentifier","src":"2109:12:34"},"nativeSrc":"2109:20:34","nodeType":"YulFunctionCall","src":"2109:20:34"},"variableNames":[{"name":"value","nativeSrc":"2100:5:34","nodeType":"YulIdentifier","src":"2100:5:34"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:34","nodeType":"YulIdentifier","src":"2165:5:34"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:34","nodeType":"YulIdentifier","src":"2138:26:34"},"nativeSrc":"2138:33:34","nodeType":"YulFunctionCall","src":"2138:33:34"},"nativeSrc":"2138:33:34","nodeType":"YulExpressionStatement","src":"2138:33:34"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:34","nodeType":"YulTypedName","src":"2068:6:34","type":""},{"name":"end","nativeSrc":"2076:3:34","nodeType":"YulTypedName","src":"2076:3:34","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:34","nodeType":"YulTypedName","src":"2084:5:34","type":""}],"src":"2038:139:34"},{"body":{"nativeSrc":"2228:32:34","nodeType":"YulBlock","src":"2228:32:34","statements":[{"nativeSrc":"2238:16:34","nodeType":"YulAssignment","src":"2238:16:34","value":{"name":"value","nativeSrc":"2249:5:34","nodeType":"YulIdentifier","src":"2249:5:34"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:34","nodeType":"YulIdentifier","src":"2238:7:34"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:34","nodeType":"YulTypedName","src":"2210:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:34","nodeType":"YulTypedName","src":"2220:7:34","type":""}],"src":"2183:77:34"},{"body":{"nativeSrc":"2309:79:34","nodeType":"YulBlock","src":"2309:79:34","statements":[{"body":{"nativeSrc":"2366:16:34","nodeType":"YulBlock","src":"2366:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:34","nodeType":"YulLiteral","src":"2375:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:34","nodeType":"YulLiteral","src":"2378:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:34","nodeType":"YulIdentifier","src":"2368:6:34"},"nativeSrc":"2368:12:34","nodeType":"YulFunctionCall","src":"2368:12:34"},"nativeSrc":"2368:12:34","nodeType":"YulExpressionStatement","src":"2368:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:34","nodeType":"YulIdentifier","src":"2332:5:34"},{"arguments":[{"name":"value","nativeSrc":"2357:5:34","nodeType":"YulIdentifier","src":"2357:5:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:34","nodeType":"YulIdentifier","src":"2339:17:34"},"nativeSrc":"2339:24:34","nodeType":"YulFunctionCall","src":"2339:24:34"}],"functionName":{"name":"eq","nativeSrc":"2329:2:34","nodeType":"YulIdentifier","src":"2329:2:34"},"nativeSrc":"2329:35:34","nodeType":"YulFunctionCall","src":"2329:35:34"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:34","nodeType":"YulIdentifier","src":"2322:6:34"},"nativeSrc":"2322:43:34","nodeType":"YulFunctionCall","src":"2322:43:34"},"nativeSrc":"2319:63:34","nodeType":"YulIf","src":"2319:63:34"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:34","nodeType":"YulTypedName","src":"2302:5:34","type":""}],"src":"2266:122:34"},{"body":{"nativeSrc":"2446:87:34","nodeType":"YulBlock","src":"2446:87:34","statements":[{"nativeSrc":"2456:29:34","nodeType":"YulAssignment","src":"2456:29:34","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:34","nodeType":"YulIdentifier","src":"2478:6:34"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:34","nodeType":"YulIdentifier","src":"2465:12:34"},"nativeSrc":"2465:20:34","nodeType":"YulFunctionCall","src":"2465:20:34"},"variableNames":[{"name":"value","nativeSrc":"2456:5:34","nodeType":"YulIdentifier","src":"2456:5:34"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:34","nodeType":"YulIdentifier","src":"2521:5:34"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:34","nodeType":"YulIdentifier","src":"2494:26:34"},"nativeSrc":"2494:33:34","nodeType":"YulFunctionCall","src":"2494:33:34"},"nativeSrc":"2494:33:34","nodeType":"YulExpressionStatement","src":"2494:33:34"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:34","nodeType":"YulTypedName","src":"2424:6:34","type":""},{"name":"end","nativeSrc":"2432:3:34","nodeType":"YulTypedName","src":"2432:3:34","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:34","nodeType":"YulTypedName","src":"2440:5:34","type":""}],"src":"2394:139:34"},{"body":{"nativeSrc":"2622:391:34","nodeType":"YulBlock","src":"2622:391:34","statements":[{"body":{"nativeSrc":"2668:83:34","nodeType":"YulBlock","src":"2668:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:34","nodeType":"YulIdentifier","src":"2670:77:34"},"nativeSrc":"2670:79:34","nodeType":"YulFunctionCall","src":"2670:79:34"},"nativeSrc":"2670:79:34","nodeType":"YulExpressionStatement","src":"2670:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:34","nodeType":"YulIdentifier","src":"2643:7:34"},{"name":"headStart","nativeSrc":"2652:9:34","nodeType":"YulIdentifier","src":"2652:9:34"}],"functionName":{"name":"sub","nativeSrc":"2639:3:34","nodeType":"YulIdentifier","src":"2639:3:34"},"nativeSrc":"2639:23:34","nodeType":"YulFunctionCall","src":"2639:23:34"},{"kind":"number","nativeSrc":"2664:2:34","nodeType":"YulLiteral","src":"2664:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:34","nodeType":"YulIdentifier","src":"2635:3:34"},"nativeSrc":"2635:32:34","nodeType":"YulFunctionCall","src":"2635:32:34"},"nativeSrc":"2632:119:34","nodeType":"YulIf","src":"2632:119:34"},{"nativeSrc":"2761:117:34","nodeType":"YulBlock","src":"2761:117:34","statements":[{"nativeSrc":"2776:15:34","nodeType":"YulVariableDeclaration","src":"2776:15:34","value":{"kind":"number","nativeSrc":"2790:1:34","nodeType":"YulLiteral","src":"2790:1:34","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:34","nodeType":"YulTypedName","src":"2780:6:34","type":""}]},{"nativeSrc":"2805:63:34","nodeType":"YulAssignment","src":"2805:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:34","nodeType":"YulIdentifier","src":"2840:9:34"},{"name":"offset","nativeSrc":"2851:6:34","nodeType":"YulIdentifier","src":"2851:6:34"}],"functionName":{"name":"add","nativeSrc":"2836:3:34","nodeType":"YulIdentifier","src":"2836:3:34"},"nativeSrc":"2836:22:34","nodeType":"YulFunctionCall","src":"2836:22:34"},{"name":"dataEnd","nativeSrc":"2860:7:34","nodeType":"YulIdentifier","src":"2860:7:34"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:34","nodeType":"YulIdentifier","src":"2815:20:34"},"nativeSrc":"2815:53:34","nodeType":"YulFunctionCall","src":"2815:53:34"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:34","nodeType":"YulIdentifier","src":"2805:6:34"}]}]},{"nativeSrc":"2888:118:34","nodeType":"YulBlock","src":"2888:118:34","statements":[{"nativeSrc":"2903:16:34","nodeType":"YulVariableDeclaration","src":"2903:16:34","value":{"kind":"number","nativeSrc":"2917:2:34","nodeType":"YulLiteral","src":"2917:2:34","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:34","nodeType":"YulTypedName","src":"2907:6:34","type":""}]},{"nativeSrc":"2933:63:34","nodeType":"YulAssignment","src":"2933:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:34","nodeType":"YulIdentifier","src":"2968:9:34"},{"name":"offset","nativeSrc":"2979:6:34","nodeType":"YulIdentifier","src":"2979:6:34"}],"functionName":{"name":"add","nativeSrc":"2964:3:34","nodeType":"YulIdentifier","src":"2964:3:34"},"nativeSrc":"2964:22:34","nodeType":"YulFunctionCall","src":"2964:22:34"},{"name":"dataEnd","nativeSrc":"2988:7:34","nodeType":"YulIdentifier","src":"2988:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:34","nodeType":"YulIdentifier","src":"2943:20:34"},"nativeSrc":"2943:53:34","nodeType":"YulFunctionCall","src":"2943:53:34"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:34","nodeType":"YulIdentifier","src":"2933:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:34","nodeType":"YulTypedName","src":"2584:9:34","type":""},{"name":"dataEnd","nativeSrc":"2595:7:34","nodeType":"YulTypedName","src":"2595:7:34","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:34","nodeType":"YulTypedName","src":"2607:6:34","type":""},{"name":"value1","nativeSrc":"2615:6:34","nodeType":"YulTypedName","src":"2615:6:34","type":""}],"src":"2539:474:34"},{"body":{"nativeSrc":"3061:48:34","nodeType":"YulBlock","src":"3061:48:34","statements":[{"nativeSrc":"3071:32:34","nodeType":"YulAssignment","src":"3071:32:34","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:34","nodeType":"YulIdentifier","src":"3096:5:34"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:34","nodeType":"YulIdentifier","src":"3089:6:34"},"nativeSrc":"3089:13:34","nodeType":"YulFunctionCall","src":"3089:13:34"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:34","nodeType":"YulIdentifier","src":"3082:6:34"},"nativeSrc":"3082:21:34","nodeType":"YulFunctionCall","src":"3082:21:34"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:34","nodeType":"YulIdentifier","src":"3071:7:34"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:34","nodeType":"YulTypedName","src":"3043:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:34","nodeType":"YulTypedName","src":"3053:7:34","type":""}],"src":"3019:90:34"},{"body":{"nativeSrc":"3174:50:34","nodeType":"YulBlock","src":"3174:50:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:34","nodeType":"YulIdentifier","src":"3191:3:34"},{"arguments":[{"name":"value","nativeSrc":"3211:5:34","nodeType":"YulIdentifier","src":"3211:5:34"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:34","nodeType":"YulIdentifier","src":"3196:14:34"},"nativeSrc":"3196:21:34","nodeType":"YulFunctionCall","src":"3196:21:34"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:34","nodeType":"YulIdentifier","src":"3184:6:34"},"nativeSrc":"3184:34:34","nodeType":"YulFunctionCall","src":"3184:34:34"},"nativeSrc":"3184:34:34","nodeType":"YulExpressionStatement","src":"3184:34:34"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:34","nodeType":"YulTypedName","src":"3162:5:34","type":""},{"name":"pos","nativeSrc":"3169:3:34","nodeType":"YulTypedName","src":"3169:3:34","type":""}],"src":"3115:109:34"},{"body":{"nativeSrc":"3322:118:34","nodeType":"YulBlock","src":"3322:118:34","statements":[{"nativeSrc":"3332:26:34","nodeType":"YulAssignment","src":"3332:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:34","nodeType":"YulIdentifier","src":"3344:9:34"},{"kind":"number","nativeSrc":"3355:2:34","nodeType":"YulLiteral","src":"3355:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:34","nodeType":"YulIdentifier","src":"3340:3:34"},"nativeSrc":"3340:18:34","nodeType":"YulFunctionCall","src":"3340:18:34"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:34","nodeType":"YulIdentifier","src":"3332:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:34","nodeType":"YulIdentifier","src":"3406:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:34","nodeType":"YulIdentifier","src":"3419:9:34"},{"kind":"number","nativeSrc":"3430:1:34","nodeType":"YulLiteral","src":"3430:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:34","nodeType":"YulIdentifier","src":"3415:3:34"},"nativeSrc":"3415:17:34","nodeType":"YulFunctionCall","src":"3415:17:34"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:34","nodeType":"YulIdentifier","src":"3368:37:34"},"nativeSrc":"3368:65:34","nodeType":"YulFunctionCall","src":"3368:65:34"},"nativeSrc":"3368:65:34","nodeType":"YulExpressionStatement","src":"3368:65:34"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:34","nodeType":"YulTypedName","src":"3294:9:34","type":""},{"name":"value0","nativeSrc":"3306:6:34","nodeType":"YulTypedName","src":"3306:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:34","nodeType":"YulTypedName","src":"3317:4:34","type":""}],"src":"3230:210:34"},{"body":{"nativeSrc":"3511:53:34","nodeType":"YulBlock","src":"3511:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:34","nodeType":"YulIdentifier","src":"3528:3:34"},{"arguments":[{"name":"value","nativeSrc":"3551:5:34","nodeType":"YulIdentifier","src":"3551:5:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:34","nodeType":"YulIdentifier","src":"3533:17:34"},"nativeSrc":"3533:24:34","nodeType":"YulFunctionCall","src":"3533:24:34"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:34","nodeType":"YulIdentifier","src":"3521:6:34"},"nativeSrc":"3521:37:34","nodeType":"YulFunctionCall","src":"3521:37:34"},"nativeSrc":"3521:37:34","nodeType":"YulExpressionStatement","src":"3521:37:34"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:34","nodeType":"YulTypedName","src":"3499:5:34","type":""},{"name":"pos","nativeSrc":"3506:3:34","nodeType":"YulTypedName","src":"3506:3:34","type":""}],"src":"3446:118:34"},{"body":{"nativeSrc":"3668:124:34","nodeType":"YulBlock","src":"3668:124:34","statements":[{"nativeSrc":"3678:26:34","nodeType":"YulAssignment","src":"3678:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:34","nodeType":"YulIdentifier","src":"3690:9:34"},{"kind":"number","nativeSrc":"3701:2:34","nodeType":"YulLiteral","src":"3701:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:34","nodeType":"YulIdentifier","src":"3686:3:34"},"nativeSrc":"3686:18:34","nodeType":"YulFunctionCall","src":"3686:18:34"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:34","nodeType":"YulIdentifier","src":"3678:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:34","nodeType":"YulIdentifier","src":"3758:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:34","nodeType":"YulIdentifier","src":"3771:9:34"},{"kind":"number","nativeSrc":"3782:1:34","nodeType":"YulLiteral","src":"3782:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:34","nodeType":"YulIdentifier","src":"3767:3:34"},"nativeSrc":"3767:17:34","nodeType":"YulFunctionCall","src":"3767:17:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:34","nodeType":"YulIdentifier","src":"3714:43:34"},"nativeSrc":"3714:71:34","nodeType":"YulFunctionCall","src":"3714:71:34"},"nativeSrc":"3714:71:34","nodeType":"YulExpressionStatement","src":"3714:71:34"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:34","nodeType":"YulTypedName","src":"3640:9:34","type":""},{"name":"value0","nativeSrc":"3652:6:34","nodeType":"YulTypedName","src":"3652:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:34","nodeType":"YulTypedName","src":"3663:4:34","type":""}],"src":"3570:222:34"},{"body":{"nativeSrc":"3898:519:34","nodeType":"YulBlock","src":"3898:519:34","statements":[{"body":{"nativeSrc":"3944:83:34","nodeType":"YulBlock","src":"3944:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:34","nodeType":"YulIdentifier","src":"3946:77:34"},"nativeSrc":"3946:79:34","nodeType":"YulFunctionCall","src":"3946:79:34"},"nativeSrc":"3946:79:34","nodeType":"YulExpressionStatement","src":"3946:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:34","nodeType":"YulIdentifier","src":"3919:7:34"},{"name":"headStart","nativeSrc":"3928:9:34","nodeType":"YulIdentifier","src":"3928:9:34"}],"functionName":{"name":"sub","nativeSrc":"3915:3:34","nodeType":"YulIdentifier","src":"3915:3:34"},"nativeSrc":"3915:23:34","nodeType":"YulFunctionCall","src":"3915:23:34"},{"kind":"number","nativeSrc":"3940:2:34","nodeType":"YulLiteral","src":"3940:2:34","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:34","nodeType":"YulIdentifier","src":"3911:3:34"},"nativeSrc":"3911:32:34","nodeType":"YulFunctionCall","src":"3911:32:34"},"nativeSrc":"3908:119:34","nodeType":"YulIf","src":"3908:119:34"},{"nativeSrc":"4037:117:34","nodeType":"YulBlock","src":"4037:117:34","statements":[{"nativeSrc":"4052:15:34","nodeType":"YulVariableDeclaration","src":"4052:15:34","value":{"kind":"number","nativeSrc":"4066:1:34","nodeType":"YulLiteral","src":"4066:1:34","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:34","nodeType":"YulTypedName","src":"4056:6:34","type":""}]},{"nativeSrc":"4081:63:34","nodeType":"YulAssignment","src":"4081:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:34","nodeType":"YulIdentifier","src":"4116:9:34"},{"name":"offset","nativeSrc":"4127:6:34","nodeType":"YulIdentifier","src":"4127:6:34"}],"functionName":{"name":"add","nativeSrc":"4112:3:34","nodeType":"YulIdentifier","src":"4112:3:34"},"nativeSrc":"4112:22:34","nodeType":"YulFunctionCall","src":"4112:22:34"},{"name":"dataEnd","nativeSrc":"4136:7:34","nodeType":"YulIdentifier","src":"4136:7:34"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:34","nodeType":"YulIdentifier","src":"4091:20:34"},"nativeSrc":"4091:53:34","nodeType":"YulFunctionCall","src":"4091:53:34"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:34","nodeType":"YulIdentifier","src":"4081:6:34"}]}]},{"nativeSrc":"4164:118:34","nodeType":"YulBlock","src":"4164:118:34","statements":[{"nativeSrc":"4179:16:34","nodeType":"YulVariableDeclaration","src":"4179:16:34","value":{"kind":"number","nativeSrc":"4193:2:34","nodeType":"YulLiteral","src":"4193:2:34","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:34","nodeType":"YulTypedName","src":"4183:6:34","type":""}]},{"nativeSrc":"4209:63:34","nodeType":"YulAssignment","src":"4209:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:34","nodeType":"YulIdentifier","src":"4244:9:34"},{"name":"offset","nativeSrc":"4255:6:34","nodeType":"YulIdentifier","src":"4255:6:34"}],"functionName":{"name":"add","nativeSrc":"4240:3:34","nodeType":"YulIdentifier","src":"4240:3:34"},"nativeSrc":"4240:22:34","nodeType":"YulFunctionCall","src":"4240:22:34"},{"name":"dataEnd","nativeSrc":"4264:7:34","nodeType":"YulIdentifier","src":"4264:7:34"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:34","nodeType":"YulIdentifier","src":"4219:20:34"},"nativeSrc":"4219:53:34","nodeType":"YulFunctionCall","src":"4219:53:34"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:34","nodeType":"YulIdentifier","src":"4209:6:34"}]}]},{"nativeSrc":"4292:118:34","nodeType":"YulBlock","src":"4292:118:34","statements":[{"nativeSrc":"4307:16:34","nodeType":"YulVariableDeclaration","src":"4307:16:34","value":{"kind":"number","nativeSrc":"4321:2:34","nodeType":"YulLiteral","src":"4321:2:34","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:34","nodeType":"YulTypedName","src":"4311:6:34","type":""}]},{"nativeSrc":"4337:63:34","nodeType":"YulAssignment","src":"4337:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:34","nodeType":"YulIdentifier","src":"4372:9:34"},{"name":"offset","nativeSrc":"4383:6:34","nodeType":"YulIdentifier","src":"4383:6:34"}],"functionName":{"name":"add","nativeSrc":"4368:3:34","nodeType":"YulIdentifier","src":"4368:3:34"},"nativeSrc":"4368:22:34","nodeType":"YulFunctionCall","src":"4368:22:34"},{"name":"dataEnd","nativeSrc":"4392:7:34","nodeType":"YulIdentifier","src":"4392:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:34","nodeType":"YulIdentifier","src":"4347:20:34"},"nativeSrc":"4347:53:34","nodeType":"YulFunctionCall","src":"4347:53:34"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:34","nodeType":"YulIdentifier","src":"4337:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:34","nodeType":"YulTypedName","src":"3852:9:34","type":""},{"name":"dataEnd","nativeSrc":"3863:7:34","nodeType":"YulTypedName","src":"3863:7:34","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:34","nodeType":"YulTypedName","src":"3875:6:34","type":""},{"name":"value1","nativeSrc":"3883:6:34","nodeType":"YulTypedName","src":"3883:6:34","type":""},{"name":"value2","nativeSrc":"3891:6:34","nodeType":"YulTypedName","src":"3891:6:34","type":""}],"src":"3798:619:34"},{"body":{"nativeSrc":"4466:43:34","nodeType":"YulBlock","src":"4466:43:34","statements":[{"nativeSrc":"4476:27:34","nodeType":"YulAssignment","src":"4476:27:34","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:34","nodeType":"YulIdentifier","src":"4491:5:34"},{"kind":"number","nativeSrc":"4498:4:34","nodeType":"YulLiteral","src":"4498:4:34","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:34","nodeType":"YulIdentifier","src":"4487:3:34"},"nativeSrc":"4487:16:34","nodeType":"YulFunctionCall","src":"4487:16:34"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:34","nodeType":"YulIdentifier","src":"4476:7:34"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:34","nodeType":"YulTypedName","src":"4448:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:34","nodeType":"YulTypedName","src":"4458:7:34","type":""}],"src":"4423:86:34"},{"body":{"nativeSrc":"4576:51:34","nodeType":"YulBlock","src":"4576:51:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:34","nodeType":"YulIdentifier","src":"4593:3:34"},{"arguments":[{"name":"value","nativeSrc":"4614:5:34","nodeType":"YulIdentifier","src":"4614:5:34"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:34","nodeType":"YulIdentifier","src":"4598:15:34"},"nativeSrc":"4598:22:34","nodeType":"YulFunctionCall","src":"4598:22:34"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:34","nodeType":"YulIdentifier","src":"4586:6:34"},"nativeSrc":"4586:35:34","nodeType":"YulFunctionCall","src":"4586:35:34"},"nativeSrc":"4586:35:34","nodeType":"YulExpressionStatement","src":"4586:35:34"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:34","nodeType":"YulTypedName","src":"4564:5:34","type":""},{"name":"pos","nativeSrc":"4571:3:34","nodeType":"YulTypedName","src":"4571:3:34","type":""}],"src":"4515:112:34"},{"body":{"nativeSrc":"4727:120:34","nodeType":"YulBlock","src":"4727:120:34","statements":[{"nativeSrc":"4737:26:34","nodeType":"YulAssignment","src":"4737:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:34","nodeType":"YulIdentifier","src":"4749:9:34"},{"kind":"number","nativeSrc":"4760:2:34","nodeType":"YulLiteral","src":"4760:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:34","nodeType":"YulIdentifier","src":"4745:3:34"},"nativeSrc":"4745:18:34","nodeType":"YulFunctionCall","src":"4745:18:34"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:34","nodeType":"YulIdentifier","src":"4737:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:34","nodeType":"YulIdentifier","src":"4813:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:34","nodeType":"YulIdentifier","src":"4826:9:34"},{"kind":"number","nativeSrc":"4837:1:34","nodeType":"YulLiteral","src":"4837:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:34","nodeType":"YulIdentifier","src":"4822:3:34"},"nativeSrc":"4822:17:34","nodeType":"YulFunctionCall","src":"4822:17:34"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:34","nodeType":"YulIdentifier","src":"4773:39:34"},"nativeSrc":"4773:67:34","nodeType":"YulFunctionCall","src":"4773:67:34"},"nativeSrc":"4773:67:34","nodeType":"YulExpressionStatement","src":"4773:67:34"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:34","nodeType":"YulTypedName","src":"4699:9:34","type":""},{"name":"value0","nativeSrc":"4711:6:34","nodeType":"YulTypedName","src":"4711:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:34","nodeType":"YulTypedName","src":"4722:4:34","type":""}],"src":"4633:214:34"},{"body":{"nativeSrc":"4898:32:34","nodeType":"YulBlock","src":"4898:32:34","statements":[{"nativeSrc":"4908:16:34","nodeType":"YulAssignment","src":"4908:16:34","value":{"name":"value","nativeSrc":"4919:5:34","nodeType":"YulIdentifier","src":"4919:5:34"},"variableNames":[{"name":"cleaned","nativeSrc":"4908:7:34","nodeType":"YulIdentifier","src":"4908:7:34"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4853:77:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4880:5:34","nodeType":"YulTypedName","src":"4880:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4890:7:34","nodeType":"YulTypedName","src":"4890:7:34","type":""}],"src":"4853:77:34"},{"body":{"nativeSrc":"5001:53:34","nodeType":"YulBlock","src":"5001:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5018:3:34","nodeType":"YulIdentifier","src":"5018:3:34"},{"arguments":[{"name":"value","nativeSrc":"5041:5:34","nodeType":"YulIdentifier","src":"5041:5:34"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5023:17:34","nodeType":"YulIdentifier","src":"5023:17:34"},"nativeSrc":"5023:24:34","nodeType":"YulFunctionCall","src":"5023:24:34"}],"functionName":{"name":"mstore","nativeSrc":"5011:6:34","nodeType":"YulIdentifier","src":"5011:6:34"},"nativeSrc":"5011:37:34","nodeType":"YulFunctionCall","src":"5011:37:34"},"nativeSrc":"5011:37:34","nodeType":"YulExpressionStatement","src":"5011:37:34"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4936:118:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4989:5:34","nodeType":"YulTypedName","src":"4989:5:34","type":""},{"name":"pos","nativeSrc":"4996:3:34","nodeType":"YulTypedName","src":"4996:3:34","type":""}],"src":"4936:118:34"},{"body":{"nativeSrc":"5158:124:34","nodeType":"YulBlock","src":"5158:124:34","statements":[{"nativeSrc":"5168:26:34","nodeType":"YulAssignment","src":"5168:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"5180:9:34","nodeType":"YulIdentifier","src":"5180:9:34"},{"kind":"number","nativeSrc":"5191:2:34","nodeType":"YulLiteral","src":"5191:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5176:3:34","nodeType":"YulIdentifier","src":"5176:3:34"},"nativeSrc":"5176:18:34","nodeType":"YulFunctionCall","src":"5176:18:34"},"variableNames":[{"name":"tail","nativeSrc":"5168:4:34","nodeType":"YulIdentifier","src":"5168:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5248:6:34","nodeType":"YulIdentifier","src":"5248:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"5261:9:34","nodeType":"YulIdentifier","src":"5261:9:34"},{"kind":"number","nativeSrc":"5272:1:34","nodeType":"YulLiteral","src":"5272:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5257:3:34","nodeType":"YulIdentifier","src":"5257:3:34"},"nativeSrc":"5257:17:34","nodeType":"YulFunctionCall","src":"5257:17:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5204:43:34","nodeType":"YulIdentifier","src":"5204:43:34"},"nativeSrc":"5204:71:34","nodeType":"YulFunctionCall","src":"5204:71:34"},"nativeSrc":"5204:71:34","nodeType":"YulExpressionStatement","src":"5204:71:34"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5060:222:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5130:9:34","nodeType":"YulTypedName","src":"5130:9:34","type":""},{"name":"value0","nativeSrc":"5142:6:34","nodeType":"YulTypedName","src":"5142:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5153:4:34","nodeType":"YulTypedName","src":"5153:4:34","type":""}],"src":"5060:222:34"},{"body":{"nativeSrc":"5354:263:34","nodeType":"YulBlock","src":"5354:263:34","statements":[{"body":{"nativeSrc":"5400:83:34","nodeType":"YulBlock","src":"5400:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5402:77:34","nodeType":"YulIdentifier","src":"5402:77:34"},"nativeSrc":"5402:79:34","nodeType":"YulFunctionCall","src":"5402:79:34"},"nativeSrc":"5402:79:34","nodeType":"YulExpressionStatement","src":"5402:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5375:7:34","nodeType":"YulIdentifier","src":"5375:7:34"},{"name":"headStart","nativeSrc":"5384:9:34","nodeType":"YulIdentifier","src":"5384:9:34"}],"functionName":{"name":"sub","nativeSrc":"5371:3:34","nodeType":"YulIdentifier","src":"5371:3:34"},"nativeSrc":"5371:23:34","nodeType":"YulFunctionCall","src":"5371:23:34"},{"kind":"number","nativeSrc":"5396:2:34","nodeType":"YulLiteral","src":"5396:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5367:3:34","nodeType":"YulIdentifier","src":"5367:3:34"},"nativeSrc":"5367:32:34","nodeType":"YulFunctionCall","src":"5367:32:34"},"nativeSrc":"5364:119:34","nodeType":"YulIf","src":"5364:119:34"},{"nativeSrc":"5493:117:34","nodeType":"YulBlock","src":"5493:117:34","statements":[{"nativeSrc":"5508:15:34","nodeType":"YulVariableDeclaration","src":"5508:15:34","value":{"kind":"number","nativeSrc":"5522:1:34","nodeType":"YulLiteral","src":"5522:1:34","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5512:6:34","nodeType":"YulTypedName","src":"5512:6:34","type":""}]},{"nativeSrc":"5537:63:34","nodeType":"YulAssignment","src":"5537:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5572:9:34","nodeType":"YulIdentifier","src":"5572:9:34"},{"name":"offset","nativeSrc":"5583:6:34","nodeType":"YulIdentifier","src":"5583:6:34"}],"functionName":{"name":"add","nativeSrc":"5568:3:34","nodeType":"YulIdentifier","src":"5568:3:34"},"nativeSrc":"5568:22:34","nodeType":"YulFunctionCall","src":"5568:22:34"},{"name":"dataEnd","nativeSrc":"5592:7:34","nodeType":"YulIdentifier","src":"5592:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5547:20:34","nodeType":"YulIdentifier","src":"5547:20:34"},"nativeSrc":"5547:53:34","nodeType":"YulFunctionCall","src":"5547:53:34"},"variableNames":[{"name":"value0","nativeSrc":"5537:6:34","nodeType":"YulIdentifier","src":"5537:6:34"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5288:329:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5324:9:34","nodeType":"YulTypedName","src":"5324:9:34","type":""},{"name":"dataEnd","nativeSrc":"5335:7:34","nodeType":"YulTypedName","src":"5335:7:34","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5347:6:34","nodeType":"YulTypedName","src":"5347:6:34","type":""}],"src":"5288:329:34"},{"body":{"nativeSrc":"5689:263:34","nodeType":"YulBlock","src":"5689:263:34","statements":[{"body":{"nativeSrc":"5735:83:34","nodeType":"YulBlock","src":"5735:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5737:77:34","nodeType":"YulIdentifier","src":"5737:77:34"},"nativeSrc":"5737:79:34","nodeType":"YulFunctionCall","src":"5737:79:34"},"nativeSrc":"5737:79:34","nodeType":"YulExpressionStatement","src":"5737:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5710:7:34","nodeType":"YulIdentifier","src":"5710:7:34"},{"name":"headStart","nativeSrc":"5719:9:34","nodeType":"YulIdentifier","src":"5719:9:34"}],"functionName":{"name":"sub","nativeSrc":"5706:3:34","nodeType":"YulIdentifier","src":"5706:3:34"},"nativeSrc":"5706:23:34","nodeType":"YulFunctionCall","src":"5706:23:34"},{"kind":"number","nativeSrc":"5731:2:34","nodeType":"YulLiteral","src":"5731:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5702:3:34","nodeType":"YulIdentifier","src":"5702:3:34"},"nativeSrc":"5702:32:34","nodeType":"YulFunctionCall","src":"5702:32:34"},"nativeSrc":"5699:119:34","nodeType":"YulIf","src":"5699:119:34"},{"nativeSrc":"5828:117:34","nodeType":"YulBlock","src":"5828:117:34","statements":[{"nativeSrc":"5843:15:34","nodeType":"YulVariableDeclaration","src":"5843:15:34","value":{"kind":"number","nativeSrc":"5857:1:34","nodeType":"YulLiteral","src":"5857:1:34","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5847:6:34","nodeType":"YulTypedName","src":"5847:6:34","type":""}]},{"nativeSrc":"5872:63:34","nodeType":"YulAssignment","src":"5872:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5907:9:34","nodeType":"YulIdentifier","src":"5907:9:34"},{"name":"offset","nativeSrc":"5918:6:34","nodeType":"YulIdentifier","src":"5918:6:34"}],"functionName":{"name":"add","nativeSrc":"5903:3:34","nodeType":"YulIdentifier","src":"5903:3:34"},"nativeSrc":"5903:22:34","nodeType":"YulFunctionCall","src":"5903:22:34"},{"name":"dataEnd","nativeSrc":"5927:7:34","nodeType":"YulIdentifier","src":"5927:7:34"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5882:20:34","nodeType":"YulIdentifier","src":"5882:20:34"},"nativeSrc":"5882:53:34","nodeType":"YulFunctionCall","src":"5882:53:34"},"variableNames":[{"name":"value0","nativeSrc":"5872:6:34","nodeType":"YulIdentifier","src":"5872:6:34"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5623:329:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5659:9:34","nodeType":"YulTypedName","src":"5659:9:34","type":""},{"name":"dataEnd","nativeSrc":"5670:7:34","nodeType":"YulTypedName","src":"5670:7:34","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5682:6:34","nodeType":"YulTypedName","src":"5682:6:34","type":""}],"src":"5623:329:34"},{"body":{"nativeSrc":"6023:53:34","nodeType":"YulBlock","src":"6023:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6040:3:34","nodeType":"YulIdentifier","src":"6040:3:34"},{"arguments":[{"name":"value","nativeSrc":"6063:5:34","nodeType":"YulIdentifier","src":"6063:5:34"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6045:17:34","nodeType":"YulIdentifier","src":"6045:17:34"},"nativeSrc":"6045:24:34","nodeType":"YulFunctionCall","src":"6045:24:34"}],"functionName":{"name":"mstore","nativeSrc":"6033:6:34","nodeType":"YulIdentifier","src":"6033:6:34"},"nativeSrc":"6033:37:34","nodeType":"YulFunctionCall","src":"6033:37:34"},"nativeSrc":"6033:37:34","nodeType":"YulExpressionStatement","src":"6033:37:34"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5958:118:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6011:5:34","nodeType":"YulTypedName","src":"6011:5:34","type":""},{"name":"pos","nativeSrc":"6018:3:34","nodeType":"YulTypedName","src":"6018:3:34","type":""}],"src":"5958:118:34"},{"body":{"nativeSrc":"6180:124:34","nodeType":"YulBlock","src":"6180:124:34","statements":[{"nativeSrc":"6190:26:34","nodeType":"YulAssignment","src":"6190:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"6202:9:34","nodeType":"YulIdentifier","src":"6202:9:34"},{"kind":"number","nativeSrc":"6213:2:34","nodeType":"YulLiteral","src":"6213:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6198:3:34","nodeType":"YulIdentifier","src":"6198:3:34"},"nativeSrc":"6198:18:34","nodeType":"YulFunctionCall","src":"6198:18:34"},"variableNames":[{"name":"tail","nativeSrc":"6190:4:34","nodeType":"YulIdentifier","src":"6190:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6270:6:34","nodeType":"YulIdentifier","src":"6270:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"6283:9:34","nodeType":"YulIdentifier","src":"6283:9:34"},{"kind":"number","nativeSrc":"6294:1:34","nodeType":"YulLiteral","src":"6294:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6279:3:34","nodeType":"YulIdentifier","src":"6279:3:34"},"nativeSrc":"6279:17:34","nodeType":"YulFunctionCall","src":"6279:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6226:43:34","nodeType":"YulIdentifier","src":"6226:43:34"},"nativeSrc":"6226:71:34","nodeType":"YulFunctionCall","src":"6226:71:34"},"nativeSrc":"6226:71:34","nodeType":"YulExpressionStatement","src":"6226:71:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6082:222:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6152:9:34","nodeType":"YulTypedName","src":"6152:9:34","type":""},{"name":"value0","nativeSrc":"6164:6:34","nodeType":"YulTypedName","src":"6164:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6175:4:34","nodeType":"YulTypedName","src":"6175:4:34","type":""}],"src":"6082:222:34"},{"body":{"nativeSrc":"6384:51:34","nodeType":"YulBlock","src":"6384:51:34","statements":[{"nativeSrc":"6394:35:34","nodeType":"YulAssignment","src":"6394:35:34","value":{"arguments":[{"name":"value","nativeSrc":"6423:5:34","nodeType":"YulIdentifier","src":"6423:5:34"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6405:17:34","nodeType":"YulIdentifier","src":"6405:17:34"},"nativeSrc":"6405:24:34","nodeType":"YulFunctionCall","src":"6405:24:34"},"variableNames":[{"name":"cleaned","nativeSrc":"6394:7:34","nodeType":"YulIdentifier","src":"6394:7:34"}]}]},"name":"cleanup_t_contract$_IERC3156FlashBorrower_$797","nativeSrc":"6310:125:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6366:5:34","nodeType":"YulTypedName","src":"6366:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6376:7:34","nodeType":"YulTypedName","src":"6376:7:34","type":""}],"src":"6310:125:34"},{"body":{"nativeSrc":"6513:108:34","nodeType":"YulBlock","src":"6513:108:34","statements":[{"body":{"nativeSrc":"6599:16:34","nodeType":"YulBlock","src":"6599:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6608:1:34","nodeType":"YulLiteral","src":"6608:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"6611:1:34","nodeType":"YulLiteral","src":"6611:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6601:6:34","nodeType":"YulIdentifier","src":"6601:6:34"},"nativeSrc":"6601:12:34","nodeType":"YulFunctionCall","src":"6601:12:34"},"nativeSrc":"6601:12:34","nodeType":"YulExpressionStatement","src":"6601:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6536:5:34","nodeType":"YulIdentifier","src":"6536:5:34"},{"arguments":[{"name":"value","nativeSrc":"6590:5:34","nodeType":"YulIdentifier","src":"6590:5:34"}],"functionName":{"name":"cleanup_t_contract$_IERC3156FlashBorrower_$797","nativeSrc":"6543:46:34","nodeType":"YulIdentifier","src":"6543:46:34"},"nativeSrc":"6543:53:34","nodeType":"YulFunctionCall","src":"6543:53:34"}],"functionName":{"name":"eq","nativeSrc":"6533:2:34","nodeType":"YulIdentifier","src":"6533:2:34"},"nativeSrc":"6533:64:34","nodeType":"YulFunctionCall","src":"6533:64:34"}],"functionName":{"name":"iszero","nativeSrc":"6526:6:34","nodeType":"YulIdentifier","src":"6526:6:34"},"nativeSrc":"6526:72:34","nodeType":"YulFunctionCall","src":"6526:72:34"},"nativeSrc":"6523:92:34","nodeType":"YulIf","src":"6523:92:34"}]},"name":"validator_revert_t_contract$_IERC3156FlashBorrower_$797","nativeSrc":"6441:180:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6506:5:34","nodeType":"YulTypedName","src":"6506:5:34","type":""}],"src":"6441:180:34"},{"body":{"nativeSrc":"6708:116:34","nodeType":"YulBlock","src":"6708:116:34","statements":[{"nativeSrc":"6718:29:34","nodeType":"YulAssignment","src":"6718:29:34","value":{"arguments":[{"name":"offset","nativeSrc":"6740:6:34","nodeType":"YulIdentifier","src":"6740:6:34"}],"functionName":{"name":"calldataload","nativeSrc":"6727:12:34","nodeType":"YulIdentifier","src":"6727:12:34"},"nativeSrc":"6727:20:34","nodeType":"YulFunctionCall","src":"6727:20:34"},"variableNames":[{"name":"value","nativeSrc":"6718:5:34","nodeType":"YulIdentifier","src":"6718:5:34"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6812:5:34","nodeType":"YulIdentifier","src":"6812:5:34"}],"functionName":{"name":"validator_revert_t_contract$_IERC3156FlashBorrower_$797","nativeSrc":"6756:55:34","nodeType":"YulIdentifier","src":"6756:55:34"},"nativeSrc":"6756:62:34","nodeType":"YulFunctionCall","src":"6756:62:34"},"nativeSrc":"6756:62:34","nodeType":"YulExpressionStatement","src":"6756:62:34"}]},"name":"abi_decode_t_contract$_IERC3156FlashBorrower_$797","nativeSrc":"6627:197:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6686:6:34","nodeType":"YulTypedName","src":"6686:6:34","type":""},{"name":"end","nativeSrc":"6694:3:34","nodeType":"YulTypedName","src":"6694:3:34","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6702:5:34","nodeType":"YulTypedName","src":"6702:5:34","type":""}],"src":"6627:197:34"},{"body":{"nativeSrc":"6919:28:34","nodeType":"YulBlock","src":"6919:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6936:1:34","nodeType":"YulLiteral","src":"6936:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"6939:1:34","nodeType":"YulLiteral","src":"6939:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6929:6:34","nodeType":"YulIdentifier","src":"6929:6:34"},"nativeSrc":"6929:12:34","nodeType":"YulFunctionCall","src":"6929:12:34"},"nativeSrc":"6929:12:34","nodeType":"YulExpressionStatement","src":"6929:12:34"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6830:117:34","nodeType":"YulFunctionDefinition","src":"6830:117:34"},{"body":{"nativeSrc":"7042:28:34","nodeType":"YulBlock","src":"7042:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7059:1:34","nodeType":"YulLiteral","src":"7059:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"7062:1:34","nodeType":"YulLiteral","src":"7062:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7052:6:34","nodeType":"YulIdentifier","src":"7052:6:34"},"nativeSrc":"7052:12:34","nodeType":"YulFunctionCall","src":"7052:12:34"},"nativeSrc":"7052:12:34","nodeType":"YulExpressionStatement","src":"7052:12:34"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"6953:117:34","nodeType":"YulFunctionDefinition","src":"6953:117:34"},{"body":{"nativeSrc":"7165:28:34","nodeType":"YulBlock","src":"7165:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7182:1:34","nodeType":"YulLiteral","src":"7182:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"7185:1:34","nodeType":"YulLiteral","src":"7185:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7175:6:34","nodeType":"YulIdentifier","src":"7175:6:34"},"nativeSrc":"7175:12:34","nodeType":"YulFunctionCall","src":"7175:12:34"},"nativeSrc":"7175:12:34","nodeType":"YulExpressionStatement","src":"7175:12:34"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"7076:117:34","nodeType":"YulFunctionDefinition","src":"7076:117:34"},{"body":{"nativeSrc":"7286:478:34","nodeType":"YulBlock","src":"7286:478:34","statements":[{"body":{"nativeSrc":"7335:83:34","nodeType":"YulBlock","src":"7335:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7337:77:34","nodeType":"YulIdentifier","src":"7337:77:34"},"nativeSrc":"7337:79:34","nodeType":"YulFunctionCall","src":"7337:79:34"},"nativeSrc":"7337:79:34","nodeType":"YulExpressionStatement","src":"7337:79:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7314:6:34","nodeType":"YulIdentifier","src":"7314:6:34"},{"kind":"number","nativeSrc":"7322:4:34","nodeType":"YulLiteral","src":"7322:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7310:3:34","nodeType":"YulIdentifier","src":"7310:3:34"},"nativeSrc":"7310:17:34","nodeType":"YulFunctionCall","src":"7310:17:34"},{"name":"end","nativeSrc":"7329:3:34","nodeType":"YulIdentifier","src":"7329:3:34"}],"functionName":{"name":"slt","nativeSrc":"7306:3:34","nodeType":"YulIdentifier","src":"7306:3:34"},"nativeSrc":"7306:27:34","nodeType":"YulFunctionCall","src":"7306:27:34"}],"functionName":{"name":"iszero","nativeSrc":"7299:6:34","nodeType":"YulIdentifier","src":"7299:6:34"},"nativeSrc":"7299:35:34","nodeType":"YulFunctionCall","src":"7299:35:34"},"nativeSrc":"7296:122:34","nodeType":"YulIf","src":"7296:122:34"},{"nativeSrc":"7427:30:34","nodeType":"YulAssignment","src":"7427:30:34","value":{"arguments":[{"name":"offset","nativeSrc":"7450:6:34","nodeType":"YulIdentifier","src":"7450:6:34"}],"functionName":{"name":"calldataload","nativeSrc":"7437:12:34","nodeType":"YulIdentifier","src":"7437:12:34"},"nativeSrc":"7437:20:34","nodeType":"YulFunctionCall","src":"7437:20:34"},"variableNames":[{"name":"length","nativeSrc":"7427:6:34","nodeType":"YulIdentifier","src":"7427:6:34"}]},{"body":{"nativeSrc":"7500:83:34","nodeType":"YulBlock","src":"7500:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"7502:77:34","nodeType":"YulIdentifier","src":"7502:77:34"},"nativeSrc":"7502:79:34","nodeType":"YulFunctionCall","src":"7502:79:34"},"nativeSrc":"7502:79:34","nodeType":"YulExpressionStatement","src":"7502:79:34"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7472:6:34","nodeType":"YulIdentifier","src":"7472:6:34"},{"kind":"number","nativeSrc":"7480:18:34","nodeType":"YulLiteral","src":"7480:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7469:2:34","nodeType":"YulIdentifier","src":"7469:2:34"},"nativeSrc":"7469:30:34","nodeType":"YulFunctionCall","src":"7469:30:34"},"nativeSrc":"7466:117:34","nodeType":"YulIf","src":"7466:117:34"},{"nativeSrc":"7592:29:34","nodeType":"YulAssignment","src":"7592:29:34","value":{"arguments":[{"name":"offset","nativeSrc":"7608:6:34","nodeType":"YulIdentifier","src":"7608:6:34"},{"kind":"number","nativeSrc":"7616:4:34","nodeType":"YulLiteral","src":"7616:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7604:3:34","nodeType":"YulIdentifier","src":"7604:3:34"},"nativeSrc":"7604:17:34","nodeType":"YulFunctionCall","src":"7604:17:34"},"variableNames":[{"name":"arrayPos","nativeSrc":"7592:8:34","nodeType":"YulIdentifier","src":"7592:8:34"}]},{"body":{"nativeSrc":"7675:83:34","nodeType":"YulBlock","src":"7675:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"7677:77:34","nodeType":"YulIdentifier","src":"7677:77:34"},"nativeSrc":"7677:79:34","nodeType":"YulFunctionCall","src":"7677:79:34"},"nativeSrc":"7677:79:34","nodeType":"YulExpressionStatement","src":"7677:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"7640:8:34","nodeType":"YulIdentifier","src":"7640:8:34"},{"arguments":[{"name":"length","nativeSrc":"7654:6:34","nodeType":"YulIdentifier","src":"7654:6:34"},{"kind":"number","nativeSrc":"7662:4:34","nodeType":"YulLiteral","src":"7662:4:34","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"7650:3:34","nodeType":"YulIdentifier","src":"7650:3:34"},"nativeSrc":"7650:17:34","nodeType":"YulFunctionCall","src":"7650:17:34"}],"functionName":{"name":"add","nativeSrc":"7636:3:34","nodeType":"YulIdentifier","src":"7636:3:34"},"nativeSrc":"7636:32:34","nodeType":"YulFunctionCall","src":"7636:32:34"},{"name":"end","nativeSrc":"7670:3:34","nodeType":"YulIdentifier","src":"7670:3:34"}],"functionName":{"name":"gt","nativeSrc":"7633:2:34","nodeType":"YulIdentifier","src":"7633:2:34"},"nativeSrc":"7633:41:34","nodeType":"YulFunctionCall","src":"7633:41:34"},"nativeSrc":"7630:128:34","nodeType":"YulIf","src":"7630:128:34"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"7212:552:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7253:6:34","nodeType":"YulTypedName","src":"7253:6:34","type":""},{"name":"end","nativeSrc":"7261:3:34","nodeType":"YulTypedName","src":"7261:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"7269:8:34","nodeType":"YulTypedName","src":"7269:8:34","type":""},{"name":"length","nativeSrc":"7279:6:34","nodeType":"YulTypedName","src":"7279:6:34","type":""}],"src":"7212:552:34"},{"body":{"nativeSrc":"7935:856:34","nodeType":"YulBlock","src":"7935:856:34","statements":[{"body":{"nativeSrc":"7982:83:34","nodeType":"YulBlock","src":"7982:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7984:77:34","nodeType":"YulIdentifier","src":"7984:77:34"},"nativeSrc":"7984:79:34","nodeType":"YulFunctionCall","src":"7984:79:34"},"nativeSrc":"7984:79:34","nodeType":"YulExpressionStatement","src":"7984:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7956:7:34","nodeType":"YulIdentifier","src":"7956:7:34"},{"name":"headStart","nativeSrc":"7965:9:34","nodeType":"YulIdentifier","src":"7965:9:34"}],"functionName":{"name":"sub","nativeSrc":"7952:3:34","nodeType":"YulIdentifier","src":"7952:3:34"},"nativeSrc":"7952:23:34","nodeType":"YulFunctionCall","src":"7952:23:34"},{"kind":"number","nativeSrc":"7977:3:34","nodeType":"YulLiteral","src":"7977:3:34","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"7948:3:34","nodeType":"YulIdentifier","src":"7948:3:34"},"nativeSrc":"7948:33:34","nodeType":"YulFunctionCall","src":"7948:33:34"},"nativeSrc":"7945:120:34","nodeType":"YulIf","src":"7945:120:34"},{"nativeSrc":"8075:146:34","nodeType":"YulBlock","src":"8075:146:34","statements":[{"nativeSrc":"8090:15:34","nodeType":"YulVariableDeclaration","src":"8090:15:34","value":{"kind":"number","nativeSrc":"8104:1:34","nodeType":"YulLiteral","src":"8104:1:34","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8094:6:34","nodeType":"YulTypedName","src":"8094:6:34","type":""}]},{"nativeSrc":"8119:92:34","nodeType":"YulAssignment","src":"8119:92:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8183:9:34","nodeType":"YulIdentifier","src":"8183:9:34"},{"name":"offset","nativeSrc":"8194:6:34","nodeType":"YulIdentifier","src":"8194:6:34"}],"functionName":{"name":"add","nativeSrc":"8179:3:34","nodeType":"YulIdentifier","src":"8179:3:34"},"nativeSrc":"8179:22:34","nodeType":"YulFunctionCall","src":"8179:22:34"},{"name":"dataEnd","nativeSrc":"8203:7:34","nodeType":"YulIdentifier","src":"8203:7:34"}],"functionName":{"name":"abi_decode_t_contract$_IERC3156FlashBorrower_$797","nativeSrc":"8129:49:34","nodeType":"YulIdentifier","src":"8129:49:34"},"nativeSrc":"8129:82:34","nodeType":"YulFunctionCall","src":"8129:82:34"},"variableNames":[{"name":"value0","nativeSrc":"8119:6:34","nodeType":"YulIdentifier","src":"8119:6:34"}]}]},{"nativeSrc":"8231:118:34","nodeType":"YulBlock","src":"8231:118:34","statements":[{"nativeSrc":"8246:16:34","nodeType":"YulVariableDeclaration","src":"8246:16:34","value":{"kind":"number","nativeSrc":"8260:2:34","nodeType":"YulLiteral","src":"8260:2:34","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8250:6:34","nodeType":"YulTypedName","src":"8250:6:34","type":""}]},{"nativeSrc":"8276:63:34","nodeType":"YulAssignment","src":"8276:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8311:9:34","nodeType":"YulIdentifier","src":"8311:9:34"},{"name":"offset","nativeSrc":"8322:6:34","nodeType":"YulIdentifier","src":"8322:6:34"}],"functionName":{"name":"add","nativeSrc":"8307:3:34","nodeType":"YulIdentifier","src":"8307:3:34"},"nativeSrc":"8307:22:34","nodeType":"YulFunctionCall","src":"8307:22:34"},{"name":"dataEnd","nativeSrc":"8331:7:34","nodeType":"YulIdentifier","src":"8331:7:34"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8286:20:34","nodeType":"YulIdentifier","src":"8286:20:34"},"nativeSrc":"8286:53:34","nodeType":"YulFunctionCall","src":"8286:53:34"},"variableNames":[{"name":"value1","nativeSrc":"8276:6:34","nodeType":"YulIdentifier","src":"8276:6:34"}]}]},{"nativeSrc":"8359:118:34","nodeType":"YulBlock","src":"8359:118:34","statements":[{"nativeSrc":"8374:16:34","nodeType":"YulVariableDeclaration","src":"8374:16:34","value":{"kind":"number","nativeSrc":"8388:2:34","nodeType":"YulLiteral","src":"8388:2:34","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"8378:6:34","nodeType":"YulTypedName","src":"8378:6:34","type":""}]},{"nativeSrc":"8404:63:34","nodeType":"YulAssignment","src":"8404:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8439:9:34","nodeType":"YulIdentifier","src":"8439:9:34"},{"name":"offset","nativeSrc":"8450:6:34","nodeType":"YulIdentifier","src":"8450:6:34"}],"functionName":{"name":"add","nativeSrc":"8435:3:34","nodeType":"YulIdentifier","src":"8435:3:34"},"nativeSrc":"8435:22:34","nodeType":"YulFunctionCall","src":"8435:22:34"},{"name":"dataEnd","nativeSrc":"8459:7:34","nodeType":"YulIdentifier","src":"8459:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8414:20:34","nodeType":"YulIdentifier","src":"8414:20:34"},"nativeSrc":"8414:53:34","nodeType":"YulFunctionCall","src":"8414:53:34"},"variableNames":[{"name":"value2","nativeSrc":"8404:6:34","nodeType":"YulIdentifier","src":"8404:6:34"}]}]},{"nativeSrc":"8487:297:34","nodeType":"YulBlock","src":"8487:297:34","statements":[{"nativeSrc":"8502:46:34","nodeType":"YulVariableDeclaration","src":"8502:46:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8533:9:34","nodeType":"YulIdentifier","src":"8533:9:34"},{"kind":"number","nativeSrc":"8544:2:34","nodeType":"YulLiteral","src":"8544:2:34","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8529:3:34","nodeType":"YulIdentifier","src":"8529:3:34"},"nativeSrc":"8529:18:34","nodeType":"YulFunctionCall","src":"8529:18:34"}],"functionName":{"name":"calldataload","nativeSrc":"8516:12:34","nodeType":"YulIdentifier","src":"8516:12:34"},"nativeSrc":"8516:32:34","nodeType":"YulFunctionCall","src":"8516:32:34"},"variables":[{"name":"offset","nativeSrc":"8506:6:34","nodeType":"YulTypedName","src":"8506:6:34","type":""}]},{"body":{"nativeSrc":"8595:83:34","nodeType":"YulBlock","src":"8595:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8597:77:34","nodeType":"YulIdentifier","src":"8597:77:34"},"nativeSrc":"8597:79:34","nodeType":"YulFunctionCall","src":"8597:79:34"},"nativeSrc":"8597:79:34","nodeType":"YulExpressionStatement","src":"8597:79:34"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8567:6:34","nodeType":"YulIdentifier","src":"8567:6:34"},{"kind":"number","nativeSrc":"8575:18:34","nodeType":"YulLiteral","src":"8575:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8564:2:34","nodeType":"YulIdentifier","src":"8564:2:34"},"nativeSrc":"8564:30:34","nodeType":"YulFunctionCall","src":"8564:30:34"},"nativeSrc":"8561:117:34","nodeType":"YulIf","src":"8561:117:34"},{"nativeSrc":"8692:82:34","nodeType":"YulAssignment","src":"8692:82:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8746:9:34","nodeType":"YulIdentifier","src":"8746:9:34"},{"name":"offset","nativeSrc":"8757:6:34","nodeType":"YulIdentifier","src":"8757:6:34"}],"functionName":{"name":"add","nativeSrc":"8742:3:34","nodeType":"YulIdentifier","src":"8742:3:34"},"nativeSrc":"8742:22:34","nodeType":"YulFunctionCall","src":"8742:22:34"},{"name":"dataEnd","nativeSrc":"8766:7:34","nodeType":"YulIdentifier","src":"8766:7:34"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"8710:31:34","nodeType":"YulIdentifier","src":"8710:31:34"},"nativeSrc":"8710:64:34","nodeType":"YulFunctionCall","src":"8710:64:34"},"variableNames":[{"name":"value3","nativeSrc":"8692:6:34","nodeType":"YulIdentifier","src":"8692:6:34"},{"name":"value4","nativeSrc":"8700:6:34","nodeType":"YulIdentifier","src":"8700:6:34"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC3156FlashBorrower_$797t_addresst_uint256t_bytes_calldata_ptr","nativeSrc":"7770:1021:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7873:9:34","nodeType":"YulTypedName","src":"7873:9:34","type":""},{"name":"dataEnd","nativeSrc":"7884:7:34","nodeType":"YulTypedName","src":"7884:7:34","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7896:6:34","nodeType":"YulTypedName","src":"7896:6:34","type":""},{"name":"value1","nativeSrc":"7904:6:34","nodeType":"YulTypedName","src":"7904:6:34","type":""},{"name":"value2","nativeSrc":"7912:6:34","nodeType":"YulTypedName","src":"7912:6:34","type":""},{"name":"value3","nativeSrc":"7920:6:34","nodeType":"YulTypedName","src":"7920:6:34","type":""},{"name":"value4","nativeSrc":"7928:6:34","nodeType":"YulTypedName","src":"7928:6:34","type":""}],"src":"7770:1021:34"},{"body":{"nativeSrc":"8841:49:34","nodeType":"YulBlock","src":"8841:49:34","statements":[{"nativeSrc":"8851:33:34","nodeType":"YulAssignment","src":"8851:33:34","value":{"arguments":[{"name":"value","nativeSrc":"8866:5:34","nodeType":"YulIdentifier","src":"8866:5:34"},{"kind":"number","nativeSrc":"8873:10:34","nodeType":"YulLiteral","src":"8873:10:34","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"8862:3:34","nodeType":"YulIdentifier","src":"8862:3:34"},"nativeSrc":"8862:22:34","nodeType":"YulFunctionCall","src":"8862:22:34"},"variableNames":[{"name":"cleaned","nativeSrc":"8851:7:34","nodeType":"YulIdentifier","src":"8851:7:34"}]}]},"name":"cleanup_t_uint32","nativeSrc":"8797:93:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8823:5:34","nodeType":"YulTypedName","src":"8823:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8833:7:34","nodeType":"YulTypedName","src":"8833:7:34","type":""}],"src":"8797:93:34"},{"body":{"nativeSrc":"8959:52:34","nodeType":"YulBlock","src":"8959:52:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8976:3:34","nodeType":"YulIdentifier","src":"8976:3:34"},{"arguments":[{"name":"value","nativeSrc":"8998:5:34","nodeType":"YulIdentifier","src":"8998:5:34"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"8981:16:34","nodeType":"YulIdentifier","src":"8981:16:34"},"nativeSrc":"8981:23:34","nodeType":"YulFunctionCall","src":"8981:23:34"}],"functionName":{"name":"mstore","nativeSrc":"8969:6:34","nodeType":"YulIdentifier","src":"8969:6:34"},"nativeSrc":"8969:36:34","nodeType":"YulFunctionCall","src":"8969:36:34"},"nativeSrc":"8969:36:34","nodeType":"YulExpressionStatement","src":"8969:36:34"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"8896:115:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8947:5:34","nodeType":"YulTypedName","src":"8947:5:34","type":""},{"name":"pos","nativeSrc":"8954:3:34","nodeType":"YulTypedName","src":"8954:3:34","type":""}],"src":"8896:115:34"},{"body":{"nativeSrc":"9113:122:34","nodeType":"YulBlock","src":"9113:122:34","statements":[{"nativeSrc":"9123:26:34","nodeType":"YulAssignment","src":"9123:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"9135:9:34","nodeType":"YulIdentifier","src":"9135:9:34"},{"kind":"number","nativeSrc":"9146:2:34","nodeType":"YulLiteral","src":"9146:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9131:3:34","nodeType":"YulIdentifier","src":"9131:3:34"},"nativeSrc":"9131:18:34","nodeType":"YulFunctionCall","src":"9131:18:34"},"variableNames":[{"name":"tail","nativeSrc":"9123:4:34","nodeType":"YulIdentifier","src":"9123:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9201:6:34","nodeType":"YulIdentifier","src":"9201:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"9214:9:34","nodeType":"YulIdentifier","src":"9214:9:34"},{"kind":"number","nativeSrc":"9225:1:34","nodeType":"YulLiteral","src":"9225:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9210:3:34","nodeType":"YulIdentifier","src":"9210:3:34"},"nativeSrc":"9210:17:34","nodeType":"YulFunctionCall","src":"9210:17:34"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"9159:41:34","nodeType":"YulIdentifier","src":"9159:41:34"},"nativeSrc":"9159:69:34","nodeType":"YulFunctionCall","src":"9159:69:34"},"nativeSrc":"9159:69:34","nodeType":"YulExpressionStatement","src":"9159:69:34"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nativeSrc":"9017:218:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9085:9:34","nodeType":"YulTypedName","src":"9085:9:34","type":""},{"name":"value0","nativeSrc":"9097:6:34","nodeType":"YulTypedName","src":"9097:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9108:4:34","nodeType":"YulTypedName","src":"9108:4:34","type":""}],"src":"9017:218:34"},{"body":{"nativeSrc":"9285:105:34","nodeType":"YulBlock","src":"9285:105:34","statements":[{"nativeSrc":"9295:89:34","nodeType":"YulAssignment","src":"9295:89:34","value":{"arguments":[{"name":"value","nativeSrc":"9310:5:34","nodeType":"YulIdentifier","src":"9310:5:34"},{"kind":"number","nativeSrc":"9317:66:34","nodeType":"YulLiteral","src":"9317:66:34","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"9306:3:34","nodeType":"YulIdentifier","src":"9306:3:34"},"nativeSrc":"9306:78:34","nodeType":"YulFunctionCall","src":"9306:78:34"},"variableNames":[{"name":"cleaned","nativeSrc":"9295:7:34","nodeType":"YulIdentifier","src":"9295:7:34"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"9241:149:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9267:5:34","nodeType":"YulTypedName","src":"9267:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9277:7:34","nodeType":"YulTypedName","src":"9277:7:34","type":""}],"src":"9241:149:34"},{"body":{"nativeSrc":"9459:52:34","nodeType":"YulBlock","src":"9459:52:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9476:3:34","nodeType":"YulIdentifier","src":"9476:3:34"},{"arguments":[{"name":"value","nativeSrc":"9498:5:34","nodeType":"YulIdentifier","src":"9498:5:34"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"9481:16:34","nodeType":"YulIdentifier","src":"9481:16:34"},"nativeSrc":"9481:23:34","nodeType":"YulFunctionCall","src":"9481:23:34"}],"functionName":{"name":"mstore","nativeSrc":"9469:6:34","nodeType":"YulIdentifier","src":"9469:6:34"},"nativeSrc":"9469:36:34","nodeType":"YulFunctionCall","src":"9469:36:34"},"nativeSrc":"9469:36:34","nodeType":"YulExpressionStatement","src":"9469:36:34"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"9396:115:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9447:5:34","nodeType":"YulTypedName","src":"9447:5:34","type":""},{"name":"pos","nativeSrc":"9454:3:34","nodeType":"YulTypedName","src":"9454:3:34","type":""}],"src":"9396:115:34"},{"body":{"nativeSrc":"9591:40:34","nodeType":"YulBlock","src":"9591:40:34","statements":[{"nativeSrc":"9602:22:34","nodeType":"YulAssignment","src":"9602:22:34","value":{"arguments":[{"name":"value","nativeSrc":"9618:5:34","nodeType":"YulIdentifier","src":"9618:5:34"}],"functionName":{"name":"mload","nativeSrc":"9612:5:34","nodeType":"YulIdentifier","src":"9612:5:34"},"nativeSrc":"9612:12:34","nodeType":"YulFunctionCall","src":"9612:12:34"},"variableNames":[{"name":"length","nativeSrc":"9602:6:34","nodeType":"YulIdentifier","src":"9602:6:34"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9517:114:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9574:5:34","nodeType":"YulTypedName","src":"9574:5:34","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9584:6:34","nodeType":"YulTypedName","src":"9584:6:34","type":""}],"src":"9517:114:34"},{"body":{"nativeSrc":"9748:73:34","nodeType":"YulBlock","src":"9748:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9765:3:34","nodeType":"YulIdentifier","src":"9765:3:34"},{"name":"length","nativeSrc":"9770:6:34","nodeType":"YulIdentifier","src":"9770:6:34"}],"functionName":{"name":"mstore","nativeSrc":"9758:6:34","nodeType":"YulIdentifier","src":"9758:6:34"},"nativeSrc":"9758:19:34","nodeType":"YulFunctionCall","src":"9758:19:34"},"nativeSrc":"9758:19:34","nodeType":"YulExpressionStatement","src":"9758:19:34"},{"nativeSrc":"9786:29:34","nodeType":"YulAssignment","src":"9786:29:34","value":{"arguments":[{"name":"pos","nativeSrc":"9805:3:34","nodeType":"YulIdentifier","src":"9805:3:34"},{"kind":"number","nativeSrc":"9810:4:34","nodeType":"YulLiteral","src":"9810:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9801:3:34","nodeType":"YulIdentifier","src":"9801:3:34"},"nativeSrc":"9801:14:34","nodeType":"YulFunctionCall","src":"9801:14:34"},"variableNames":[{"name":"updated_pos","nativeSrc":"9786:11:34","nodeType":"YulIdentifier","src":"9786:11:34"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9637:184:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9720:3:34","nodeType":"YulTypedName","src":"9720:3:34","type":""},{"name":"length","nativeSrc":"9725:6:34","nodeType":"YulTypedName","src":"9725:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9736:11:34","nodeType":"YulTypedName","src":"9736:11:34","type":""}],"src":"9637:184:34"},{"body":{"nativeSrc":"9899:60:34","nodeType":"YulBlock","src":"9899:60:34","statements":[{"nativeSrc":"9909:11:34","nodeType":"YulAssignment","src":"9909:11:34","value":{"name":"ptr","nativeSrc":"9917:3:34","nodeType":"YulIdentifier","src":"9917:3:34"},"variableNames":[{"name":"data","nativeSrc":"9909:4:34","nodeType":"YulIdentifier","src":"9909:4:34"}]},{"nativeSrc":"9930:22:34","nodeType":"YulAssignment","src":"9930:22:34","value":{"arguments":[{"name":"ptr","nativeSrc":"9942:3:34","nodeType":"YulIdentifier","src":"9942:3:34"},{"kind":"number","nativeSrc":"9947:4:34","nodeType":"YulLiteral","src":"9947:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9938:3:34","nodeType":"YulIdentifier","src":"9938:3:34"},"nativeSrc":"9938:14:34","nodeType":"YulFunctionCall","src":"9938:14:34"},"variableNames":[{"name":"data","nativeSrc":"9930:4:34","nodeType":"YulIdentifier","src":"9930:4:34"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9827:132:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"9886:3:34","nodeType":"YulTypedName","src":"9886:3:34","type":""}],"returnVariables":[{"name":"data","nativeSrc":"9894:4:34","nodeType":"YulTypedName","src":"9894:4:34","type":""}],"src":"9827:132:34"},{"body":{"nativeSrc":"10020:53:34","nodeType":"YulBlock","src":"10020:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10037:3:34","nodeType":"YulIdentifier","src":"10037:3:34"},{"arguments":[{"name":"value","nativeSrc":"10060:5:34","nodeType":"YulIdentifier","src":"10060:5:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10042:17:34","nodeType":"YulIdentifier","src":"10042:17:34"},"nativeSrc":"10042:24:34","nodeType":"YulFunctionCall","src":"10042:24:34"}],"functionName":{"name":"mstore","nativeSrc":"10030:6:34","nodeType":"YulIdentifier","src":"10030:6:34"},"nativeSrc":"10030:37:34","nodeType":"YulFunctionCall","src":"10030:37:34"},"nativeSrc":"10030:37:34","nodeType":"YulExpressionStatement","src":"10030:37:34"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"9965:108:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10008:5:34","nodeType":"YulTypedName","src":"10008:5:34","type":""},{"name":"pos","nativeSrc":"10015:3:34","nodeType":"YulTypedName","src":"10015:3:34","type":""}],"src":"9965:108:34"},{"body":{"nativeSrc":"10159:99:34","nodeType":"YulBlock","src":"10159:99:34","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"10203:6:34","nodeType":"YulIdentifier","src":"10203:6:34"},{"name":"pos","nativeSrc":"10211:3:34","nodeType":"YulIdentifier","src":"10211:3:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"10169:33:34","nodeType":"YulIdentifier","src":"10169:33:34"},"nativeSrc":"10169:46:34","nodeType":"YulFunctionCall","src":"10169:46:34"},"nativeSrc":"10169:46:34","nodeType":"YulExpressionStatement","src":"10169:46:34"},{"nativeSrc":"10224:28:34","nodeType":"YulAssignment","src":"10224:28:34","value":{"arguments":[{"name":"pos","nativeSrc":"10242:3:34","nodeType":"YulIdentifier","src":"10242:3:34"},{"kind":"number","nativeSrc":"10247:4:34","nodeType":"YulLiteral","src":"10247:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10238:3:34","nodeType":"YulIdentifier","src":"10238:3:34"},"nativeSrc":"10238:14:34","nodeType":"YulFunctionCall","src":"10238:14:34"},"variableNames":[{"name":"updatedPos","nativeSrc":"10224:10:34","nodeType":"YulIdentifier","src":"10224:10:34"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"10079:179:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"10132:6:34","nodeType":"YulTypedName","src":"10132:6:34","type":""},{"name":"pos","nativeSrc":"10140:3:34","nodeType":"YulTypedName","src":"10140:3:34","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"10148:10:34","nodeType":"YulTypedName","src":"10148:10:34","type":""}],"src":"10079:179:34"},{"body":{"nativeSrc":"10339:38:34","nodeType":"YulBlock","src":"10339:38:34","statements":[{"nativeSrc":"10349:22:34","nodeType":"YulAssignment","src":"10349:22:34","value":{"arguments":[{"name":"ptr","nativeSrc":"10361:3:34","nodeType":"YulIdentifier","src":"10361:3:34"},{"kind":"number","nativeSrc":"10366:4:34","nodeType":"YulLiteral","src":"10366:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10357:3:34","nodeType":"YulIdentifier","src":"10357:3:34"},"nativeSrc":"10357:14:34","nodeType":"YulFunctionCall","src":"10357:14:34"},"variableNames":[{"name":"next","nativeSrc":"10349:4:34","nodeType":"YulIdentifier","src":"10349:4:34"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10264:113:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10326:3:34","nodeType":"YulTypedName","src":"10326:3:34","type":""}],"returnVariables":[{"name":"next","nativeSrc":"10334:4:34","nodeType":"YulTypedName","src":"10334:4:34","type":""}],"src":"10264:113:34"},{"body":{"nativeSrc":"10537:608:34","nodeType":"YulBlock","src":"10537:608:34","statements":[{"nativeSrc":"10547:68:34","nodeType":"YulVariableDeclaration","src":"10547:68:34","value":{"arguments":[{"name":"value","nativeSrc":"10609:5:34","nodeType":"YulIdentifier","src":"10609:5:34"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10561:47:34","nodeType":"YulIdentifier","src":"10561:47:34"},"nativeSrc":"10561:54:34","nodeType":"YulFunctionCall","src":"10561:54:34"},"variables":[{"name":"length","nativeSrc":"10551:6:34","nodeType":"YulTypedName","src":"10551:6:34","type":""}]},{"nativeSrc":"10624:93:34","nodeType":"YulAssignment","src":"10624:93:34","value":{"arguments":[{"name":"pos","nativeSrc":"10705:3:34","nodeType":"YulIdentifier","src":"10705:3:34"},{"name":"length","nativeSrc":"10710:6:34","nodeType":"YulIdentifier","src":"10710:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"10631:73:34","nodeType":"YulIdentifier","src":"10631:73:34"},"nativeSrc":"10631:86:34","nodeType":"YulFunctionCall","src":"10631:86:34"},"variableNames":[{"name":"pos","nativeSrc":"10624:3:34","nodeType":"YulIdentifier","src":"10624:3:34"}]},{"nativeSrc":"10726:71:34","nodeType":"YulVariableDeclaration","src":"10726:71:34","value":{"arguments":[{"name":"value","nativeSrc":"10791:5:34","nodeType":"YulIdentifier","src":"10791:5:34"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10741:49:34","nodeType":"YulIdentifier","src":"10741:49:34"},"nativeSrc":"10741:56:34","nodeType":"YulFunctionCall","src":"10741:56:34"},"variables":[{"name":"baseRef","nativeSrc":"10730:7:34","nodeType":"YulTypedName","src":"10730:7:34","type":""}]},{"nativeSrc":"10806:21:34","nodeType":"YulVariableDeclaration","src":"10806:21:34","value":{"name":"baseRef","nativeSrc":"10820:7:34","nodeType":"YulIdentifier","src":"10820:7:34"},"variables":[{"name":"srcPtr","nativeSrc":"10810:6:34","nodeType":"YulTypedName","src":"10810:6:34","type":""}]},{"body":{"nativeSrc":"10896:224:34","nodeType":"YulBlock","src":"10896:224:34","statements":[{"nativeSrc":"10910:34:34","nodeType":"YulVariableDeclaration","src":"10910:34:34","value":{"arguments":[{"name":"srcPtr","nativeSrc":"10937:6:34","nodeType":"YulIdentifier","src":"10937:6:34"}],"functionName":{"name":"mload","nativeSrc":"10931:5:34","nodeType":"YulIdentifier","src":"10931:5:34"},"nativeSrc":"10931:13:34","nodeType":"YulFunctionCall","src":"10931:13:34"},"variables":[{"name":"elementValue0","nativeSrc":"10914:13:34","nodeType":"YulTypedName","src":"10914:13:34","type":""}]},{"nativeSrc":"10957:70:34","nodeType":"YulAssignment","src":"10957:70:34","value":{"arguments":[{"name":"elementValue0","nativeSrc":"11008:13:34","nodeType":"YulIdentifier","src":"11008:13:34"},{"name":"pos","nativeSrc":"11023:3:34","nodeType":"YulIdentifier","src":"11023:3:34"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"10964:43:34","nodeType":"YulIdentifier","src":"10964:43:34"},"nativeSrc":"10964:63:34","nodeType":"YulFunctionCall","src":"10964:63:34"},"variableNames":[{"name":"pos","nativeSrc":"10957:3:34","nodeType":"YulIdentifier","src":"10957:3:34"}]},{"nativeSrc":"11040:70:34","nodeType":"YulAssignment","src":"11040:70:34","value":{"arguments":[{"name":"srcPtr","nativeSrc":"11103:6:34","nodeType":"YulIdentifier","src":"11103:6:34"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11050:52:34","nodeType":"YulIdentifier","src":"11050:52:34"},"nativeSrc":"11050:60:34","nodeType":"YulFunctionCall","src":"11050:60:34"},"variableNames":[{"name":"srcPtr","nativeSrc":"11040:6:34","nodeType":"YulIdentifier","src":"11040:6:34"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"10858:1:34","nodeType":"YulIdentifier","src":"10858:1:34"},{"name":"length","nativeSrc":"10861:6:34","nodeType":"YulIdentifier","src":"10861:6:34"}],"functionName":{"name":"lt","nativeSrc":"10855:2:34","nodeType":"YulIdentifier","src":"10855:2:34"},"nativeSrc":"10855:13:34","nodeType":"YulFunctionCall","src":"10855:13:34"},"nativeSrc":"10836:284:34","nodeType":"YulForLoop","post":{"nativeSrc":"10869:18:34","nodeType":"YulBlock","src":"10869:18:34","statements":[{"nativeSrc":"10871:14:34","nodeType":"YulAssignment","src":"10871:14:34","value":{"arguments":[{"name":"i","nativeSrc":"10880:1:34","nodeType":"YulIdentifier","src":"10880:1:34"},{"kind":"number","nativeSrc":"10883:1:34","nodeType":"YulLiteral","src":"10883:1:34","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"10876:3:34","nodeType":"YulIdentifier","src":"10876:3:34"},"nativeSrc":"10876:9:34","nodeType":"YulFunctionCall","src":"10876:9:34"},"variableNames":[{"name":"i","nativeSrc":"10871:1:34","nodeType":"YulIdentifier","src":"10871:1:34"}]}]},"pre":{"nativeSrc":"10840:14:34","nodeType":"YulBlock","src":"10840:14:34","statements":[{"nativeSrc":"10842:10:34","nodeType":"YulVariableDeclaration","src":"10842:10:34","value":{"kind":"number","nativeSrc":"10851:1:34","nodeType":"YulLiteral","src":"10851:1:34","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"10846:1:34","nodeType":"YulTypedName","src":"10846:1:34","type":""}]}]},"src":"10836:284:34"},{"nativeSrc":"11129:10:34","nodeType":"YulAssignment","src":"11129:10:34","value":{"name":"pos","nativeSrc":"11136:3:34","nodeType":"YulIdentifier","src":"11136:3:34"},"variableNames":[{"name":"end","nativeSrc":"11129:3:34","nodeType":"YulIdentifier","src":"11129:3:34"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"10413:732:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10516:5:34","nodeType":"YulTypedName","src":"10516:5:34","type":""},{"name":"pos","nativeSrc":"10523:3:34","nodeType":"YulTypedName","src":"10523:3:34","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10532:3:34","nodeType":"YulTypedName","src":"10532:3:34","type":""}],"src":"10413:732:34"},{"body":{"nativeSrc":"11505:861:34","nodeType":"YulBlock","src":"11505:861:34","statements":[{"nativeSrc":"11515:27:34","nodeType":"YulAssignment","src":"11515:27:34","value":{"arguments":[{"name":"headStart","nativeSrc":"11527:9:34","nodeType":"YulIdentifier","src":"11527:9:34"},{"kind":"number","nativeSrc":"11538:3:34","nodeType":"YulLiteral","src":"11538:3:34","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"11523:3:34","nodeType":"YulIdentifier","src":"11523:3:34"},"nativeSrc":"11523:19:34","nodeType":"YulFunctionCall","src":"11523:19:34"},"variableNames":[{"name":"tail","nativeSrc":"11515:4:34","nodeType":"YulIdentifier","src":"11515:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11594:6:34","nodeType":"YulIdentifier","src":"11594:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"11607:9:34","nodeType":"YulIdentifier","src":"11607:9:34"},{"kind":"number","nativeSrc":"11618:1:34","nodeType":"YulLiteral","src":"11618:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11603:3:34","nodeType":"YulIdentifier","src":"11603:3:34"},"nativeSrc":"11603:17:34","nodeType":"YulFunctionCall","src":"11603:17:34"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"11552:41:34","nodeType":"YulIdentifier","src":"11552:41:34"},"nativeSrc":"11552:69:34","nodeType":"YulFunctionCall","src":"11552:69:34"},"nativeSrc":"11552:69:34","nodeType":"YulExpressionStatement","src":"11552:69:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11642:9:34","nodeType":"YulIdentifier","src":"11642:9:34"},{"kind":"number","nativeSrc":"11653:2:34","nodeType":"YulLiteral","src":"11653:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11638:3:34","nodeType":"YulIdentifier","src":"11638:3:34"},"nativeSrc":"11638:18:34","nodeType":"YulFunctionCall","src":"11638:18:34"},{"arguments":[{"name":"tail","nativeSrc":"11662:4:34","nodeType":"YulIdentifier","src":"11662:4:34"},{"name":"headStart","nativeSrc":"11668:9:34","nodeType":"YulIdentifier","src":"11668:9:34"}],"functionName":{"name":"sub","nativeSrc":"11658:3:34","nodeType":"YulIdentifier","src":"11658:3:34"},"nativeSrc":"11658:20:34","nodeType":"YulFunctionCall","src":"11658:20:34"}],"functionName":{"name":"mstore","nativeSrc":"11631:6:34","nodeType":"YulIdentifier","src":"11631:6:34"},"nativeSrc":"11631:48:34","nodeType":"YulFunctionCall","src":"11631:48:34"},"nativeSrc":"11631:48:34","nodeType":"YulExpressionStatement","src":"11631:48:34"},{"nativeSrc":"11688:86:34","nodeType":"YulAssignment","src":"11688:86:34","value":{"arguments":[{"name":"value1","nativeSrc":"11760:6:34","nodeType":"YulIdentifier","src":"11760:6:34"},{"name":"tail","nativeSrc":"11769:4:34","nodeType":"YulIdentifier","src":"11769:4:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11696:63:34","nodeType":"YulIdentifier","src":"11696:63:34"},"nativeSrc":"11696:78:34","nodeType":"YulFunctionCall","src":"11696:78:34"},"variableNames":[{"name":"tail","nativeSrc":"11688:4:34","nodeType":"YulIdentifier","src":"11688:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11795:9:34","nodeType":"YulIdentifier","src":"11795:9:34"},{"kind":"number","nativeSrc":"11806:2:34","nodeType":"YulLiteral","src":"11806:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11791:3:34","nodeType":"YulIdentifier","src":"11791:3:34"},"nativeSrc":"11791:18:34","nodeType":"YulFunctionCall","src":"11791:18:34"},{"arguments":[{"name":"tail","nativeSrc":"11815:4:34","nodeType":"YulIdentifier","src":"11815:4:34"},{"name":"headStart","nativeSrc":"11821:9:34","nodeType":"YulIdentifier","src":"11821:9:34"}],"functionName":{"name":"sub","nativeSrc":"11811:3:34","nodeType":"YulIdentifier","src":"11811:3:34"},"nativeSrc":"11811:20:34","nodeType":"YulFunctionCall","src":"11811:20:34"}],"functionName":{"name":"mstore","nativeSrc":"11784:6:34","nodeType":"YulIdentifier","src":"11784:6:34"},"nativeSrc":"11784:48:34","nodeType":"YulFunctionCall","src":"11784:48:34"},"nativeSrc":"11784:48:34","nodeType":"YulExpressionStatement","src":"11784:48:34"},{"nativeSrc":"11841:86:34","nodeType":"YulAssignment","src":"11841:86:34","value":{"arguments":[{"name":"value2","nativeSrc":"11913:6:34","nodeType":"YulIdentifier","src":"11913:6:34"},{"name":"tail","nativeSrc":"11922:4:34","nodeType":"YulIdentifier","src":"11922:4:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11849:63:34","nodeType":"YulIdentifier","src":"11849:63:34"},"nativeSrc":"11849:78:34","nodeType":"YulFunctionCall","src":"11849:78:34"},"variableNames":[{"name":"tail","nativeSrc":"11841:4:34","nodeType":"YulIdentifier","src":"11841:4:34"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"11981:6:34","nodeType":"YulIdentifier","src":"11981:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"11994:9:34","nodeType":"YulIdentifier","src":"11994:9:34"},{"kind":"number","nativeSrc":"12005:2:34","nodeType":"YulLiteral","src":"12005:2:34","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11990:3:34","nodeType":"YulIdentifier","src":"11990:3:34"},"nativeSrc":"11990:18:34","nodeType":"YulFunctionCall","src":"11990:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11937:43:34","nodeType":"YulIdentifier","src":"11937:43:34"},"nativeSrc":"11937:72:34","nodeType":"YulFunctionCall","src":"11937:72:34"},"nativeSrc":"11937:72:34","nodeType":"YulExpressionStatement","src":"11937:72:34"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"12063:6:34","nodeType":"YulIdentifier","src":"12063:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"12076:9:34","nodeType":"YulIdentifier","src":"12076:9:34"},{"kind":"number","nativeSrc":"12087:3:34","nodeType":"YulLiteral","src":"12087:3:34","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12072:3:34","nodeType":"YulIdentifier","src":"12072:3:34"},"nativeSrc":"12072:19:34","nodeType":"YulFunctionCall","src":"12072:19:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12019:43:34","nodeType":"YulIdentifier","src":"12019:43:34"},"nativeSrc":"12019:73:34","nodeType":"YulFunctionCall","src":"12019:73:34"},"nativeSrc":"12019:73:34","nodeType":"YulExpressionStatement","src":"12019:73:34"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"12146:6:34","nodeType":"YulIdentifier","src":"12146:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"12159:9:34","nodeType":"YulIdentifier","src":"12159:9:34"},{"kind":"number","nativeSrc":"12170:3:34","nodeType":"YulLiteral","src":"12170:3:34","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12155:3:34","nodeType":"YulIdentifier","src":"12155:3:34"},"nativeSrc":"12155:19:34","nodeType":"YulFunctionCall","src":"12155:19:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12102:43:34","nodeType":"YulIdentifier","src":"12102:43:34"},"nativeSrc":"12102:73:34","nodeType":"YulFunctionCall","src":"12102:73:34"},"nativeSrc":"12102:73:34","nodeType":"YulExpressionStatement","src":"12102:73:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12196:9:34","nodeType":"YulIdentifier","src":"12196:9:34"},{"kind":"number","nativeSrc":"12207:3:34","nodeType":"YulLiteral","src":"12207:3:34","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12192:3:34","nodeType":"YulIdentifier","src":"12192:3:34"},"nativeSrc":"12192:19:34","nodeType":"YulFunctionCall","src":"12192:19:34"},{"arguments":[{"name":"tail","nativeSrc":"12217:4:34","nodeType":"YulIdentifier","src":"12217:4:34"},{"name":"headStart","nativeSrc":"12223:9:34","nodeType":"YulIdentifier","src":"12223:9:34"}],"functionName":{"name":"sub","nativeSrc":"12213:3:34","nodeType":"YulIdentifier","src":"12213:3:34"},"nativeSrc":"12213:20:34","nodeType":"YulFunctionCall","src":"12213:20:34"}],"functionName":{"name":"mstore","nativeSrc":"12185:6:34","nodeType":"YulIdentifier","src":"12185:6:34"},"nativeSrc":"12185:49:34","nodeType":"YulFunctionCall","src":"12185:49:34"},"nativeSrc":"12185:49:34","nodeType":"YulExpressionStatement","src":"12185:49:34"},{"nativeSrc":"12243:116:34","nodeType":"YulAssignment","src":"12243:116:34","value":{"arguments":[{"name":"value6","nativeSrc":"12345:6:34","nodeType":"YulIdentifier","src":"12345:6:34"},{"name":"tail","nativeSrc":"12354:4:34","nodeType":"YulIdentifier","src":"12354:4:34"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"12251:93:34","nodeType":"YulIdentifier","src":"12251:93:34"},"nativeSrc":"12251:108:34","nodeType":"YulFunctionCall","src":"12251:108:34"},"variableNames":[{"name":"tail","nativeSrc":"12243:4:34","nodeType":"YulIdentifier","src":"12243:4:34"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"11151:1215:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11429:9:34","nodeType":"YulTypedName","src":"11429:9:34","type":""},{"name":"value6","nativeSrc":"11441:6:34","nodeType":"YulTypedName","src":"11441:6:34","type":""},{"name":"value5","nativeSrc":"11449:6:34","nodeType":"YulTypedName","src":"11449:6:34","type":""},{"name":"value4","nativeSrc":"11457:6:34","nodeType":"YulTypedName","src":"11457:6:34","type":""},{"name":"value3","nativeSrc":"11465:6:34","nodeType":"YulTypedName","src":"11465:6:34","type":""},{"name":"value2","nativeSrc":"11473:6:34","nodeType":"YulTypedName","src":"11473:6:34","type":""},{"name":"value1","nativeSrc":"11481:6:34","nodeType":"YulTypedName","src":"11481:6:34","type":""},{"name":"value0","nativeSrc":"11489:6:34","nodeType":"YulTypedName","src":"11489:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11500:4:34","nodeType":"YulTypedName","src":"11500:4:34","type":""}],"src":"11151:1215:34"},{"body":{"nativeSrc":"12416:53:34","nodeType":"YulBlock","src":"12416:53:34","statements":[{"nativeSrc":"12426:37:34","nodeType":"YulAssignment","src":"12426:37:34","value":{"arguments":[{"name":"value","nativeSrc":"12441:5:34","nodeType":"YulIdentifier","src":"12441:5:34"},{"kind":"number","nativeSrc":"12448:14:34","nodeType":"YulLiteral","src":"12448:14:34","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nativeSrc":"12437:3:34","nodeType":"YulIdentifier","src":"12437:3:34"},"nativeSrc":"12437:26:34","nodeType":"YulFunctionCall","src":"12437:26:34"},"variableNames":[{"name":"cleaned","nativeSrc":"12426:7:34","nodeType":"YulIdentifier","src":"12426:7:34"}]}]},"name":"cleanup_t_uint48","nativeSrc":"12372:97:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12398:5:34","nodeType":"YulTypedName","src":"12398:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"12408:7:34","nodeType":"YulTypedName","src":"12408:7:34","type":""}],"src":"12372:97:34"},{"body":{"nativeSrc":"12538:52:34","nodeType":"YulBlock","src":"12538:52:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12555:3:34","nodeType":"YulIdentifier","src":"12555:3:34"},{"arguments":[{"name":"value","nativeSrc":"12577:5:34","nodeType":"YulIdentifier","src":"12577:5:34"}],"functionName":{"name":"cleanup_t_uint48","nativeSrc":"12560:16:34","nodeType":"YulIdentifier","src":"12560:16:34"},"nativeSrc":"12560:23:34","nodeType":"YulFunctionCall","src":"12560:23:34"}],"functionName":{"name":"mstore","nativeSrc":"12548:6:34","nodeType":"YulIdentifier","src":"12548:6:34"},"nativeSrc":"12548:36:34","nodeType":"YulFunctionCall","src":"12548:36:34"},"nativeSrc":"12548:36:34","nodeType":"YulExpressionStatement","src":"12548:36:34"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nativeSrc":"12475:115:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12526:5:34","nodeType":"YulTypedName","src":"12526:5:34","type":""},{"name":"pos","nativeSrc":"12533:3:34","nodeType":"YulTypedName","src":"12533:3:34","type":""}],"src":"12475:115:34"},{"body":{"nativeSrc":"12692:122:34","nodeType":"YulBlock","src":"12692:122:34","statements":[{"nativeSrc":"12702:26:34","nodeType":"YulAssignment","src":"12702:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"12714:9:34","nodeType":"YulIdentifier","src":"12714:9:34"},{"kind":"number","nativeSrc":"12725:2:34","nodeType":"YulLiteral","src":"12725:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12710:3:34","nodeType":"YulIdentifier","src":"12710:3:34"},"nativeSrc":"12710:18:34","nodeType":"YulFunctionCall","src":"12710:18:34"},"variableNames":[{"name":"tail","nativeSrc":"12702:4:34","nodeType":"YulIdentifier","src":"12702:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12780:6:34","nodeType":"YulIdentifier","src":"12780:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"12793:9:34","nodeType":"YulIdentifier","src":"12793:9:34"},{"kind":"number","nativeSrc":"12804:1:34","nodeType":"YulLiteral","src":"12804:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12789:3:34","nodeType":"YulIdentifier","src":"12789:3:34"},"nativeSrc":"12789:17:34","nodeType":"YulFunctionCall","src":"12789:17:34"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nativeSrc":"12738:41:34","nodeType":"YulIdentifier","src":"12738:41:34"},"nativeSrc":"12738:69:34","nodeType":"YulFunctionCall","src":"12738:69:34"},"nativeSrc":"12738:69:34","nodeType":"YulExpressionStatement","src":"12738:69:34"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nativeSrc":"12596:218:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12664:9:34","nodeType":"YulTypedName","src":"12664:9:34","type":""},{"name":"value0","nativeSrc":"12676:6:34","nodeType":"YulTypedName","src":"12676:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12687:4:34","nodeType":"YulTypedName","src":"12687:4:34","type":""}],"src":"12596:218:34"},{"body":{"nativeSrc":"12861:77:34","nodeType":"YulBlock","src":"12861:77:34","statements":[{"body":{"nativeSrc":"12916:16:34","nodeType":"YulBlock","src":"12916:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12925:1:34","nodeType":"YulLiteral","src":"12925:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"12928:1:34","nodeType":"YulLiteral","src":"12928:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12918:6:34","nodeType":"YulIdentifier","src":"12918:6:34"},"nativeSrc":"12918:12:34","nodeType":"YulFunctionCall","src":"12918:12:34"},"nativeSrc":"12918:12:34","nodeType":"YulExpressionStatement","src":"12918:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12884:5:34","nodeType":"YulIdentifier","src":"12884:5:34"},{"arguments":[{"name":"value","nativeSrc":"12907:5:34","nodeType":"YulIdentifier","src":"12907:5:34"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"12891:15:34","nodeType":"YulIdentifier","src":"12891:15:34"},"nativeSrc":"12891:22:34","nodeType":"YulFunctionCall","src":"12891:22:34"}],"functionName":{"name":"eq","nativeSrc":"12881:2:34","nodeType":"YulIdentifier","src":"12881:2:34"},"nativeSrc":"12881:33:34","nodeType":"YulFunctionCall","src":"12881:33:34"}],"functionName":{"name":"iszero","nativeSrc":"12874:6:34","nodeType":"YulIdentifier","src":"12874:6:34"},"nativeSrc":"12874:41:34","nodeType":"YulFunctionCall","src":"12874:41:34"},"nativeSrc":"12871:61:34","nodeType":"YulIf","src":"12871:61:34"}]},"name":"validator_revert_t_uint8","nativeSrc":"12820:118:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12854:5:34","nodeType":"YulTypedName","src":"12854:5:34","type":""}],"src":"12820:118:34"},{"body":{"nativeSrc":"12994:85:34","nodeType":"YulBlock","src":"12994:85:34","statements":[{"nativeSrc":"13004:29:34","nodeType":"YulAssignment","src":"13004:29:34","value":{"arguments":[{"name":"offset","nativeSrc":"13026:6:34","nodeType":"YulIdentifier","src":"13026:6:34"}],"functionName":{"name":"calldataload","nativeSrc":"13013:12:34","nodeType":"YulIdentifier","src":"13013:12:34"},"nativeSrc":"13013:20:34","nodeType":"YulFunctionCall","src":"13013:20:34"},"variableNames":[{"name":"value","nativeSrc":"13004:5:34","nodeType":"YulIdentifier","src":"13004:5:34"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"13067:5:34","nodeType":"YulIdentifier","src":"13067:5:34"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"13042:24:34","nodeType":"YulIdentifier","src":"13042:24:34"},"nativeSrc":"13042:31:34","nodeType":"YulFunctionCall","src":"13042:31:34"},"nativeSrc":"13042:31:34","nodeType":"YulExpressionStatement","src":"13042:31:34"}]},"name":"abi_decode_t_uint8","nativeSrc":"12944:135:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12972:6:34","nodeType":"YulTypedName","src":"12972:6:34","type":""},{"name":"end","nativeSrc":"12980:3:34","nodeType":"YulTypedName","src":"12980:3:34","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12988:5:34","nodeType":"YulTypedName","src":"12988:5:34","type":""}],"src":"12944:135:34"},{"body":{"nativeSrc":"13128:79:34","nodeType":"YulBlock","src":"13128:79:34","statements":[{"body":{"nativeSrc":"13185:16:34","nodeType":"YulBlock","src":"13185:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13194:1:34","nodeType":"YulLiteral","src":"13194:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"13197:1:34","nodeType":"YulLiteral","src":"13197:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13187:6:34","nodeType":"YulIdentifier","src":"13187:6:34"},"nativeSrc":"13187:12:34","nodeType":"YulFunctionCall","src":"13187:12:34"},"nativeSrc":"13187:12:34","nodeType":"YulExpressionStatement","src":"13187:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13151:5:34","nodeType":"YulIdentifier","src":"13151:5:34"},{"arguments":[{"name":"value","nativeSrc":"13176:5:34","nodeType":"YulIdentifier","src":"13176:5:34"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"13158:17:34","nodeType":"YulIdentifier","src":"13158:17:34"},"nativeSrc":"13158:24:34","nodeType":"YulFunctionCall","src":"13158:24:34"}],"functionName":{"name":"eq","nativeSrc":"13148:2:34","nodeType":"YulIdentifier","src":"13148:2:34"},"nativeSrc":"13148:35:34","nodeType":"YulFunctionCall","src":"13148:35:34"}],"functionName":{"name":"iszero","nativeSrc":"13141:6:34","nodeType":"YulIdentifier","src":"13141:6:34"},"nativeSrc":"13141:43:34","nodeType":"YulFunctionCall","src":"13141:43:34"},"nativeSrc":"13138:63:34","nodeType":"YulIf","src":"13138:63:34"}]},"name":"validator_revert_t_bytes32","nativeSrc":"13085:122:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13121:5:34","nodeType":"YulTypedName","src":"13121:5:34","type":""}],"src":"13085:122:34"},{"body":{"nativeSrc":"13265:87:34","nodeType":"YulBlock","src":"13265:87:34","statements":[{"nativeSrc":"13275:29:34","nodeType":"YulAssignment","src":"13275:29:34","value":{"arguments":[{"name":"offset","nativeSrc":"13297:6:34","nodeType":"YulIdentifier","src":"13297:6:34"}],"functionName":{"name":"calldataload","nativeSrc":"13284:12:34","nodeType":"YulIdentifier","src":"13284:12:34"},"nativeSrc":"13284:20:34","nodeType":"YulFunctionCall","src":"13284:20:34"},"variableNames":[{"name":"value","nativeSrc":"13275:5:34","nodeType":"YulIdentifier","src":"13275:5:34"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"13340:5:34","nodeType":"YulIdentifier","src":"13340:5:34"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"13313:26:34","nodeType":"YulIdentifier","src":"13313:26:34"},"nativeSrc":"13313:33:34","nodeType":"YulFunctionCall","src":"13313:33:34"},"nativeSrc":"13313:33:34","nodeType":"YulExpressionStatement","src":"13313:33:34"}]},"name":"abi_decode_t_bytes32","nativeSrc":"13213:139:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"13243:6:34","nodeType":"YulTypedName","src":"13243:6:34","type":""},{"name":"end","nativeSrc":"13251:3:34","nodeType":"YulTypedName","src":"13251:3:34","type":""}],"returnVariables":[{"name":"value","nativeSrc":"13259:5:34","nodeType":"YulTypedName","src":"13259:5:34","type":""}],"src":"13213:139:34"},{"body":{"nativeSrc":"13507:904:34","nodeType":"YulBlock","src":"13507:904:34","statements":[{"body":{"nativeSrc":"13554:83:34","nodeType":"YulBlock","src":"13554:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13556:77:34","nodeType":"YulIdentifier","src":"13556:77:34"},"nativeSrc":"13556:79:34","nodeType":"YulFunctionCall","src":"13556:79:34"},"nativeSrc":"13556:79:34","nodeType":"YulExpressionStatement","src":"13556:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13528:7:34","nodeType":"YulIdentifier","src":"13528:7:34"},{"name":"headStart","nativeSrc":"13537:9:34","nodeType":"YulIdentifier","src":"13537:9:34"}],"functionName":{"name":"sub","nativeSrc":"13524:3:34","nodeType":"YulIdentifier","src":"13524:3:34"},"nativeSrc":"13524:23:34","nodeType":"YulFunctionCall","src":"13524:23:34"},{"kind":"number","nativeSrc":"13549:3:34","nodeType":"YulLiteral","src":"13549:3:34","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"13520:3:34","nodeType":"YulIdentifier","src":"13520:3:34"},"nativeSrc":"13520:33:34","nodeType":"YulFunctionCall","src":"13520:33:34"},"nativeSrc":"13517:120:34","nodeType":"YulIf","src":"13517:120:34"},{"nativeSrc":"13647:117:34","nodeType":"YulBlock","src":"13647:117:34","statements":[{"nativeSrc":"13662:15:34","nodeType":"YulVariableDeclaration","src":"13662:15:34","value":{"kind":"number","nativeSrc":"13676:1:34","nodeType":"YulLiteral","src":"13676:1:34","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13666:6:34","nodeType":"YulTypedName","src":"13666:6:34","type":""}]},{"nativeSrc":"13691:63:34","nodeType":"YulAssignment","src":"13691:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13726:9:34","nodeType":"YulIdentifier","src":"13726:9:34"},{"name":"offset","nativeSrc":"13737:6:34","nodeType":"YulIdentifier","src":"13737:6:34"}],"functionName":{"name":"add","nativeSrc":"13722:3:34","nodeType":"YulIdentifier","src":"13722:3:34"},"nativeSrc":"13722:22:34","nodeType":"YulFunctionCall","src":"13722:22:34"},{"name":"dataEnd","nativeSrc":"13746:7:34","nodeType":"YulIdentifier","src":"13746:7:34"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13701:20:34","nodeType":"YulIdentifier","src":"13701:20:34"},"nativeSrc":"13701:53:34","nodeType":"YulFunctionCall","src":"13701:53:34"},"variableNames":[{"name":"value0","nativeSrc":"13691:6:34","nodeType":"YulIdentifier","src":"13691:6:34"}]}]},{"nativeSrc":"13774:118:34","nodeType":"YulBlock","src":"13774:118:34","statements":[{"nativeSrc":"13789:16:34","nodeType":"YulVariableDeclaration","src":"13789:16:34","value":{"kind":"number","nativeSrc":"13803:2:34","nodeType":"YulLiteral","src":"13803:2:34","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"13793:6:34","nodeType":"YulTypedName","src":"13793:6:34","type":""}]},{"nativeSrc":"13819:63:34","nodeType":"YulAssignment","src":"13819:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13854:9:34","nodeType":"YulIdentifier","src":"13854:9:34"},{"name":"offset","nativeSrc":"13865:6:34","nodeType":"YulIdentifier","src":"13865:6:34"}],"functionName":{"name":"add","nativeSrc":"13850:3:34","nodeType":"YulIdentifier","src":"13850:3:34"},"nativeSrc":"13850:22:34","nodeType":"YulFunctionCall","src":"13850:22:34"},{"name":"dataEnd","nativeSrc":"13874:7:34","nodeType":"YulIdentifier","src":"13874:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13829:20:34","nodeType":"YulIdentifier","src":"13829:20:34"},"nativeSrc":"13829:53:34","nodeType":"YulFunctionCall","src":"13829:53:34"},"variableNames":[{"name":"value1","nativeSrc":"13819:6:34","nodeType":"YulIdentifier","src":"13819:6:34"}]}]},{"nativeSrc":"13902:118:34","nodeType":"YulBlock","src":"13902:118:34","statements":[{"nativeSrc":"13917:16:34","nodeType":"YulVariableDeclaration","src":"13917:16:34","value":{"kind":"number","nativeSrc":"13931:2:34","nodeType":"YulLiteral","src":"13931:2:34","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"13921:6:34","nodeType":"YulTypedName","src":"13921:6:34","type":""}]},{"nativeSrc":"13947:63:34","nodeType":"YulAssignment","src":"13947:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13982:9:34","nodeType":"YulIdentifier","src":"13982:9:34"},{"name":"offset","nativeSrc":"13993:6:34","nodeType":"YulIdentifier","src":"13993:6:34"}],"functionName":{"name":"add","nativeSrc":"13978:3:34","nodeType":"YulIdentifier","src":"13978:3:34"},"nativeSrc":"13978:22:34","nodeType":"YulFunctionCall","src":"13978:22:34"},{"name":"dataEnd","nativeSrc":"14002:7:34","nodeType":"YulIdentifier","src":"14002:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13957:20:34","nodeType":"YulIdentifier","src":"13957:20:34"},"nativeSrc":"13957:53:34","nodeType":"YulFunctionCall","src":"13957:53:34"},"variableNames":[{"name":"value2","nativeSrc":"13947:6:34","nodeType":"YulIdentifier","src":"13947:6:34"}]}]},{"nativeSrc":"14030:116:34","nodeType":"YulBlock","src":"14030:116:34","statements":[{"nativeSrc":"14045:16:34","nodeType":"YulVariableDeclaration","src":"14045:16:34","value":{"kind":"number","nativeSrc":"14059:2:34","nodeType":"YulLiteral","src":"14059:2:34","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"14049:6:34","nodeType":"YulTypedName","src":"14049:6:34","type":""}]},{"nativeSrc":"14075:61:34","nodeType":"YulAssignment","src":"14075:61:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14108:9:34","nodeType":"YulIdentifier","src":"14108:9:34"},{"name":"offset","nativeSrc":"14119:6:34","nodeType":"YulIdentifier","src":"14119:6:34"}],"functionName":{"name":"add","nativeSrc":"14104:3:34","nodeType":"YulIdentifier","src":"14104:3:34"},"nativeSrc":"14104:22:34","nodeType":"YulFunctionCall","src":"14104:22:34"},{"name":"dataEnd","nativeSrc":"14128:7:34","nodeType":"YulIdentifier","src":"14128:7:34"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"14085:18:34","nodeType":"YulIdentifier","src":"14085:18:34"},"nativeSrc":"14085:51:34","nodeType":"YulFunctionCall","src":"14085:51:34"},"variableNames":[{"name":"value3","nativeSrc":"14075:6:34","nodeType":"YulIdentifier","src":"14075:6:34"}]}]},{"nativeSrc":"14156:119:34","nodeType":"YulBlock","src":"14156:119:34","statements":[{"nativeSrc":"14171:17:34","nodeType":"YulVariableDeclaration","src":"14171:17:34","value":{"kind":"number","nativeSrc":"14185:3:34","nodeType":"YulLiteral","src":"14185:3:34","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"14175:6:34","nodeType":"YulTypedName","src":"14175:6:34","type":""}]},{"nativeSrc":"14202:63:34","nodeType":"YulAssignment","src":"14202:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14237:9:34","nodeType":"YulIdentifier","src":"14237:9:34"},{"name":"offset","nativeSrc":"14248:6:34","nodeType":"YulIdentifier","src":"14248:6:34"}],"functionName":{"name":"add","nativeSrc":"14233:3:34","nodeType":"YulIdentifier","src":"14233:3:34"},"nativeSrc":"14233:22:34","nodeType":"YulFunctionCall","src":"14233:22:34"},{"name":"dataEnd","nativeSrc":"14257:7:34","nodeType":"YulIdentifier","src":"14257:7:34"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"14212:20:34","nodeType":"YulIdentifier","src":"14212:20:34"},"nativeSrc":"14212:53:34","nodeType":"YulFunctionCall","src":"14212:53:34"},"variableNames":[{"name":"value4","nativeSrc":"14202:6:34","nodeType":"YulIdentifier","src":"14202:6:34"}]}]},{"nativeSrc":"14285:119:34","nodeType":"YulBlock","src":"14285:119:34","statements":[{"nativeSrc":"14300:17:34","nodeType":"YulVariableDeclaration","src":"14300:17:34","value":{"kind":"number","nativeSrc":"14314:3:34","nodeType":"YulLiteral","src":"14314:3:34","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"14304:6:34","nodeType":"YulTypedName","src":"14304:6:34","type":""}]},{"nativeSrc":"14331:63:34","nodeType":"YulAssignment","src":"14331:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14366:9:34","nodeType":"YulIdentifier","src":"14366:9:34"},{"name":"offset","nativeSrc":"14377:6:34","nodeType":"YulIdentifier","src":"14377:6:34"}],"functionName":{"name":"add","nativeSrc":"14362:3:34","nodeType":"YulIdentifier","src":"14362:3:34"},"nativeSrc":"14362:22:34","nodeType":"YulFunctionCall","src":"14362:22:34"},{"name":"dataEnd","nativeSrc":"14386:7:34","nodeType":"YulIdentifier","src":"14386:7:34"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"14341:20:34","nodeType":"YulIdentifier","src":"14341:20:34"},"nativeSrc":"14341:53:34","nodeType":"YulFunctionCall","src":"14341:53:34"},"variableNames":[{"name":"value5","nativeSrc":"14331:6:34","nodeType":"YulIdentifier","src":"14331:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"13358:1053:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13437:9:34","nodeType":"YulTypedName","src":"13437:9:34","type":""},{"name":"dataEnd","nativeSrc":"13448:7:34","nodeType":"YulTypedName","src":"13448:7:34","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13460:6:34","nodeType":"YulTypedName","src":"13460:6:34","type":""},{"name":"value1","nativeSrc":"13468:6:34","nodeType":"YulTypedName","src":"13468:6:34","type":""},{"name":"value2","nativeSrc":"13476:6:34","nodeType":"YulTypedName","src":"13476:6:34","type":""},{"name":"value3","nativeSrc":"13484:6:34","nodeType":"YulTypedName","src":"13484:6:34","type":""},{"name":"value4","nativeSrc":"13492:6:34","nodeType":"YulTypedName","src":"13492:6:34","type":""},{"name":"value5","nativeSrc":"13500:6:34","nodeType":"YulTypedName","src":"13500:6:34","type":""}],"src":"13358:1053:34"},{"body":{"nativeSrc":"14583:1033:34","nodeType":"YulBlock","src":"14583:1033:34","statements":[{"body":{"nativeSrc":"14630:83:34","nodeType":"YulBlock","src":"14630:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14632:77:34","nodeType":"YulIdentifier","src":"14632:77:34"},"nativeSrc":"14632:79:34","nodeType":"YulFunctionCall","src":"14632:79:34"},"nativeSrc":"14632:79:34","nodeType":"YulExpressionStatement","src":"14632:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14604:7:34","nodeType":"YulIdentifier","src":"14604:7:34"},{"name":"headStart","nativeSrc":"14613:9:34","nodeType":"YulIdentifier","src":"14613:9:34"}],"functionName":{"name":"sub","nativeSrc":"14600:3:34","nodeType":"YulIdentifier","src":"14600:3:34"},"nativeSrc":"14600:23:34","nodeType":"YulFunctionCall","src":"14600:23:34"},{"kind":"number","nativeSrc":"14625:3:34","nodeType":"YulLiteral","src":"14625:3:34","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"14596:3:34","nodeType":"YulIdentifier","src":"14596:3:34"},"nativeSrc":"14596:33:34","nodeType":"YulFunctionCall","src":"14596:33:34"},"nativeSrc":"14593:120:34","nodeType":"YulIf","src":"14593:120:34"},{"nativeSrc":"14723:117:34","nodeType":"YulBlock","src":"14723:117:34","statements":[{"nativeSrc":"14738:15:34","nodeType":"YulVariableDeclaration","src":"14738:15:34","value":{"kind":"number","nativeSrc":"14752:1:34","nodeType":"YulLiteral","src":"14752:1:34","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14742:6:34","nodeType":"YulTypedName","src":"14742:6:34","type":""}]},{"nativeSrc":"14767:63:34","nodeType":"YulAssignment","src":"14767:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14802:9:34","nodeType":"YulIdentifier","src":"14802:9:34"},{"name":"offset","nativeSrc":"14813:6:34","nodeType":"YulIdentifier","src":"14813:6:34"}],"functionName":{"name":"add","nativeSrc":"14798:3:34","nodeType":"YulIdentifier","src":"14798:3:34"},"nativeSrc":"14798:22:34","nodeType":"YulFunctionCall","src":"14798:22:34"},{"name":"dataEnd","nativeSrc":"14822:7:34","nodeType":"YulIdentifier","src":"14822:7:34"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14777:20:34","nodeType":"YulIdentifier","src":"14777:20:34"},"nativeSrc":"14777:53:34","nodeType":"YulFunctionCall","src":"14777:53:34"},"variableNames":[{"name":"value0","nativeSrc":"14767:6:34","nodeType":"YulIdentifier","src":"14767:6:34"}]}]},{"nativeSrc":"14850:118:34","nodeType":"YulBlock","src":"14850:118:34","statements":[{"nativeSrc":"14865:16:34","nodeType":"YulVariableDeclaration","src":"14865:16:34","value":{"kind":"number","nativeSrc":"14879:2:34","nodeType":"YulLiteral","src":"14879:2:34","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"14869:6:34","nodeType":"YulTypedName","src":"14869:6:34","type":""}]},{"nativeSrc":"14895:63:34","nodeType":"YulAssignment","src":"14895:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14930:9:34","nodeType":"YulIdentifier","src":"14930:9:34"},{"name":"offset","nativeSrc":"14941:6:34","nodeType":"YulIdentifier","src":"14941:6:34"}],"functionName":{"name":"add","nativeSrc":"14926:3:34","nodeType":"YulIdentifier","src":"14926:3:34"},"nativeSrc":"14926:22:34","nodeType":"YulFunctionCall","src":"14926:22:34"},{"name":"dataEnd","nativeSrc":"14950:7:34","nodeType":"YulIdentifier","src":"14950:7:34"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14905:20:34","nodeType":"YulIdentifier","src":"14905:20:34"},"nativeSrc":"14905:53:34","nodeType":"YulFunctionCall","src":"14905:53:34"},"variableNames":[{"name":"value1","nativeSrc":"14895:6:34","nodeType":"YulIdentifier","src":"14895:6:34"}]}]},{"nativeSrc":"14978:118:34","nodeType":"YulBlock","src":"14978:118:34","statements":[{"nativeSrc":"14993:16:34","nodeType":"YulVariableDeclaration","src":"14993:16:34","value":{"kind":"number","nativeSrc":"15007:2:34","nodeType":"YulLiteral","src":"15007:2:34","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"14997:6:34","nodeType":"YulTypedName","src":"14997:6:34","type":""}]},{"nativeSrc":"15023:63:34","nodeType":"YulAssignment","src":"15023:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15058:9:34","nodeType":"YulIdentifier","src":"15058:9:34"},{"name":"offset","nativeSrc":"15069:6:34","nodeType":"YulIdentifier","src":"15069:6:34"}],"functionName":{"name":"add","nativeSrc":"15054:3:34","nodeType":"YulIdentifier","src":"15054:3:34"},"nativeSrc":"15054:22:34","nodeType":"YulFunctionCall","src":"15054:22:34"},{"name":"dataEnd","nativeSrc":"15078:7:34","nodeType":"YulIdentifier","src":"15078:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15033:20:34","nodeType":"YulIdentifier","src":"15033:20:34"},"nativeSrc":"15033:53:34","nodeType":"YulFunctionCall","src":"15033:53:34"},"variableNames":[{"name":"value2","nativeSrc":"15023:6:34","nodeType":"YulIdentifier","src":"15023:6:34"}]}]},{"nativeSrc":"15106:118:34","nodeType":"YulBlock","src":"15106:118:34","statements":[{"nativeSrc":"15121:16:34","nodeType":"YulVariableDeclaration","src":"15121:16:34","value":{"kind":"number","nativeSrc":"15135:2:34","nodeType":"YulLiteral","src":"15135:2:34","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"15125:6:34","nodeType":"YulTypedName","src":"15125:6:34","type":""}]},{"nativeSrc":"15151:63:34","nodeType":"YulAssignment","src":"15151:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15186:9:34","nodeType":"YulIdentifier","src":"15186:9:34"},{"name":"offset","nativeSrc":"15197:6:34","nodeType":"YulIdentifier","src":"15197:6:34"}],"functionName":{"name":"add","nativeSrc":"15182:3:34","nodeType":"YulIdentifier","src":"15182:3:34"},"nativeSrc":"15182:22:34","nodeType":"YulFunctionCall","src":"15182:22:34"},{"name":"dataEnd","nativeSrc":"15206:7:34","nodeType":"YulIdentifier","src":"15206:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15161:20:34","nodeType":"YulIdentifier","src":"15161:20:34"},"nativeSrc":"15161:53:34","nodeType":"YulFunctionCall","src":"15161:53:34"},"variableNames":[{"name":"value3","nativeSrc":"15151:6:34","nodeType":"YulIdentifier","src":"15151:6:34"}]}]},{"nativeSrc":"15234:117:34","nodeType":"YulBlock","src":"15234:117:34","statements":[{"nativeSrc":"15249:17:34","nodeType":"YulVariableDeclaration","src":"15249:17:34","value":{"kind":"number","nativeSrc":"15263:3:34","nodeType":"YulLiteral","src":"15263:3:34","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"15253:6:34","nodeType":"YulTypedName","src":"15253:6:34","type":""}]},{"nativeSrc":"15280:61:34","nodeType":"YulAssignment","src":"15280:61:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15313:9:34","nodeType":"YulIdentifier","src":"15313:9:34"},{"name":"offset","nativeSrc":"15324:6:34","nodeType":"YulIdentifier","src":"15324:6:34"}],"functionName":{"name":"add","nativeSrc":"15309:3:34","nodeType":"YulIdentifier","src":"15309:3:34"},"nativeSrc":"15309:22:34","nodeType":"YulFunctionCall","src":"15309:22:34"},{"name":"dataEnd","nativeSrc":"15333:7:34","nodeType":"YulIdentifier","src":"15333:7:34"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"15290:18:34","nodeType":"YulIdentifier","src":"15290:18:34"},"nativeSrc":"15290:51:34","nodeType":"YulFunctionCall","src":"15290:51:34"},"variableNames":[{"name":"value4","nativeSrc":"15280:6:34","nodeType":"YulIdentifier","src":"15280:6:34"}]}]},{"nativeSrc":"15361:119:34","nodeType":"YulBlock","src":"15361:119:34","statements":[{"nativeSrc":"15376:17:34","nodeType":"YulVariableDeclaration","src":"15376:17:34","value":{"kind":"number","nativeSrc":"15390:3:34","nodeType":"YulLiteral","src":"15390:3:34","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"15380:6:34","nodeType":"YulTypedName","src":"15380:6:34","type":""}]},{"nativeSrc":"15407:63:34","nodeType":"YulAssignment","src":"15407:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15442:9:34","nodeType":"YulIdentifier","src":"15442:9:34"},{"name":"offset","nativeSrc":"15453:6:34","nodeType":"YulIdentifier","src":"15453:6:34"}],"functionName":{"name":"add","nativeSrc":"15438:3:34","nodeType":"YulIdentifier","src":"15438:3:34"},"nativeSrc":"15438:22:34","nodeType":"YulFunctionCall","src":"15438:22:34"},{"name":"dataEnd","nativeSrc":"15462:7:34","nodeType":"YulIdentifier","src":"15462:7:34"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"15417:20:34","nodeType":"YulIdentifier","src":"15417:20:34"},"nativeSrc":"15417:53:34","nodeType":"YulFunctionCall","src":"15417:53:34"},"variableNames":[{"name":"value5","nativeSrc":"15407:6:34","nodeType":"YulIdentifier","src":"15407:6:34"}]}]},{"nativeSrc":"15490:119:34","nodeType":"YulBlock","src":"15490:119:34","statements":[{"nativeSrc":"15505:17:34","nodeType":"YulVariableDeclaration","src":"15505:17:34","value":{"kind":"number","nativeSrc":"15519:3:34","nodeType":"YulLiteral","src":"15519:3:34","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"15509:6:34","nodeType":"YulTypedName","src":"15509:6:34","type":""}]},{"nativeSrc":"15536:63:34","nodeType":"YulAssignment","src":"15536:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15571:9:34","nodeType":"YulIdentifier","src":"15571:9:34"},{"name":"offset","nativeSrc":"15582:6:34","nodeType":"YulIdentifier","src":"15582:6:34"}],"functionName":{"name":"add","nativeSrc":"15567:3:34","nodeType":"YulIdentifier","src":"15567:3:34"},"nativeSrc":"15567:22:34","nodeType":"YulFunctionCall","src":"15567:22:34"},{"name":"dataEnd","nativeSrc":"15591:7:34","nodeType":"YulIdentifier","src":"15591:7:34"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"15546:20:34","nodeType":"YulIdentifier","src":"15546:20:34"},"nativeSrc":"15546:53:34","nodeType":"YulFunctionCall","src":"15546:53:34"},"variableNames":[{"name":"value6","nativeSrc":"15536:6:34","nodeType":"YulIdentifier","src":"15536:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"14417:1199:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14505:9:34","nodeType":"YulTypedName","src":"14505:9:34","type":""},{"name":"dataEnd","nativeSrc":"14516:7:34","nodeType":"YulTypedName","src":"14516:7:34","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14528:6:34","nodeType":"YulTypedName","src":"14528:6:34","type":""},{"name":"value1","nativeSrc":"14536:6:34","nodeType":"YulTypedName","src":"14536:6:34","type":""},{"name":"value2","nativeSrc":"14544:6:34","nodeType":"YulTypedName","src":"14544:6:34","type":""},{"name":"value3","nativeSrc":"14552:6:34","nodeType":"YulTypedName","src":"14552:6:34","type":""},{"name":"value4","nativeSrc":"14560:6:34","nodeType":"YulTypedName","src":"14560:6:34","type":""},{"name":"value5","nativeSrc":"14568:6:34","nodeType":"YulTypedName","src":"14568:6:34","type":""},{"name":"value6","nativeSrc":"14576:6:34","nodeType":"YulTypedName","src":"14576:6:34","type":""}],"src":"14417:1199:34"},{"body":{"nativeSrc":"15705:391:34","nodeType":"YulBlock","src":"15705:391:34","statements":[{"body":{"nativeSrc":"15751:83:34","nodeType":"YulBlock","src":"15751:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15753:77:34","nodeType":"YulIdentifier","src":"15753:77:34"},"nativeSrc":"15753:79:34","nodeType":"YulFunctionCall","src":"15753:79:34"},"nativeSrc":"15753:79:34","nodeType":"YulExpressionStatement","src":"15753:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15726:7:34","nodeType":"YulIdentifier","src":"15726:7:34"},{"name":"headStart","nativeSrc":"15735:9:34","nodeType":"YulIdentifier","src":"15735:9:34"}],"functionName":{"name":"sub","nativeSrc":"15722:3:34","nodeType":"YulIdentifier","src":"15722:3:34"},"nativeSrc":"15722:23:34","nodeType":"YulFunctionCall","src":"15722:23:34"},{"kind":"number","nativeSrc":"15747:2:34","nodeType":"YulLiteral","src":"15747:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"15718:3:34","nodeType":"YulIdentifier","src":"15718:3:34"},"nativeSrc":"15718:32:34","nodeType":"YulFunctionCall","src":"15718:32:34"},"nativeSrc":"15715:119:34","nodeType":"YulIf","src":"15715:119:34"},{"nativeSrc":"15844:117:34","nodeType":"YulBlock","src":"15844:117:34","statements":[{"nativeSrc":"15859:15:34","nodeType":"YulVariableDeclaration","src":"15859:15:34","value":{"kind":"number","nativeSrc":"15873:1:34","nodeType":"YulLiteral","src":"15873:1:34","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15863:6:34","nodeType":"YulTypedName","src":"15863:6:34","type":""}]},{"nativeSrc":"15888:63:34","nodeType":"YulAssignment","src":"15888:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15923:9:34","nodeType":"YulIdentifier","src":"15923:9:34"},{"name":"offset","nativeSrc":"15934:6:34","nodeType":"YulIdentifier","src":"15934:6:34"}],"functionName":{"name":"add","nativeSrc":"15919:3:34","nodeType":"YulIdentifier","src":"15919:3:34"},"nativeSrc":"15919:22:34","nodeType":"YulFunctionCall","src":"15919:22:34"},{"name":"dataEnd","nativeSrc":"15943:7:34","nodeType":"YulIdentifier","src":"15943:7:34"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15898:20:34","nodeType":"YulIdentifier","src":"15898:20:34"},"nativeSrc":"15898:53:34","nodeType":"YulFunctionCall","src":"15898:53:34"},"variableNames":[{"name":"value0","nativeSrc":"15888:6:34","nodeType":"YulIdentifier","src":"15888:6:34"}]}]},{"nativeSrc":"15971:118:34","nodeType":"YulBlock","src":"15971:118:34","statements":[{"nativeSrc":"15986:16:34","nodeType":"YulVariableDeclaration","src":"15986:16:34","value":{"kind":"number","nativeSrc":"16000:2:34","nodeType":"YulLiteral","src":"16000:2:34","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15990:6:34","nodeType":"YulTypedName","src":"15990:6:34","type":""}]},{"nativeSrc":"16016:63:34","nodeType":"YulAssignment","src":"16016:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16051:9:34","nodeType":"YulIdentifier","src":"16051:9:34"},{"name":"offset","nativeSrc":"16062:6:34","nodeType":"YulIdentifier","src":"16062:6:34"}],"functionName":{"name":"add","nativeSrc":"16047:3:34","nodeType":"YulIdentifier","src":"16047:3:34"},"nativeSrc":"16047:22:34","nodeType":"YulFunctionCall","src":"16047:22:34"},{"name":"dataEnd","nativeSrc":"16071:7:34","nodeType":"YulIdentifier","src":"16071:7:34"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"16026:20:34","nodeType":"YulIdentifier","src":"16026:20:34"},"nativeSrc":"16026:53:34","nodeType":"YulFunctionCall","src":"16026:53:34"},"variableNames":[{"name":"value1","nativeSrc":"16016:6:34","nodeType":"YulIdentifier","src":"16016:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"15622:474:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15667:9:34","nodeType":"YulTypedName","src":"15667:9:34","type":""},{"name":"dataEnd","nativeSrc":"15678:7:34","nodeType":"YulTypedName","src":"15678:7:34","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15690:6:34","nodeType":"YulTypedName","src":"15690:6:34","type":""},{"name":"value1","nativeSrc":"15698:6:34","nodeType":"YulTypedName","src":"15698:6:34","type":""}],"src":"15622:474:34"},{"body":{"nativeSrc":"16144:78:34","nodeType":"YulBlock","src":"16144:78:34","statements":[{"body":{"nativeSrc":"16200:16:34","nodeType":"YulBlock","src":"16200:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16209:1:34","nodeType":"YulLiteral","src":"16209:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"16212:1:34","nodeType":"YulLiteral","src":"16212:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16202:6:34","nodeType":"YulIdentifier","src":"16202:6:34"},"nativeSrc":"16202:12:34","nodeType":"YulFunctionCall","src":"16202:12:34"},"nativeSrc":"16202:12:34","nodeType":"YulExpressionStatement","src":"16202:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16167:5:34","nodeType":"YulIdentifier","src":"16167:5:34"},{"arguments":[{"name":"value","nativeSrc":"16191:5:34","nodeType":"YulIdentifier","src":"16191:5:34"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"16174:16:34","nodeType":"YulIdentifier","src":"16174:16:34"},"nativeSrc":"16174:23:34","nodeType":"YulFunctionCall","src":"16174:23:34"}],"functionName":{"name":"eq","nativeSrc":"16164:2:34","nodeType":"YulIdentifier","src":"16164:2:34"},"nativeSrc":"16164:34:34","nodeType":"YulFunctionCall","src":"16164:34:34"}],"functionName":{"name":"iszero","nativeSrc":"16157:6:34","nodeType":"YulIdentifier","src":"16157:6:34"},"nativeSrc":"16157:42:34","nodeType":"YulFunctionCall","src":"16157:42:34"},"nativeSrc":"16154:62:34","nodeType":"YulIf","src":"16154:62:34"}]},"name":"validator_revert_t_uint32","nativeSrc":"16102:120:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16137:5:34","nodeType":"YulTypedName","src":"16137:5:34","type":""}],"src":"16102:120:34"},{"body":{"nativeSrc":"16279:86:34","nodeType":"YulBlock","src":"16279:86:34","statements":[{"nativeSrc":"16289:29:34","nodeType":"YulAssignment","src":"16289:29:34","value":{"arguments":[{"name":"offset","nativeSrc":"16311:6:34","nodeType":"YulIdentifier","src":"16311:6:34"}],"functionName":{"name":"calldataload","nativeSrc":"16298:12:34","nodeType":"YulIdentifier","src":"16298:12:34"},"nativeSrc":"16298:20:34","nodeType":"YulFunctionCall","src":"16298:20:34"},"variableNames":[{"name":"value","nativeSrc":"16289:5:34","nodeType":"YulIdentifier","src":"16289:5:34"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"16353:5:34","nodeType":"YulIdentifier","src":"16353:5:34"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"16327:25:34","nodeType":"YulIdentifier","src":"16327:25:34"},"nativeSrc":"16327:32:34","nodeType":"YulFunctionCall","src":"16327:32:34"},"nativeSrc":"16327:32:34","nodeType":"YulExpressionStatement","src":"16327:32:34"}]},"name":"abi_decode_t_uint32","nativeSrc":"16228:137:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"16257:6:34","nodeType":"YulTypedName","src":"16257:6:34","type":""},{"name":"end","nativeSrc":"16265:3:34","nodeType":"YulTypedName","src":"16265:3:34","type":""}],"returnVariables":[{"name":"value","nativeSrc":"16273:5:34","nodeType":"YulTypedName","src":"16273:5:34","type":""}],"src":"16228:137:34"},{"body":{"nativeSrc":"16453:390:34","nodeType":"YulBlock","src":"16453:390:34","statements":[{"body":{"nativeSrc":"16499:83:34","nodeType":"YulBlock","src":"16499:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"16501:77:34","nodeType":"YulIdentifier","src":"16501:77:34"},"nativeSrc":"16501:79:34","nodeType":"YulFunctionCall","src":"16501:79:34"},"nativeSrc":"16501:79:34","nodeType":"YulExpressionStatement","src":"16501:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16474:7:34","nodeType":"YulIdentifier","src":"16474:7:34"},{"name":"headStart","nativeSrc":"16483:9:34","nodeType":"YulIdentifier","src":"16483:9:34"}],"functionName":{"name":"sub","nativeSrc":"16470:3:34","nodeType":"YulIdentifier","src":"16470:3:34"},"nativeSrc":"16470:23:34","nodeType":"YulFunctionCall","src":"16470:23:34"},{"kind":"number","nativeSrc":"16495:2:34","nodeType":"YulLiteral","src":"16495:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"16466:3:34","nodeType":"YulIdentifier","src":"16466:3:34"},"nativeSrc":"16466:32:34","nodeType":"YulFunctionCall","src":"16466:32:34"},"nativeSrc":"16463:119:34","nodeType":"YulIf","src":"16463:119:34"},{"nativeSrc":"16592:117:34","nodeType":"YulBlock","src":"16592:117:34","statements":[{"nativeSrc":"16607:15:34","nodeType":"YulVariableDeclaration","src":"16607:15:34","value":{"kind":"number","nativeSrc":"16621:1:34","nodeType":"YulLiteral","src":"16621:1:34","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"16611:6:34","nodeType":"YulTypedName","src":"16611:6:34","type":""}]},{"nativeSrc":"16636:63:34","nodeType":"YulAssignment","src":"16636:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16671:9:34","nodeType":"YulIdentifier","src":"16671:9:34"},{"name":"offset","nativeSrc":"16682:6:34","nodeType":"YulIdentifier","src":"16682:6:34"}],"functionName":{"name":"add","nativeSrc":"16667:3:34","nodeType":"YulIdentifier","src":"16667:3:34"},"nativeSrc":"16667:22:34","nodeType":"YulFunctionCall","src":"16667:22:34"},{"name":"dataEnd","nativeSrc":"16691:7:34","nodeType":"YulIdentifier","src":"16691:7:34"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"16646:20:34","nodeType":"YulIdentifier","src":"16646:20:34"},"nativeSrc":"16646:53:34","nodeType":"YulFunctionCall","src":"16646:53:34"},"variableNames":[{"name":"value0","nativeSrc":"16636:6:34","nodeType":"YulIdentifier","src":"16636:6:34"}]}]},{"nativeSrc":"16719:117:34","nodeType":"YulBlock","src":"16719:117:34","statements":[{"nativeSrc":"16734:16:34","nodeType":"YulVariableDeclaration","src":"16734:16:34","value":{"kind":"number","nativeSrc":"16748:2:34","nodeType":"YulLiteral","src":"16748:2:34","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"16738:6:34","nodeType":"YulTypedName","src":"16738:6:34","type":""}]},{"nativeSrc":"16764:62:34","nodeType":"YulAssignment","src":"16764:62:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16798:9:34","nodeType":"YulIdentifier","src":"16798:9:34"},{"name":"offset","nativeSrc":"16809:6:34","nodeType":"YulIdentifier","src":"16809:6:34"}],"functionName":{"name":"add","nativeSrc":"16794:3:34","nodeType":"YulIdentifier","src":"16794:3:34"},"nativeSrc":"16794:22:34","nodeType":"YulFunctionCall","src":"16794:22:34"},{"name":"dataEnd","nativeSrc":"16818:7:34","nodeType":"YulIdentifier","src":"16818:7:34"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"16774:19:34","nodeType":"YulIdentifier","src":"16774:19:34"},"nativeSrc":"16774:52:34","nodeType":"YulFunctionCall","src":"16774:52:34"},"variableNames":[{"name":"value1","nativeSrc":"16764:6:34","nodeType":"YulIdentifier","src":"16764:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nativeSrc":"16371:472:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16415:9:34","nodeType":"YulTypedName","src":"16415:9:34","type":""},{"name":"dataEnd","nativeSrc":"16426:7:34","nodeType":"YulTypedName","src":"16426:7:34","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16438:6:34","nodeType":"YulTypedName","src":"16438:6:34","type":""},{"name":"value1","nativeSrc":"16446:6:34","nodeType":"YulTypedName","src":"16446:6:34","type":""}],"src":"16371:472:34"},{"body":{"nativeSrc":"16902:52:34","nodeType":"YulBlock","src":"16902:52:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16919:3:34","nodeType":"YulIdentifier","src":"16919:3:34"},{"arguments":[{"name":"value","nativeSrc":"16941:5:34","nodeType":"YulIdentifier","src":"16941:5:34"}],"functionName":{"name":"cleanup_t_uint48","nativeSrc":"16924:16:34","nodeType":"YulIdentifier","src":"16924:16:34"},"nativeSrc":"16924:23:34","nodeType":"YulFunctionCall","src":"16924:23:34"}],"functionName":{"name":"mstore","nativeSrc":"16912:6:34","nodeType":"YulIdentifier","src":"16912:6:34"},"nativeSrc":"16912:36:34","nodeType":"YulFunctionCall","src":"16912:36:34"},"nativeSrc":"16912:36:34","nodeType":"YulExpressionStatement","src":"16912:36:34"}]},"name":"abi_encode_t_uint48_to_t_uint48","nativeSrc":"16849:105:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16890:5:34","nodeType":"YulTypedName","src":"16890:5:34","type":""},{"name":"pos","nativeSrc":"16897:3:34","nodeType":"YulTypedName","src":"16897:3:34","type":""}],"src":"16849:105:34"},{"body":{"nativeSrc":"17005:93:34","nodeType":"YulBlock","src":"17005:93:34","statements":[{"nativeSrc":"17015:77:34","nodeType":"YulAssignment","src":"17015:77:34","value":{"arguments":[{"name":"value","nativeSrc":"17030:5:34","nodeType":"YulIdentifier","src":"17030:5:34"},{"kind":"number","nativeSrc":"17037:54:34","nodeType":"YulLiteral","src":"17037:54:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"17026:3:34","nodeType":"YulIdentifier","src":"17026:3:34"},"nativeSrc":"17026:66:34","nodeType":"YulFunctionCall","src":"17026:66:34"},"variableNames":[{"name":"cleaned","nativeSrc":"17015:7:34","nodeType":"YulIdentifier","src":"17015:7:34"}]}]},"name":"cleanup_t_uint208","nativeSrc":"16960:138:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16987:5:34","nodeType":"YulTypedName","src":"16987:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"16997:7:34","nodeType":"YulTypedName","src":"16997:7:34","type":""}],"src":"16960:138:34"},{"body":{"nativeSrc":"17159:53:34","nodeType":"YulBlock","src":"17159:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"17176:3:34","nodeType":"YulIdentifier","src":"17176:3:34"},{"arguments":[{"name":"value","nativeSrc":"17199:5:34","nodeType":"YulIdentifier","src":"17199:5:34"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"17181:17:34","nodeType":"YulIdentifier","src":"17181:17:34"},"nativeSrc":"17181:24:34","nodeType":"YulFunctionCall","src":"17181:24:34"}],"functionName":{"name":"mstore","nativeSrc":"17169:6:34","nodeType":"YulIdentifier","src":"17169:6:34"},"nativeSrc":"17169:37:34","nodeType":"YulFunctionCall","src":"17169:37:34"},"nativeSrc":"17169:37:34","nodeType":"YulExpressionStatement","src":"17169:37:34"}]},"name":"abi_encode_t_uint208_to_t_uint208","nativeSrc":"17104:108:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17147:5:34","nodeType":"YulTypedName","src":"17147:5:34","type":""},{"name":"pos","nativeSrc":"17154:3:34","nodeType":"YulTypedName","src":"17154:3:34","type":""}],"src":"17104:108:34"},{"body":{"nativeSrc":"17422:391:34","nodeType":"YulBlock","src":"17422:391:34","statements":[{"nativeSrc":"17432:26:34","nodeType":"YulVariableDeclaration","src":"17432:26:34","value":{"arguments":[{"name":"pos","nativeSrc":"17448:3:34","nodeType":"YulIdentifier","src":"17448:3:34"},{"kind":"number","nativeSrc":"17453:4:34","nodeType":"YulLiteral","src":"17453:4:34","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"17444:3:34","nodeType":"YulIdentifier","src":"17444:3:34"},"nativeSrc":"17444:14:34","nodeType":"YulFunctionCall","src":"17444:14:34"},"variables":[{"name":"tail","nativeSrc":"17436:4:34","nodeType":"YulTypedName","src":"17436:4:34","type":""}]},{"nativeSrc":"17468:162:34","nodeType":"YulBlock","src":"17468:162:34","statements":[{"nativeSrc":"17503:43:34","nodeType":"YulVariableDeclaration","src":"17503:43:34","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17533:5:34","nodeType":"YulIdentifier","src":"17533:5:34"},{"kind":"number","nativeSrc":"17540:4:34","nodeType":"YulLiteral","src":"17540:4:34","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"17529:3:34","nodeType":"YulIdentifier","src":"17529:3:34"},"nativeSrc":"17529:16:34","nodeType":"YulFunctionCall","src":"17529:16:34"}],"functionName":{"name":"mload","nativeSrc":"17523:5:34","nodeType":"YulIdentifier","src":"17523:5:34"},"nativeSrc":"17523:23:34","nodeType":"YulFunctionCall","src":"17523:23:34"},"variables":[{"name":"memberValue0","nativeSrc":"17507:12:34","nodeType":"YulTypedName","src":"17507:12:34","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"17591:12:34","nodeType":"YulIdentifier","src":"17591:12:34"},{"arguments":[{"name":"pos","nativeSrc":"17609:3:34","nodeType":"YulIdentifier","src":"17609:3:34"},{"kind":"number","nativeSrc":"17614:4:34","nodeType":"YulLiteral","src":"17614:4:34","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"17605:3:34","nodeType":"YulIdentifier","src":"17605:3:34"},"nativeSrc":"17605:14:34","nodeType":"YulFunctionCall","src":"17605:14:34"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48","nativeSrc":"17559:31:34","nodeType":"YulIdentifier","src":"17559:31:34"},"nativeSrc":"17559:61:34","nodeType":"YulFunctionCall","src":"17559:61:34"},"nativeSrc":"17559:61:34","nodeType":"YulExpressionStatement","src":"17559:61:34"}]},{"nativeSrc":"17640:166:34","nodeType":"YulBlock","src":"17640:166:34","statements":[{"nativeSrc":"17677:43:34","nodeType":"YulVariableDeclaration","src":"17677:43:34","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17707:5:34","nodeType":"YulIdentifier","src":"17707:5:34"},{"kind":"number","nativeSrc":"17714:4:34","nodeType":"YulLiteral","src":"17714:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17703:3:34","nodeType":"YulIdentifier","src":"17703:3:34"},"nativeSrc":"17703:16:34","nodeType":"YulFunctionCall","src":"17703:16:34"}],"functionName":{"name":"mload","nativeSrc":"17697:5:34","nodeType":"YulIdentifier","src":"17697:5:34"},"nativeSrc":"17697:23:34","nodeType":"YulFunctionCall","src":"17697:23:34"},"variables":[{"name":"memberValue0","nativeSrc":"17681:12:34","nodeType":"YulTypedName","src":"17681:12:34","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"17767:12:34","nodeType":"YulIdentifier","src":"17767:12:34"},{"arguments":[{"name":"pos","nativeSrc":"17785:3:34","nodeType":"YulIdentifier","src":"17785:3:34"},{"kind":"number","nativeSrc":"17790:4:34","nodeType":"YulLiteral","src":"17790:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17781:3:34","nodeType":"YulIdentifier","src":"17781:3:34"},"nativeSrc":"17781:14:34","nodeType":"YulFunctionCall","src":"17781:14:34"}],"functionName":{"name":"abi_encode_t_uint208_to_t_uint208","nativeSrc":"17733:33:34","nodeType":"YulIdentifier","src":"17733:33:34"},"nativeSrc":"17733:63:34","nodeType":"YulFunctionCall","src":"17733:63:34"},"nativeSrc":"17733:63:34","nodeType":"YulExpressionStatement","src":"17733:63:34"}]}]},"name":"abi_encode_t_struct$_Checkpoint208_$7923_memory_ptr_to_t_struct$_Checkpoint208_$7923_memory_ptr_fromStack","nativeSrc":"17294:519:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17409:5:34","nodeType":"YulTypedName","src":"17409:5:34","type":""},{"name":"pos","nativeSrc":"17416:3:34","nodeType":"YulTypedName","src":"17416:3:34","type":""}],"src":"17294:519:34"},{"body":{"nativeSrc":"17979:186:34","nodeType":"YulBlock","src":"17979:186:34","statements":[{"nativeSrc":"17989:26:34","nodeType":"YulAssignment","src":"17989:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"18001:9:34","nodeType":"YulIdentifier","src":"18001:9:34"},{"kind":"number","nativeSrc":"18012:2:34","nodeType":"YulLiteral","src":"18012:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17997:3:34","nodeType":"YulIdentifier","src":"17997:3:34"},"nativeSrc":"17997:18:34","nodeType":"YulFunctionCall","src":"17997:18:34"},"variableNames":[{"name":"tail","nativeSrc":"17989:4:34","nodeType":"YulIdentifier","src":"17989:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18131:6:34","nodeType":"YulIdentifier","src":"18131:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"18144:9:34","nodeType":"YulIdentifier","src":"18144:9:34"},{"kind":"number","nativeSrc":"18155:1:34","nodeType":"YulLiteral","src":"18155:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18140:3:34","nodeType":"YulIdentifier","src":"18140:3:34"},"nativeSrc":"18140:17:34","nodeType":"YulFunctionCall","src":"18140:17:34"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint208_$7923_memory_ptr_to_t_struct$_Checkpoint208_$7923_memory_ptr_fromStack","nativeSrc":"18025:105:34","nodeType":"YulIdentifier","src":"18025:105:34"},"nativeSrc":"18025:133:34","nodeType":"YulFunctionCall","src":"18025:133:34"},"nativeSrc":"18025:133:34","nodeType":"YulExpressionStatement","src":"18025:133:34"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint208_$7923_memory_ptr__to_t_struct$_Checkpoint208_$7923_memory_ptr__fromStack_reversed","nativeSrc":"17819:346:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17951:9:34","nodeType":"YulTypedName","src":"17951:9:34","type":""},{"name":"value0","nativeSrc":"17963:6:34","nodeType":"YulTypedName","src":"17963:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17974:4:34","nodeType":"YulTypedName","src":"17974:4:34","type":""}],"src":"17819:346:34"},{"body":{"nativeSrc":"18199:152:34","nodeType":"YulBlock","src":"18199:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18216:1:34","nodeType":"YulLiteral","src":"18216:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"18219:77:34","nodeType":"YulLiteral","src":"18219:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"18209:6:34","nodeType":"YulIdentifier","src":"18209:6:34"},"nativeSrc":"18209:88:34","nodeType":"YulFunctionCall","src":"18209:88:34"},"nativeSrc":"18209:88:34","nodeType":"YulExpressionStatement","src":"18209:88:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18313:1:34","nodeType":"YulLiteral","src":"18313:1:34","type":"","value":"4"},{"kind":"number","nativeSrc":"18316:4:34","nodeType":"YulLiteral","src":"18316:4:34","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"18306:6:34","nodeType":"YulIdentifier","src":"18306:6:34"},"nativeSrc":"18306:15:34","nodeType":"YulFunctionCall","src":"18306:15:34"},"nativeSrc":"18306:15:34","nodeType":"YulExpressionStatement","src":"18306:15:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18337:1:34","nodeType":"YulLiteral","src":"18337:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"18340:4:34","nodeType":"YulLiteral","src":"18340:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"18330:6:34","nodeType":"YulIdentifier","src":"18330:6:34"},"nativeSrc":"18330:15:34","nodeType":"YulFunctionCall","src":"18330:15:34"},"nativeSrc":"18330:15:34","nodeType":"YulExpressionStatement","src":"18330:15:34"}]},"name":"panic_error_0x22","nativeSrc":"18171:180:34","nodeType":"YulFunctionDefinition","src":"18171:180:34"},{"body":{"nativeSrc":"18408:269:34","nodeType":"YulBlock","src":"18408:269:34","statements":[{"nativeSrc":"18418:22:34","nodeType":"YulAssignment","src":"18418:22:34","value":{"arguments":[{"name":"data","nativeSrc":"18432:4:34","nodeType":"YulIdentifier","src":"18432:4:34"},{"kind":"number","nativeSrc":"18438:1:34","nodeType":"YulLiteral","src":"18438:1:34","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"18428:3:34","nodeType":"YulIdentifier","src":"18428:3:34"},"nativeSrc":"18428:12:34","nodeType":"YulFunctionCall","src":"18428:12:34"},"variableNames":[{"name":"length","nativeSrc":"18418:6:34","nodeType":"YulIdentifier","src":"18418:6:34"}]},{"nativeSrc":"18449:38:34","nodeType":"YulVariableDeclaration","src":"18449:38:34","value":{"arguments":[{"name":"data","nativeSrc":"18479:4:34","nodeType":"YulIdentifier","src":"18479:4:34"},{"kind":"number","nativeSrc":"18485:1:34","nodeType":"YulLiteral","src":"18485:1:34","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"18475:3:34","nodeType":"YulIdentifier","src":"18475:3:34"},"nativeSrc":"18475:12:34","nodeType":"YulFunctionCall","src":"18475:12:34"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"18453:18:34","nodeType":"YulTypedName","src":"18453:18:34","type":""}]},{"body":{"nativeSrc":"18526:51:34","nodeType":"YulBlock","src":"18526:51:34","statements":[{"nativeSrc":"18540:27:34","nodeType":"YulAssignment","src":"18540:27:34","value":{"arguments":[{"name":"length","nativeSrc":"18554:6:34","nodeType":"YulIdentifier","src":"18554:6:34"},{"kind":"number","nativeSrc":"18562:4:34","nodeType":"YulLiteral","src":"18562:4:34","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"18550:3:34","nodeType":"YulIdentifier","src":"18550:3:34"},"nativeSrc":"18550:17:34","nodeType":"YulFunctionCall","src":"18550:17:34"},"variableNames":[{"name":"length","nativeSrc":"18540:6:34","nodeType":"YulIdentifier","src":"18540:6:34"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"18506:18:34","nodeType":"YulIdentifier","src":"18506:18:34"}],"functionName":{"name":"iszero","nativeSrc":"18499:6:34","nodeType":"YulIdentifier","src":"18499:6:34"},"nativeSrc":"18499:26:34","nodeType":"YulFunctionCall","src":"18499:26:34"},"nativeSrc":"18496:81:34","nodeType":"YulIf","src":"18496:81:34"},{"body":{"nativeSrc":"18629:42:34","nodeType":"YulBlock","src":"18629:42:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"18643:16:34","nodeType":"YulIdentifier","src":"18643:16:34"},"nativeSrc":"18643:18:34","nodeType":"YulFunctionCall","src":"18643:18:34"},"nativeSrc":"18643:18:34","nodeType":"YulExpressionStatement","src":"18643:18:34"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"18593:18:34","nodeType":"YulIdentifier","src":"18593:18:34"},{"arguments":[{"name":"length","nativeSrc":"18616:6:34","nodeType":"YulIdentifier","src":"18616:6:34"},{"kind":"number","nativeSrc":"18624:2:34","nodeType":"YulLiteral","src":"18624:2:34","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"18613:2:34","nodeType":"YulIdentifier","src":"18613:2:34"},"nativeSrc":"18613:14:34","nodeType":"YulFunctionCall","src":"18613:14:34"}],"functionName":{"name":"eq","nativeSrc":"18590:2:34","nodeType":"YulIdentifier","src":"18590:2:34"},"nativeSrc":"18590:38:34","nodeType":"YulFunctionCall","src":"18590:38:34"},"nativeSrc":"18587:84:34","nodeType":"YulIf","src":"18587:84:34"}]},"name":"extract_byte_array_length","nativeSrc":"18357:320:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"18392:4:34","nodeType":"YulTypedName","src":"18392:4:34","type":""}],"returnVariables":[{"name":"length","nativeSrc":"18401:6:34","nodeType":"YulTypedName","src":"18401:6:34","type":""}],"src":"18357:320:34"},{"body":{"nativeSrc":"18807:204:34","nodeType":"YulBlock","src":"18807:204:34","statements":[{"nativeSrc":"18817:26:34","nodeType":"YulAssignment","src":"18817:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"18829:9:34","nodeType":"YulIdentifier","src":"18829:9:34"},{"kind":"number","nativeSrc":"18840:2:34","nodeType":"YulLiteral","src":"18840:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18825:3:34","nodeType":"YulIdentifier","src":"18825:3:34"},"nativeSrc":"18825:18:34","nodeType":"YulFunctionCall","src":"18825:18:34"},"variableNames":[{"name":"tail","nativeSrc":"18817:4:34","nodeType":"YulIdentifier","src":"18817:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18897:6:34","nodeType":"YulIdentifier","src":"18897:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"18910:9:34","nodeType":"YulIdentifier","src":"18910:9:34"},{"kind":"number","nativeSrc":"18921:1:34","nodeType":"YulLiteral","src":"18921:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18906:3:34","nodeType":"YulIdentifier","src":"18906:3:34"},"nativeSrc":"18906:17:34","nodeType":"YulFunctionCall","src":"18906:17:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18853:43:34","nodeType":"YulIdentifier","src":"18853:43:34"},"nativeSrc":"18853:71:34","nodeType":"YulFunctionCall","src":"18853:71:34"},"nativeSrc":"18853:71:34","nodeType":"YulExpressionStatement","src":"18853:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"18976:6:34","nodeType":"YulIdentifier","src":"18976:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"18989:9:34","nodeType":"YulIdentifier","src":"18989:9:34"},{"kind":"number","nativeSrc":"19000:2:34","nodeType":"YulLiteral","src":"19000:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18985:3:34","nodeType":"YulIdentifier","src":"18985:3:34"},"nativeSrc":"18985:18:34","nodeType":"YulFunctionCall","src":"18985:18:34"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nativeSrc":"18934:41:34","nodeType":"YulIdentifier","src":"18934:41:34"},"nativeSrc":"18934:70:34","nodeType":"YulFunctionCall","src":"18934:70:34"},"nativeSrc":"18934:70:34","nodeType":"YulExpressionStatement","src":"18934:70:34"}]},"name":"abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed","nativeSrc":"18683:328:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18771:9:34","nodeType":"YulTypedName","src":"18771:9:34","type":""},{"name":"value1","nativeSrc":"18783:6:34","nodeType":"YulTypedName","src":"18783:6:34","type":""},{"name":"value0","nativeSrc":"18791:6:34","nodeType":"YulTypedName","src":"18791:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18802:4:34","nodeType":"YulTypedName","src":"18802:4:34","type":""}],"src":"18683:328:34"},{"body":{"nativeSrc":"19112:73:34","nodeType":"YulBlock","src":"19112:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"19129:3:34","nodeType":"YulIdentifier","src":"19129:3:34"},{"name":"length","nativeSrc":"19134:6:34","nodeType":"YulIdentifier","src":"19134:6:34"}],"functionName":{"name":"mstore","nativeSrc":"19122:6:34","nodeType":"YulIdentifier","src":"19122:6:34"},"nativeSrc":"19122:19:34","nodeType":"YulFunctionCall","src":"19122:19:34"},"nativeSrc":"19122:19:34","nodeType":"YulExpressionStatement","src":"19122:19:34"},{"nativeSrc":"19150:29:34","nodeType":"YulAssignment","src":"19150:29:34","value":{"arguments":[{"name":"pos","nativeSrc":"19169:3:34","nodeType":"YulIdentifier","src":"19169:3:34"},{"kind":"number","nativeSrc":"19174:4:34","nodeType":"YulLiteral","src":"19174:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19165:3:34","nodeType":"YulIdentifier","src":"19165:3:34"},"nativeSrc":"19165:14:34","nodeType":"YulFunctionCall","src":"19165:14:34"},"variableNames":[{"name":"updated_pos","nativeSrc":"19150:11:34","nodeType":"YulIdentifier","src":"19150:11:34"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"19017:168:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19084:3:34","nodeType":"YulTypedName","src":"19084:3:34","type":""},{"name":"length","nativeSrc":"19089:6:34","nodeType":"YulTypedName","src":"19089:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"19100:11:34","nodeType":"YulTypedName","src":"19100:11:34","type":""}],"src":"19017:168:34"},{"body":{"nativeSrc":"19255:82:34","nodeType":"YulBlock","src":"19255:82:34","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"19278:3:34","nodeType":"YulIdentifier","src":"19278:3:34"},{"name":"src","nativeSrc":"19283:3:34","nodeType":"YulIdentifier","src":"19283:3:34"},{"name":"length","nativeSrc":"19288:6:34","nodeType":"YulIdentifier","src":"19288:6:34"}],"functionName":{"name":"calldatacopy","nativeSrc":"19265:12:34","nodeType":"YulIdentifier","src":"19265:12:34"},"nativeSrc":"19265:30:34","nodeType":"YulFunctionCall","src":"19265:30:34"},"nativeSrc":"19265:30:34","nodeType":"YulExpressionStatement","src":"19265:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"19315:3:34","nodeType":"YulIdentifier","src":"19315:3:34"},{"name":"length","nativeSrc":"19320:6:34","nodeType":"YulIdentifier","src":"19320:6:34"}],"functionName":{"name":"add","nativeSrc":"19311:3:34","nodeType":"YulIdentifier","src":"19311:3:34"},"nativeSrc":"19311:16:34","nodeType":"YulFunctionCall","src":"19311:16:34"},{"kind":"number","nativeSrc":"19329:1:34","nodeType":"YulLiteral","src":"19329:1:34","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"19304:6:34","nodeType":"YulIdentifier","src":"19304:6:34"},"nativeSrc":"19304:27:34","nodeType":"YulFunctionCall","src":"19304:27:34"},"nativeSrc":"19304:27:34","nodeType":"YulExpressionStatement","src":"19304:27:34"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"19191:146:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"19237:3:34","nodeType":"YulTypedName","src":"19237:3:34","type":""},{"name":"dst","nativeSrc":"19242:3:34","nodeType":"YulTypedName","src":"19242:3:34","type":""},{"name":"length","nativeSrc":"19247:6:34","nodeType":"YulTypedName","src":"19247:6:34","type":""}],"src":"19191:146:34"},{"body":{"nativeSrc":"19465:214:34","nodeType":"YulBlock","src":"19465:214:34","statements":[{"nativeSrc":"19475:77:34","nodeType":"YulAssignment","src":"19475:77:34","value":{"arguments":[{"name":"pos","nativeSrc":"19540:3:34","nodeType":"YulIdentifier","src":"19540:3:34"},{"name":"length","nativeSrc":"19545:6:34","nodeType":"YulIdentifier","src":"19545:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"19482:57:34","nodeType":"YulIdentifier","src":"19482:57:34"},"nativeSrc":"19482:70:34","nodeType":"YulFunctionCall","src":"19482:70:34"},"variableNames":[{"name":"pos","nativeSrc":"19475:3:34","nodeType":"YulIdentifier","src":"19475:3:34"}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"19599:5:34","nodeType":"YulIdentifier","src":"19599:5:34"},{"name":"pos","nativeSrc":"19606:3:34","nodeType":"YulIdentifier","src":"19606:3:34"},{"name":"length","nativeSrc":"19611:6:34","nodeType":"YulIdentifier","src":"19611:6:34"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"19562:36:34","nodeType":"YulIdentifier","src":"19562:36:34"},"nativeSrc":"19562:56:34","nodeType":"YulFunctionCall","src":"19562:56:34"},"nativeSrc":"19562:56:34","nodeType":"YulExpressionStatement","src":"19562:56:34"},{"nativeSrc":"19627:46:34","nodeType":"YulAssignment","src":"19627:46:34","value":{"arguments":[{"name":"pos","nativeSrc":"19638:3:34","nodeType":"YulIdentifier","src":"19638:3:34"},{"arguments":[{"name":"length","nativeSrc":"19665:6:34","nodeType":"YulIdentifier","src":"19665:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"19643:21:34","nodeType":"YulIdentifier","src":"19643:21:34"},"nativeSrc":"19643:29:34","nodeType":"YulFunctionCall","src":"19643:29:34"}],"functionName":{"name":"add","nativeSrc":"19634:3:34","nodeType":"YulIdentifier","src":"19634:3:34"},"nativeSrc":"19634:39:34","nodeType":"YulFunctionCall","src":"19634:39:34"},"variableNames":[{"name":"end","nativeSrc":"19627:3:34","nodeType":"YulIdentifier","src":"19627:3:34"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"19365:314:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"19438:5:34","nodeType":"YulTypedName","src":"19438:5:34","type":""},{"name":"length","nativeSrc":"19445:6:34","nodeType":"YulTypedName","src":"19445:6:34","type":""},{"name":"pos","nativeSrc":"19453:3:34","nodeType":"YulTypedName","src":"19453:3:34","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19461:3:34","nodeType":"YulTypedName","src":"19461:3:34","type":""}],"src":"19365:314:34"},{"body":{"nativeSrc":"19923:533:34","nodeType":"YulBlock","src":"19923:533:34","statements":[{"nativeSrc":"19933:27:34","nodeType":"YulAssignment","src":"19933:27:34","value":{"arguments":[{"name":"headStart","nativeSrc":"19945:9:34","nodeType":"YulIdentifier","src":"19945:9:34"},{"kind":"number","nativeSrc":"19956:3:34","nodeType":"YulLiteral","src":"19956:3:34","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"19941:3:34","nodeType":"YulIdentifier","src":"19941:3:34"},"nativeSrc":"19941:19:34","nodeType":"YulFunctionCall","src":"19941:19:34"},"variableNames":[{"name":"tail","nativeSrc":"19933:4:34","nodeType":"YulIdentifier","src":"19933:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20014:6:34","nodeType":"YulIdentifier","src":"20014:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"20027:9:34","nodeType":"YulIdentifier","src":"20027:9:34"},{"kind":"number","nativeSrc":"20038:1:34","nodeType":"YulLiteral","src":"20038:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20023:3:34","nodeType":"YulIdentifier","src":"20023:3:34"},"nativeSrc":"20023:17:34","nodeType":"YulFunctionCall","src":"20023:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19970:43:34","nodeType":"YulIdentifier","src":"19970:43:34"},"nativeSrc":"19970:71:34","nodeType":"YulFunctionCall","src":"19970:71:34"},"nativeSrc":"19970:71:34","nodeType":"YulExpressionStatement","src":"19970:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20095:6:34","nodeType":"YulIdentifier","src":"20095:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"20108:9:34","nodeType":"YulIdentifier","src":"20108:9:34"},{"kind":"number","nativeSrc":"20119:2:34","nodeType":"YulLiteral","src":"20119:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20104:3:34","nodeType":"YulIdentifier","src":"20104:3:34"},"nativeSrc":"20104:18:34","nodeType":"YulFunctionCall","src":"20104:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20051:43:34","nodeType":"YulIdentifier","src":"20051:43:34"},"nativeSrc":"20051:72:34","nodeType":"YulFunctionCall","src":"20051:72:34"},"nativeSrc":"20051:72:34","nodeType":"YulExpressionStatement","src":"20051:72:34"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"20177:6:34","nodeType":"YulIdentifier","src":"20177:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"20190:9:34","nodeType":"YulIdentifier","src":"20190:9:34"},{"kind":"number","nativeSrc":"20201:2:34","nodeType":"YulLiteral","src":"20201:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20186:3:34","nodeType":"YulIdentifier","src":"20186:3:34"},"nativeSrc":"20186:18:34","nodeType":"YulFunctionCall","src":"20186:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20133:43:34","nodeType":"YulIdentifier","src":"20133:43:34"},"nativeSrc":"20133:72:34","nodeType":"YulFunctionCall","src":"20133:72:34"},"nativeSrc":"20133:72:34","nodeType":"YulExpressionStatement","src":"20133:72:34"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"20259:6:34","nodeType":"YulIdentifier","src":"20259:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"20272:9:34","nodeType":"YulIdentifier","src":"20272:9:34"},{"kind":"number","nativeSrc":"20283:2:34","nodeType":"YulLiteral","src":"20283:2:34","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20268:3:34","nodeType":"YulIdentifier","src":"20268:3:34"},"nativeSrc":"20268:18:34","nodeType":"YulFunctionCall","src":"20268:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20215:43:34","nodeType":"YulIdentifier","src":"20215:43:34"},"nativeSrc":"20215:72:34","nodeType":"YulFunctionCall","src":"20215:72:34"},"nativeSrc":"20215:72:34","nodeType":"YulExpressionStatement","src":"20215:72:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20308:9:34","nodeType":"YulIdentifier","src":"20308:9:34"},{"kind":"number","nativeSrc":"20319:3:34","nodeType":"YulLiteral","src":"20319:3:34","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"20304:3:34","nodeType":"YulIdentifier","src":"20304:3:34"},"nativeSrc":"20304:19:34","nodeType":"YulFunctionCall","src":"20304:19:34"},{"arguments":[{"name":"tail","nativeSrc":"20329:4:34","nodeType":"YulIdentifier","src":"20329:4:34"},{"name":"headStart","nativeSrc":"20335:9:34","nodeType":"YulIdentifier","src":"20335:9:34"}],"functionName":{"name":"sub","nativeSrc":"20325:3:34","nodeType":"YulIdentifier","src":"20325:3:34"},"nativeSrc":"20325:20:34","nodeType":"YulFunctionCall","src":"20325:20:34"}],"functionName":{"name":"mstore","nativeSrc":"20297:6:34","nodeType":"YulIdentifier","src":"20297:6:34"},"nativeSrc":"20297:49:34","nodeType":"YulFunctionCall","src":"20297:49:34"},"nativeSrc":"20297:49:34","nodeType":"YulExpressionStatement","src":"20297:49:34"},{"nativeSrc":"20355:94:34","nodeType":"YulAssignment","src":"20355:94:34","value":{"arguments":[{"name":"value4","nativeSrc":"20427:6:34","nodeType":"YulIdentifier","src":"20427:6:34"},{"name":"value5","nativeSrc":"20435:6:34","nodeType":"YulIdentifier","src":"20435:6:34"},{"name":"tail","nativeSrc":"20444:4:34","nodeType":"YulIdentifier","src":"20444:4:34"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"20363:63:34","nodeType":"YulIdentifier","src":"20363:63:34"},"nativeSrc":"20363:86:34","nodeType":"YulFunctionCall","src":"20363:86:34"},"variableNames":[{"name":"tail","nativeSrc":"20355:4:34","nodeType":"YulIdentifier","src":"20355:4:34"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"19685:771:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19855:9:34","nodeType":"YulTypedName","src":"19855:9:34","type":""},{"name":"value5","nativeSrc":"19867:6:34","nodeType":"YulTypedName","src":"19867:6:34","type":""},{"name":"value4","nativeSrc":"19875:6:34","nodeType":"YulTypedName","src":"19875:6:34","type":""},{"name":"value3","nativeSrc":"19883:6:34","nodeType":"YulTypedName","src":"19883:6:34","type":""},{"name":"value2","nativeSrc":"19891:6:34","nodeType":"YulTypedName","src":"19891:6:34","type":""},{"name":"value1","nativeSrc":"19899:6:34","nodeType":"YulTypedName","src":"19899:6:34","type":""},{"name":"value0","nativeSrc":"19907:6:34","nodeType":"YulTypedName","src":"19907:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19918:4:34","nodeType":"YulTypedName","src":"19918:4:34","type":""}],"src":"19685:771:34"},{"body":{"nativeSrc":"20525:80:34","nodeType":"YulBlock","src":"20525:80:34","statements":[{"nativeSrc":"20535:22:34","nodeType":"YulAssignment","src":"20535:22:34","value":{"arguments":[{"name":"offset","nativeSrc":"20550:6:34","nodeType":"YulIdentifier","src":"20550:6:34"}],"functionName":{"name":"mload","nativeSrc":"20544:5:34","nodeType":"YulIdentifier","src":"20544:5:34"},"nativeSrc":"20544:13:34","nodeType":"YulFunctionCall","src":"20544:13:34"},"variableNames":[{"name":"value","nativeSrc":"20535:5:34","nodeType":"YulIdentifier","src":"20535:5:34"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"20593:5:34","nodeType":"YulIdentifier","src":"20593:5:34"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"20566:26:34","nodeType":"YulIdentifier","src":"20566:26:34"},"nativeSrc":"20566:33:34","nodeType":"YulFunctionCall","src":"20566:33:34"},"nativeSrc":"20566:33:34","nodeType":"YulExpressionStatement","src":"20566:33:34"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"20462:143:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"20503:6:34","nodeType":"YulTypedName","src":"20503:6:34","type":""},{"name":"end","nativeSrc":"20511:3:34","nodeType":"YulTypedName","src":"20511:3:34","type":""}],"returnVariables":[{"name":"value","nativeSrc":"20519:5:34","nodeType":"YulTypedName","src":"20519:5:34","type":""}],"src":"20462:143:34"},{"body":{"nativeSrc":"20688:274:34","nodeType":"YulBlock","src":"20688:274:34","statements":[{"body":{"nativeSrc":"20734:83:34","nodeType":"YulBlock","src":"20734:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"20736:77:34","nodeType":"YulIdentifier","src":"20736:77:34"},"nativeSrc":"20736:79:34","nodeType":"YulFunctionCall","src":"20736:79:34"},"nativeSrc":"20736:79:34","nodeType":"YulExpressionStatement","src":"20736:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20709:7:34","nodeType":"YulIdentifier","src":"20709:7:34"},{"name":"headStart","nativeSrc":"20718:9:34","nodeType":"YulIdentifier","src":"20718:9:34"}],"functionName":{"name":"sub","nativeSrc":"20705:3:34","nodeType":"YulIdentifier","src":"20705:3:34"},"nativeSrc":"20705:23:34","nodeType":"YulFunctionCall","src":"20705:23:34"},{"kind":"number","nativeSrc":"20730:2:34","nodeType":"YulLiteral","src":"20730:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"20701:3:34","nodeType":"YulIdentifier","src":"20701:3:34"},"nativeSrc":"20701:32:34","nodeType":"YulFunctionCall","src":"20701:32:34"},"nativeSrc":"20698:119:34","nodeType":"YulIf","src":"20698:119:34"},{"nativeSrc":"20827:128:34","nodeType":"YulBlock","src":"20827:128:34","statements":[{"nativeSrc":"20842:15:34","nodeType":"YulVariableDeclaration","src":"20842:15:34","value":{"kind":"number","nativeSrc":"20856:1:34","nodeType":"YulLiteral","src":"20856:1:34","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"20846:6:34","nodeType":"YulTypedName","src":"20846:6:34","type":""}]},{"nativeSrc":"20871:74:34","nodeType":"YulAssignment","src":"20871:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20917:9:34","nodeType":"YulIdentifier","src":"20917:9:34"},{"name":"offset","nativeSrc":"20928:6:34","nodeType":"YulIdentifier","src":"20928:6:34"}],"functionName":{"name":"add","nativeSrc":"20913:3:34","nodeType":"YulIdentifier","src":"20913:3:34"},"nativeSrc":"20913:22:34","nodeType":"YulFunctionCall","src":"20913:22:34"},{"name":"dataEnd","nativeSrc":"20937:7:34","nodeType":"YulIdentifier","src":"20937:7:34"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"20881:31:34","nodeType":"YulIdentifier","src":"20881:31:34"},"nativeSrc":"20881:64:34","nodeType":"YulFunctionCall","src":"20881:64:34"},"variableNames":[{"name":"value0","nativeSrc":"20871:6:34","nodeType":"YulIdentifier","src":"20871:6:34"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"20611:351:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20658:9:34","nodeType":"YulTypedName","src":"20658:9:34","type":""},{"name":"dataEnd","nativeSrc":"20669:7:34","nodeType":"YulTypedName","src":"20669:7:34","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20681:6:34","nodeType":"YulTypedName","src":"20681:6:34","type":""}],"src":"20611:351:34"},{"body":{"nativeSrc":"20996:152:34","nodeType":"YulBlock","src":"20996:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21013:1:34","nodeType":"YulLiteral","src":"21013:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"21016:77:34","nodeType":"YulLiteral","src":"21016:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21006:6:34","nodeType":"YulIdentifier","src":"21006:6:34"},"nativeSrc":"21006:88:34","nodeType":"YulFunctionCall","src":"21006:88:34"},"nativeSrc":"21006:88:34","nodeType":"YulExpressionStatement","src":"21006:88:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21110:1:34","nodeType":"YulLiteral","src":"21110:1:34","type":"","value":"4"},{"kind":"number","nativeSrc":"21113:4:34","nodeType":"YulLiteral","src":"21113:4:34","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"21103:6:34","nodeType":"YulIdentifier","src":"21103:6:34"},"nativeSrc":"21103:15:34","nodeType":"YulFunctionCall","src":"21103:15:34"},"nativeSrc":"21103:15:34","nodeType":"YulExpressionStatement","src":"21103:15:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21134:1:34","nodeType":"YulLiteral","src":"21134:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"21137:4:34","nodeType":"YulLiteral","src":"21137:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21127:6:34","nodeType":"YulIdentifier","src":"21127:6:34"},"nativeSrc":"21127:15:34","nodeType":"YulFunctionCall","src":"21127:15:34"},"nativeSrc":"21127:15:34","nodeType":"YulExpressionStatement","src":"21127:15:34"}]},"name":"panic_error_0x11","nativeSrc":"20968:180:34","nodeType":"YulFunctionDefinition","src":"20968:180:34"},{"body":{"nativeSrc":"21198:147:34","nodeType":"YulBlock","src":"21198:147:34","statements":[{"nativeSrc":"21208:25:34","nodeType":"YulAssignment","src":"21208:25:34","value":{"arguments":[{"name":"x","nativeSrc":"21231:1:34","nodeType":"YulIdentifier","src":"21231:1:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21213:17:34","nodeType":"YulIdentifier","src":"21213:17:34"},"nativeSrc":"21213:20:34","nodeType":"YulFunctionCall","src":"21213:20:34"},"variableNames":[{"name":"x","nativeSrc":"21208:1:34","nodeType":"YulIdentifier","src":"21208:1:34"}]},{"nativeSrc":"21242:25:34","nodeType":"YulAssignment","src":"21242:25:34","value":{"arguments":[{"name":"y","nativeSrc":"21265:1:34","nodeType":"YulIdentifier","src":"21265:1:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21247:17:34","nodeType":"YulIdentifier","src":"21247:17:34"},"nativeSrc":"21247:20:34","nodeType":"YulFunctionCall","src":"21247:20:34"},"variableNames":[{"name":"y","nativeSrc":"21242:1:34","nodeType":"YulIdentifier","src":"21242:1:34"}]},{"nativeSrc":"21276:16:34","nodeType":"YulAssignment","src":"21276:16:34","value":{"arguments":[{"name":"x","nativeSrc":"21287:1:34","nodeType":"YulIdentifier","src":"21287:1:34"},{"name":"y","nativeSrc":"21290:1:34","nodeType":"YulIdentifier","src":"21290:1:34"}],"functionName":{"name":"add","nativeSrc":"21283:3:34","nodeType":"YulIdentifier","src":"21283:3:34"},"nativeSrc":"21283:9:34","nodeType":"YulFunctionCall","src":"21283:9:34"},"variableNames":[{"name":"sum","nativeSrc":"21276:3:34","nodeType":"YulIdentifier","src":"21276:3:34"}]},{"body":{"nativeSrc":"21316:22:34","nodeType":"YulBlock","src":"21316:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"21318:16:34","nodeType":"YulIdentifier","src":"21318:16:34"},"nativeSrc":"21318:18:34","nodeType":"YulFunctionCall","src":"21318:18:34"},"nativeSrc":"21318:18:34","nodeType":"YulExpressionStatement","src":"21318:18:34"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"21308:1:34","nodeType":"YulIdentifier","src":"21308:1:34"},{"name":"sum","nativeSrc":"21311:3:34","nodeType":"YulIdentifier","src":"21311:3:34"}],"functionName":{"name":"gt","nativeSrc":"21305:2:34","nodeType":"YulIdentifier","src":"21305:2:34"},"nativeSrc":"21305:10:34","nodeType":"YulFunctionCall","src":"21305:10:34"},"nativeSrc":"21302:36:34","nodeType":"YulIf","src":"21302:36:34"}]},"name":"checked_add_t_uint256","nativeSrc":"21154:191:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"21185:1:34","nodeType":"YulTypedName","src":"21185:1:34","type":""},{"name":"y","nativeSrc":"21188:1:34","nodeType":"YulTypedName","src":"21188:1:34","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"21194:3:34","nodeType":"YulTypedName","src":"21194:3:34","type":""}],"src":"21154:191:34"},{"body":{"nativeSrc":"21396:149:34","nodeType":"YulBlock","src":"21396:149:34","statements":[{"nativeSrc":"21406:25:34","nodeType":"YulAssignment","src":"21406:25:34","value":{"arguments":[{"name":"x","nativeSrc":"21429:1:34","nodeType":"YulIdentifier","src":"21429:1:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21411:17:34","nodeType":"YulIdentifier","src":"21411:17:34"},"nativeSrc":"21411:20:34","nodeType":"YulFunctionCall","src":"21411:20:34"},"variableNames":[{"name":"x","nativeSrc":"21406:1:34","nodeType":"YulIdentifier","src":"21406:1:34"}]},{"nativeSrc":"21440:25:34","nodeType":"YulAssignment","src":"21440:25:34","value":{"arguments":[{"name":"y","nativeSrc":"21463:1:34","nodeType":"YulIdentifier","src":"21463:1:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21445:17:34","nodeType":"YulIdentifier","src":"21445:17:34"},"nativeSrc":"21445:20:34","nodeType":"YulFunctionCall","src":"21445:20:34"},"variableNames":[{"name":"y","nativeSrc":"21440:1:34","nodeType":"YulIdentifier","src":"21440:1:34"}]},{"nativeSrc":"21474:17:34","nodeType":"YulAssignment","src":"21474:17:34","value":{"arguments":[{"name":"x","nativeSrc":"21486:1:34","nodeType":"YulIdentifier","src":"21486:1:34"},{"name":"y","nativeSrc":"21489:1:34","nodeType":"YulIdentifier","src":"21489:1:34"}],"functionName":{"name":"sub","nativeSrc":"21482:3:34","nodeType":"YulIdentifier","src":"21482:3:34"},"nativeSrc":"21482:9:34","nodeType":"YulFunctionCall","src":"21482:9:34"},"variableNames":[{"name":"diff","nativeSrc":"21474:4:34","nodeType":"YulIdentifier","src":"21474:4:34"}]},{"body":{"nativeSrc":"21516:22:34","nodeType":"YulBlock","src":"21516:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"21518:16:34","nodeType":"YulIdentifier","src":"21518:16:34"},"nativeSrc":"21518:18:34","nodeType":"YulFunctionCall","src":"21518:18:34"},"nativeSrc":"21518:18:34","nodeType":"YulExpressionStatement","src":"21518:18:34"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"21507:4:34","nodeType":"YulIdentifier","src":"21507:4:34"},{"name":"x","nativeSrc":"21513:1:34","nodeType":"YulIdentifier","src":"21513:1:34"}],"functionName":{"name":"gt","nativeSrc":"21504:2:34","nodeType":"YulIdentifier","src":"21504:2:34"},"nativeSrc":"21504:11:34","nodeType":"YulFunctionCall","src":"21504:11:34"},"nativeSrc":"21501:37:34","nodeType":"YulIf","src":"21501:37:34"}]},"name":"checked_sub_t_uint256","nativeSrc":"21351:194:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"21382:1:34","nodeType":"YulTypedName","src":"21382:1:34","type":""},{"name":"y","nativeSrc":"21385:1:34","nodeType":"YulTypedName","src":"21385:1:34","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"21391:4:34","nodeType":"YulTypedName","src":"21391:4:34","type":""}],"src":"21351:194:34"},{"body":{"nativeSrc":"21579:152:34","nodeType":"YulBlock","src":"21579:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21596:1:34","nodeType":"YulLiteral","src":"21596:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"21599:77:34","nodeType":"YulLiteral","src":"21599:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21589:6:34","nodeType":"YulIdentifier","src":"21589:6:34"},"nativeSrc":"21589:88:34","nodeType":"YulFunctionCall","src":"21589:88:34"},"nativeSrc":"21589:88:34","nodeType":"YulExpressionStatement","src":"21589:88:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21693:1:34","nodeType":"YulLiteral","src":"21693:1:34","type":"","value":"4"},{"kind":"number","nativeSrc":"21696:4:34","nodeType":"YulLiteral","src":"21696:4:34","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"21686:6:34","nodeType":"YulIdentifier","src":"21686:6:34"},"nativeSrc":"21686:15:34","nodeType":"YulFunctionCall","src":"21686:15:34"},"nativeSrc":"21686:15:34","nodeType":"YulExpressionStatement","src":"21686:15:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21717:1:34","nodeType":"YulLiteral","src":"21717:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"21720:4:34","nodeType":"YulLiteral","src":"21720:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21710:6:34","nodeType":"YulIdentifier","src":"21710:6:34"},"nativeSrc":"21710:15:34","nodeType":"YulFunctionCall","src":"21710:15:34"},"nativeSrc":"21710:15:34","nodeType":"YulExpressionStatement","src":"21710:15:34"}]},"name":"panic_error_0x41","nativeSrc":"21551:180:34","nodeType":"YulFunctionDefinition","src":"21551:180:34"},{"body":{"nativeSrc":"21919:371:34","nodeType":"YulBlock","src":"21919:371:34","statements":[{"nativeSrc":"21929:27:34","nodeType":"YulAssignment","src":"21929:27:34","value":{"arguments":[{"name":"headStart","nativeSrc":"21941:9:34","nodeType":"YulIdentifier","src":"21941:9:34"},{"kind":"number","nativeSrc":"21952:3:34","nodeType":"YulLiteral","src":"21952:3:34","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21937:3:34","nodeType":"YulIdentifier","src":"21937:3:34"},"nativeSrc":"21937:19:34","nodeType":"YulFunctionCall","src":"21937:19:34"},"variableNames":[{"name":"tail","nativeSrc":"21929:4:34","nodeType":"YulIdentifier","src":"21929:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22010:6:34","nodeType":"YulIdentifier","src":"22010:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"22023:9:34","nodeType":"YulIdentifier","src":"22023:9:34"},{"kind":"number","nativeSrc":"22034:1:34","nodeType":"YulLiteral","src":"22034:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22019:3:34","nodeType":"YulIdentifier","src":"22019:3:34"},"nativeSrc":"22019:17:34","nodeType":"YulFunctionCall","src":"22019:17:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21966:43:34","nodeType":"YulIdentifier","src":"21966:43:34"},"nativeSrc":"21966:71:34","nodeType":"YulFunctionCall","src":"21966:71:34"},"nativeSrc":"21966:71:34","nodeType":"YulExpressionStatement","src":"21966:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22091:6:34","nodeType":"YulIdentifier","src":"22091:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"22104:9:34","nodeType":"YulIdentifier","src":"22104:9:34"},{"kind":"number","nativeSrc":"22115:2:34","nodeType":"YulLiteral","src":"22115:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22100:3:34","nodeType":"YulIdentifier","src":"22100:3:34"},"nativeSrc":"22100:18:34","nodeType":"YulFunctionCall","src":"22100:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22047:43:34","nodeType":"YulIdentifier","src":"22047:43:34"},"nativeSrc":"22047:72:34","nodeType":"YulFunctionCall","src":"22047:72:34"},"nativeSrc":"22047:72:34","nodeType":"YulExpressionStatement","src":"22047:72:34"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"22173:6:34","nodeType":"YulIdentifier","src":"22173:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"22186:9:34","nodeType":"YulIdentifier","src":"22186:9:34"},{"kind":"number","nativeSrc":"22197:2:34","nodeType":"YulLiteral","src":"22197:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22182:3:34","nodeType":"YulIdentifier","src":"22182:3:34"},"nativeSrc":"22182:18:34","nodeType":"YulFunctionCall","src":"22182:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22129:43:34","nodeType":"YulIdentifier","src":"22129:43:34"},"nativeSrc":"22129:72:34","nodeType":"YulFunctionCall","src":"22129:72:34"},"nativeSrc":"22129:72:34","nodeType":"YulExpressionStatement","src":"22129:72:34"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"22255:6:34","nodeType":"YulIdentifier","src":"22255:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"22268:9:34","nodeType":"YulIdentifier","src":"22268:9:34"},{"kind":"number","nativeSrc":"22279:2:34","nodeType":"YulLiteral","src":"22279:2:34","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22264:3:34","nodeType":"YulIdentifier","src":"22264:3:34"},"nativeSrc":"22264:18:34","nodeType":"YulFunctionCall","src":"22264:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22211:43:34","nodeType":"YulIdentifier","src":"22211:43:34"},"nativeSrc":"22211:72:34","nodeType":"YulFunctionCall","src":"22211:72:34"},"nativeSrc":"22211:72:34","nodeType":"YulExpressionStatement","src":"22211:72:34"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"21737:553:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21867:9:34","nodeType":"YulTypedName","src":"21867:9:34","type":""},{"name":"value3","nativeSrc":"21879:6:34","nodeType":"YulTypedName","src":"21879:6:34","type":""},{"name":"value2","nativeSrc":"21887:6:34","nodeType":"YulTypedName","src":"21887:6:34","type":""},{"name":"value1","nativeSrc":"21895:6:34","nodeType":"YulTypedName","src":"21895:6:34","type":""},{"name":"value0","nativeSrc":"21903:6:34","nodeType":"YulTypedName","src":"21903:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21914:4:34","nodeType":"YulTypedName","src":"21914:4:34","type":""}],"src":"21737:553:34"},{"body":{"nativeSrc":"22534:537:34","nodeType":"YulBlock","src":"22534:537:34","statements":[{"nativeSrc":"22544:27:34","nodeType":"YulAssignment","src":"22544:27:34","value":{"arguments":[{"name":"headStart","nativeSrc":"22556:9:34","nodeType":"YulIdentifier","src":"22556:9:34"},{"kind":"number","nativeSrc":"22567:3:34","nodeType":"YulLiteral","src":"22567:3:34","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"22552:3:34","nodeType":"YulIdentifier","src":"22552:3:34"},"nativeSrc":"22552:19:34","nodeType":"YulFunctionCall","src":"22552:19:34"},"variableNames":[{"name":"tail","nativeSrc":"22544:4:34","nodeType":"YulIdentifier","src":"22544:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22625:6:34","nodeType":"YulIdentifier","src":"22625:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"22638:9:34","nodeType":"YulIdentifier","src":"22638:9:34"},{"kind":"number","nativeSrc":"22649:1:34","nodeType":"YulLiteral","src":"22649:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22634:3:34","nodeType":"YulIdentifier","src":"22634:3:34"},"nativeSrc":"22634:17:34","nodeType":"YulFunctionCall","src":"22634:17:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"22581:43:34","nodeType":"YulIdentifier","src":"22581:43:34"},"nativeSrc":"22581:71:34","nodeType":"YulFunctionCall","src":"22581:71:34"},"nativeSrc":"22581:71:34","nodeType":"YulExpressionStatement","src":"22581:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22706:6:34","nodeType":"YulIdentifier","src":"22706:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"22719:9:34","nodeType":"YulIdentifier","src":"22719:9:34"},{"kind":"number","nativeSrc":"22730:2:34","nodeType":"YulLiteral","src":"22730:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22715:3:34","nodeType":"YulIdentifier","src":"22715:3:34"},"nativeSrc":"22715:18:34","nodeType":"YulFunctionCall","src":"22715:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22662:43:34","nodeType":"YulIdentifier","src":"22662:43:34"},"nativeSrc":"22662:72:34","nodeType":"YulFunctionCall","src":"22662:72:34"},"nativeSrc":"22662:72:34","nodeType":"YulExpressionStatement","src":"22662:72:34"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"22788:6:34","nodeType":"YulIdentifier","src":"22788:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"22801:9:34","nodeType":"YulIdentifier","src":"22801:9:34"},{"kind":"number","nativeSrc":"22812:2:34","nodeType":"YulLiteral","src":"22812:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22797:3:34","nodeType":"YulIdentifier","src":"22797:3:34"},"nativeSrc":"22797:18:34","nodeType":"YulFunctionCall","src":"22797:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22744:43:34","nodeType":"YulIdentifier","src":"22744:43:34"},"nativeSrc":"22744:72:34","nodeType":"YulFunctionCall","src":"22744:72:34"},"nativeSrc":"22744:72:34","nodeType":"YulExpressionStatement","src":"22744:72:34"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"22870:6:34","nodeType":"YulIdentifier","src":"22870:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"22883:9:34","nodeType":"YulIdentifier","src":"22883:9:34"},{"kind":"number","nativeSrc":"22894:2:34","nodeType":"YulLiteral","src":"22894:2:34","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22879:3:34","nodeType":"YulIdentifier","src":"22879:3:34"},"nativeSrc":"22879:18:34","nodeType":"YulFunctionCall","src":"22879:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22826:43:34","nodeType":"YulIdentifier","src":"22826:43:34"},"nativeSrc":"22826:72:34","nodeType":"YulFunctionCall","src":"22826:72:34"},"nativeSrc":"22826:72:34","nodeType":"YulExpressionStatement","src":"22826:72:34"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"22952:6:34","nodeType":"YulIdentifier","src":"22952:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"22965:9:34","nodeType":"YulIdentifier","src":"22965:9:34"},{"kind":"number","nativeSrc":"22976:3:34","nodeType":"YulLiteral","src":"22976:3:34","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22961:3:34","nodeType":"YulIdentifier","src":"22961:3:34"},"nativeSrc":"22961:19:34","nodeType":"YulFunctionCall","src":"22961:19:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22908:43:34","nodeType":"YulIdentifier","src":"22908:43:34"},"nativeSrc":"22908:73:34","nodeType":"YulFunctionCall","src":"22908:73:34"},"nativeSrc":"22908:73:34","nodeType":"YulExpressionStatement","src":"22908:73:34"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"23035:6:34","nodeType":"YulIdentifier","src":"23035:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"23048:9:34","nodeType":"YulIdentifier","src":"23048:9:34"},{"kind":"number","nativeSrc":"23059:3:34","nodeType":"YulLiteral","src":"23059:3:34","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"23044:3:34","nodeType":"YulIdentifier","src":"23044:3:34"},"nativeSrc":"23044:19:34","nodeType":"YulFunctionCall","src":"23044:19:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22991:43:34","nodeType":"YulIdentifier","src":"22991:43:34"},"nativeSrc":"22991:73:34","nodeType":"YulFunctionCall","src":"22991:73:34"},"nativeSrc":"22991:73:34","nodeType":"YulExpressionStatement","src":"22991:73:34"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"22296:775:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22466:9:34","nodeType":"YulTypedName","src":"22466:9:34","type":""},{"name":"value5","nativeSrc":"22478:6:34","nodeType":"YulTypedName","src":"22478:6:34","type":""},{"name":"value4","nativeSrc":"22486:6:34","nodeType":"YulTypedName","src":"22486:6:34","type":""},{"name":"value3","nativeSrc":"22494:6:34","nodeType":"YulTypedName","src":"22494:6:34","type":""},{"name":"value2","nativeSrc":"22502:6:34","nodeType":"YulTypedName","src":"22502:6:34","type":""},{"name":"value1","nativeSrc":"22510:6:34","nodeType":"YulTypedName","src":"22510:6:34","type":""},{"name":"value0","nativeSrc":"22518:6:34","nodeType":"YulTypedName","src":"22518:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22529:4:34","nodeType":"YulTypedName","src":"22529:4:34","type":""}],"src":"22296:775:34"},{"body":{"nativeSrc":"23203:206:34","nodeType":"YulBlock","src":"23203:206:34","statements":[{"nativeSrc":"23213:26:34","nodeType":"YulAssignment","src":"23213:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"23225:9:34","nodeType":"YulIdentifier","src":"23225:9:34"},{"kind":"number","nativeSrc":"23236:2:34","nodeType":"YulLiteral","src":"23236:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23221:3:34","nodeType":"YulIdentifier","src":"23221:3:34"},"nativeSrc":"23221:18:34","nodeType":"YulFunctionCall","src":"23221:18:34"},"variableNames":[{"name":"tail","nativeSrc":"23213:4:34","nodeType":"YulIdentifier","src":"23213:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"23293:6:34","nodeType":"YulIdentifier","src":"23293:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"23306:9:34","nodeType":"YulIdentifier","src":"23306:9:34"},{"kind":"number","nativeSrc":"23317:1:34","nodeType":"YulLiteral","src":"23317:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23302:3:34","nodeType":"YulIdentifier","src":"23302:3:34"},"nativeSrc":"23302:17:34","nodeType":"YulFunctionCall","src":"23302:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"23249:43:34","nodeType":"YulIdentifier","src":"23249:43:34"},"nativeSrc":"23249:71:34","nodeType":"YulFunctionCall","src":"23249:71:34"},"nativeSrc":"23249:71:34","nodeType":"YulExpressionStatement","src":"23249:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"23374:6:34","nodeType":"YulIdentifier","src":"23374:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"23387:9:34","nodeType":"YulIdentifier","src":"23387:9:34"},{"kind":"number","nativeSrc":"23398:2:34","nodeType":"YulLiteral","src":"23398:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23383:3:34","nodeType":"YulIdentifier","src":"23383:3:34"},"nativeSrc":"23383:18:34","nodeType":"YulFunctionCall","src":"23383:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"23330:43:34","nodeType":"YulIdentifier","src":"23330:43:34"},"nativeSrc":"23330:72:34","nodeType":"YulFunctionCall","src":"23330:72:34"},"nativeSrc":"23330:72:34","nodeType":"YulExpressionStatement","src":"23330:72:34"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"23077:332:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23167:9:34","nodeType":"YulTypedName","src":"23167:9:34","type":""},{"name":"value1","nativeSrc":"23179:6:34","nodeType":"YulTypedName","src":"23179:6:34","type":""},{"name":"value0","nativeSrc":"23187:6:34","nodeType":"YulTypedName","src":"23187:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23198:4:34","nodeType":"YulTypedName","src":"23198:4:34","type":""}],"src":"23077:332:34"},{"body":{"nativeSrc":"23459:200:34","nodeType":"YulBlock","src":"23459:200:34","statements":[{"nativeSrc":"23469:25:34","nodeType":"YulAssignment","src":"23469:25:34","value":{"arguments":[{"name":"x","nativeSrc":"23492:1:34","nodeType":"YulIdentifier","src":"23492:1:34"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"23474:17:34","nodeType":"YulIdentifier","src":"23474:17:34"},"nativeSrc":"23474:20:34","nodeType":"YulFunctionCall","src":"23474:20:34"},"variableNames":[{"name":"x","nativeSrc":"23469:1:34","nodeType":"YulIdentifier","src":"23469:1:34"}]},{"nativeSrc":"23503:25:34","nodeType":"YulAssignment","src":"23503:25:34","value":{"arguments":[{"name":"y","nativeSrc":"23526:1:34","nodeType":"YulIdentifier","src":"23526:1:34"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"23508:17:34","nodeType":"YulIdentifier","src":"23508:17:34"},"nativeSrc":"23508:20:34","nodeType":"YulFunctionCall","src":"23508:20:34"},"variableNames":[{"name":"y","nativeSrc":"23503:1:34","nodeType":"YulIdentifier","src":"23503:1:34"}]},{"nativeSrc":"23537:16:34","nodeType":"YulAssignment","src":"23537:16:34","value":{"arguments":[{"name":"x","nativeSrc":"23548:1:34","nodeType":"YulIdentifier","src":"23548:1:34"},{"name":"y","nativeSrc":"23551:1:34","nodeType":"YulIdentifier","src":"23551:1:34"}],"functionName":{"name":"add","nativeSrc":"23544:3:34","nodeType":"YulIdentifier","src":"23544:3:34"},"nativeSrc":"23544:9:34","nodeType":"YulFunctionCall","src":"23544:9:34"},"variableNames":[{"name":"sum","nativeSrc":"23537:3:34","nodeType":"YulIdentifier","src":"23537:3:34"}]},{"body":{"nativeSrc":"23630:22:34","nodeType":"YulBlock","src":"23630:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"23632:16:34","nodeType":"YulIdentifier","src":"23632:16:34"},"nativeSrc":"23632:18:34","nodeType":"YulFunctionCall","src":"23632:18:34"},"nativeSrc":"23632:18:34","nodeType":"YulExpressionStatement","src":"23632:18:34"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"23569:3:34","nodeType":"YulIdentifier","src":"23569:3:34"},{"kind":"number","nativeSrc":"23574:54:34","nodeType":"YulLiteral","src":"23574:54:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"23566:2:34","nodeType":"YulIdentifier","src":"23566:2:34"},"nativeSrc":"23566:63:34","nodeType":"YulFunctionCall","src":"23566:63:34"},"nativeSrc":"23563:89:34","nodeType":"YulIf","src":"23563:89:34"}]},"name":"checked_add_t_uint208","nativeSrc":"23415:244:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"23446:1:34","nodeType":"YulTypedName","src":"23446:1:34","type":""},{"name":"y","nativeSrc":"23449:1:34","nodeType":"YulTypedName","src":"23449:1:34","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"23455:3:34","nodeType":"YulTypedName","src":"23455:3:34","type":""}],"src":"23415:244:34"},{"body":{"nativeSrc":"23710:202:34","nodeType":"YulBlock","src":"23710:202:34","statements":[{"nativeSrc":"23720:25:34","nodeType":"YulAssignment","src":"23720:25:34","value":{"arguments":[{"name":"x","nativeSrc":"23743:1:34","nodeType":"YulIdentifier","src":"23743:1:34"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"23725:17:34","nodeType":"YulIdentifier","src":"23725:17:34"},"nativeSrc":"23725:20:34","nodeType":"YulFunctionCall","src":"23725:20:34"},"variableNames":[{"name":"x","nativeSrc":"23720:1:34","nodeType":"YulIdentifier","src":"23720:1:34"}]},{"nativeSrc":"23754:25:34","nodeType":"YulAssignment","src":"23754:25:34","value":{"arguments":[{"name":"y","nativeSrc":"23777:1:34","nodeType":"YulIdentifier","src":"23777:1:34"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"23759:17:34","nodeType":"YulIdentifier","src":"23759:17:34"},"nativeSrc":"23759:20:34","nodeType":"YulFunctionCall","src":"23759:20:34"},"variableNames":[{"name":"y","nativeSrc":"23754:1:34","nodeType":"YulIdentifier","src":"23754:1:34"}]},{"nativeSrc":"23788:17:34","nodeType":"YulAssignment","src":"23788:17:34","value":{"arguments":[{"name":"x","nativeSrc":"23800:1:34","nodeType":"YulIdentifier","src":"23800:1:34"},{"name":"y","nativeSrc":"23803:1:34","nodeType":"YulIdentifier","src":"23803:1:34"}],"functionName":{"name":"sub","nativeSrc":"23796:3:34","nodeType":"YulIdentifier","src":"23796:3:34"},"nativeSrc":"23796:9:34","nodeType":"YulFunctionCall","src":"23796:9:34"},"variableNames":[{"name":"diff","nativeSrc":"23788:4:34","nodeType":"YulIdentifier","src":"23788:4:34"}]},{"body":{"nativeSrc":"23883:22:34","nodeType":"YulBlock","src":"23883:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"23885:16:34","nodeType":"YulIdentifier","src":"23885:16:34"},"nativeSrc":"23885:18:34","nodeType":"YulFunctionCall","src":"23885:18:34"},"nativeSrc":"23885:18:34","nodeType":"YulExpressionStatement","src":"23885:18:34"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"23821:4:34","nodeType":"YulIdentifier","src":"23821:4:34"},{"kind":"number","nativeSrc":"23827:54:34","nodeType":"YulLiteral","src":"23827:54:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"23818:2:34","nodeType":"YulIdentifier","src":"23818:2:34"},"nativeSrc":"23818:64:34","nodeType":"YulFunctionCall","src":"23818:64:34"},"nativeSrc":"23815:90:34","nodeType":"YulIf","src":"23815:90:34"}]},"name":"checked_sub_t_uint208","nativeSrc":"23665:247:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"23696:1:34","nodeType":"YulTypedName","src":"23696:1:34","type":""},{"name":"y","nativeSrc":"23699:1:34","nodeType":"YulTypedName","src":"23699:1:34","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"23705:4:34","nodeType":"YulTypedName","src":"23705:4:34","type":""}],"src":"23665:247:34"},{"body":{"nativeSrc":"24072:288:34","nodeType":"YulBlock","src":"24072:288:34","statements":[{"nativeSrc":"24082:26:34","nodeType":"YulAssignment","src":"24082:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"24094:9:34","nodeType":"YulIdentifier","src":"24094:9:34"},{"kind":"number","nativeSrc":"24105:2:34","nodeType":"YulLiteral","src":"24105:2:34","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24090:3:34","nodeType":"YulIdentifier","src":"24090:3:34"},"nativeSrc":"24090:18:34","nodeType":"YulFunctionCall","src":"24090:18:34"},"variableNames":[{"name":"tail","nativeSrc":"24082:4:34","nodeType":"YulIdentifier","src":"24082:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24162:6:34","nodeType":"YulIdentifier","src":"24162:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"24175:9:34","nodeType":"YulIdentifier","src":"24175:9:34"},{"kind":"number","nativeSrc":"24186:1:34","nodeType":"YulLiteral","src":"24186:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24171:3:34","nodeType":"YulIdentifier","src":"24171:3:34"},"nativeSrc":"24171:17:34","nodeType":"YulFunctionCall","src":"24171:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24118:43:34","nodeType":"YulIdentifier","src":"24118:43:34"},"nativeSrc":"24118:71:34","nodeType":"YulFunctionCall","src":"24118:71:34"},"nativeSrc":"24118:71:34","nodeType":"YulExpressionStatement","src":"24118:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24243:6:34","nodeType":"YulIdentifier","src":"24243:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"24256:9:34","nodeType":"YulIdentifier","src":"24256:9:34"},{"kind":"number","nativeSrc":"24267:2:34","nodeType":"YulLiteral","src":"24267:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24252:3:34","nodeType":"YulIdentifier","src":"24252:3:34"},"nativeSrc":"24252:18:34","nodeType":"YulFunctionCall","src":"24252:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24199:43:34","nodeType":"YulIdentifier","src":"24199:43:34"},"nativeSrc":"24199:72:34","nodeType":"YulFunctionCall","src":"24199:72:34"},"nativeSrc":"24199:72:34","nodeType":"YulExpressionStatement","src":"24199:72:34"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"24325:6:34","nodeType":"YulIdentifier","src":"24325:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"24338:9:34","nodeType":"YulIdentifier","src":"24338:9:34"},{"kind":"number","nativeSrc":"24349:2:34","nodeType":"YulLiteral","src":"24349:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24334:3:34","nodeType":"YulIdentifier","src":"24334:3:34"},"nativeSrc":"24334:18:34","nodeType":"YulFunctionCall","src":"24334:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24281:43:34","nodeType":"YulIdentifier","src":"24281:43:34"},"nativeSrc":"24281:72:34","nodeType":"YulFunctionCall","src":"24281:72:34"},"nativeSrc":"24281:72:34","nodeType":"YulExpressionStatement","src":"24281:72:34"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"23918:442:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24028:9:34","nodeType":"YulTypedName","src":"24028:9:34","type":""},{"name":"value2","nativeSrc":"24040:6:34","nodeType":"YulTypedName","src":"24040:6:34","type":""},{"name":"value1","nativeSrc":"24048:6:34","nodeType":"YulTypedName","src":"24048:6:34","type":""},{"name":"value0","nativeSrc":"24056:6:34","nodeType":"YulTypedName","src":"24056:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24067:4:34","nodeType":"YulTypedName","src":"24067:4:34","type":""}],"src":"23918:442:34"},{"body":{"nativeSrc":"24420:32:34","nodeType":"YulBlock","src":"24420:32:34","statements":[{"nativeSrc":"24430:16:34","nodeType":"YulAssignment","src":"24430:16:34","value":{"name":"value","nativeSrc":"24441:5:34","nodeType":"YulIdentifier","src":"24441:5:34"},"variableNames":[{"name":"cleaned","nativeSrc":"24430:7:34","nodeType":"YulIdentifier","src":"24430:7:34"}]}]},"name":"cleanup_t_rational_48_by_1","nativeSrc":"24366:86:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24402:5:34","nodeType":"YulTypedName","src":"24402:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"24412:7:34","nodeType":"YulTypedName","src":"24412:7:34","type":""}],"src":"24366:86:34"},{"body":{"nativeSrc":"24490:28:34","nodeType":"YulBlock","src":"24490:28:34","statements":[{"nativeSrc":"24500:12:34","nodeType":"YulAssignment","src":"24500:12:34","value":{"name":"value","nativeSrc":"24507:5:34","nodeType":"YulIdentifier","src":"24507:5:34"},"variableNames":[{"name":"ret","nativeSrc":"24500:3:34","nodeType":"YulIdentifier","src":"24500:3:34"}]}]},"name":"identity","nativeSrc":"24458:60:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24476:5:34","nodeType":"YulTypedName","src":"24476:5:34","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"24486:3:34","nodeType":"YulTypedName","src":"24486:3:34","type":""}],"src":"24458:60:34"},{"body":{"nativeSrc":"24591:89:34","nodeType":"YulBlock","src":"24591:89:34","statements":[{"nativeSrc":"24601:73:34","nodeType":"YulAssignment","src":"24601:73:34","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"24666:5:34","nodeType":"YulIdentifier","src":"24666:5:34"}],"functionName":{"name":"cleanup_t_rational_48_by_1","nativeSrc":"24639:26:34","nodeType":"YulIdentifier","src":"24639:26:34"},"nativeSrc":"24639:33:34","nodeType":"YulFunctionCall","src":"24639:33:34"}],"functionName":{"name":"identity","nativeSrc":"24630:8:34","nodeType":"YulIdentifier","src":"24630:8:34"},"nativeSrc":"24630:43:34","nodeType":"YulFunctionCall","src":"24630:43:34"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"24614:15:34","nodeType":"YulIdentifier","src":"24614:15:34"},"nativeSrc":"24614:60:34","nodeType":"YulFunctionCall","src":"24614:60:34"},"variableNames":[{"name":"converted","nativeSrc":"24601:9:34","nodeType":"YulIdentifier","src":"24601:9:34"}]}]},"name":"convert_t_rational_48_by_1_to_t_uint8","nativeSrc":"24524:156:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24571:5:34","nodeType":"YulTypedName","src":"24571:5:34","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"24581:9:34","nodeType":"YulTypedName","src":"24581:9:34","type":""}],"src":"24524:156:34"},{"body":{"nativeSrc":"24758:73:34","nodeType":"YulBlock","src":"24758:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24775:3:34","nodeType":"YulIdentifier","src":"24775:3:34"},{"arguments":[{"name":"value","nativeSrc":"24818:5:34","nodeType":"YulIdentifier","src":"24818:5:34"}],"functionName":{"name":"convert_t_rational_48_by_1_to_t_uint8","nativeSrc":"24780:37:34","nodeType":"YulIdentifier","src":"24780:37:34"},"nativeSrc":"24780:44:34","nodeType":"YulFunctionCall","src":"24780:44:34"}],"functionName":{"name":"mstore","nativeSrc":"24768:6:34","nodeType":"YulIdentifier","src":"24768:6:34"},"nativeSrc":"24768:57:34","nodeType":"YulFunctionCall","src":"24768:57:34"},"nativeSrc":"24768:57:34","nodeType":"YulExpressionStatement","src":"24768:57:34"}]},"name":"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack","nativeSrc":"24686:145:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24746:5:34","nodeType":"YulTypedName","src":"24746:5:34","type":""},{"name":"pos","nativeSrc":"24753:3:34","nodeType":"YulTypedName","src":"24753:3:34","type":""}],"src":"24686:145:34"},{"body":{"nativeSrc":"24970:213:34","nodeType":"YulBlock","src":"24970:213:34","statements":[{"nativeSrc":"24980:26:34","nodeType":"YulAssignment","src":"24980:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"24992:9:34","nodeType":"YulIdentifier","src":"24992:9:34"},{"kind":"number","nativeSrc":"25003:2:34","nodeType":"YulLiteral","src":"25003:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24988:3:34","nodeType":"YulIdentifier","src":"24988:3:34"},"nativeSrc":"24988:18:34","nodeType":"YulFunctionCall","src":"24988:18:34"},"variableNames":[{"name":"tail","nativeSrc":"24980:4:34","nodeType":"YulIdentifier","src":"24980:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"25067:6:34","nodeType":"YulIdentifier","src":"25067:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"25080:9:34","nodeType":"YulIdentifier","src":"25080:9:34"},{"kind":"number","nativeSrc":"25091:1:34","nodeType":"YulLiteral","src":"25091:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25076:3:34","nodeType":"YulIdentifier","src":"25076:3:34"},"nativeSrc":"25076:17:34","nodeType":"YulFunctionCall","src":"25076:17:34"}],"functionName":{"name":"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack","nativeSrc":"25016:50:34","nodeType":"YulIdentifier","src":"25016:50:34"},"nativeSrc":"25016:78:34","nodeType":"YulFunctionCall","src":"25016:78:34"},"nativeSrc":"25016:78:34","nodeType":"YulExpressionStatement","src":"25016:78:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"25148:6:34","nodeType":"YulIdentifier","src":"25148:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"25161:9:34","nodeType":"YulIdentifier","src":"25161:9:34"},{"kind":"number","nativeSrc":"25172:2:34","nodeType":"YulLiteral","src":"25172:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25157:3:34","nodeType":"YulIdentifier","src":"25157:3:34"},"nativeSrc":"25157:18:34","nodeType":"YulFunctionCall","src":"25157:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"25104:43:34","nodeType":"YulIdentifier","src":"25104:43:34"},"nativeSrc":"25104:72:34","nodeType":"YulFunctionCall","src":"25104:72:34"},"nativeSrc":"25104:72:34","nodeType":"YulExpressionStatement","src":"25104:72:34"}]},"name":"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"24837:346:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24934:9:34","nodeType":"YulTypedName","src":"24934:9:34","type":""},{"name":"value1","nativeSrc":"24946:6:34","nodeType":"YulTypedName","src":"24946:6:34","type":""},{"name":"value0","nativeSrc":"24954:6:34","nodeType":"YulTypedName","src":"24954:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24965:4:34","nodeType":"YulTypedName","src":"24965:4:34","type":""}],"src":"24837:346:34"},{"body":{"nativeSrc":"25315:206:34","nodeType":"YulBlock","src":"25315:206:34","statements":[{"nativeSrc":"25325:26:34","nodeType":"YulAssignment","src":"25325:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"25337:9:34","nodeType":"YulIdentifier","src":"25337:9:34"},{"kind":"number","nativeSrc":"25348:2:34","nodeType":"YulLiteral","src":"25348:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"25333:3:34","nodeType":"YulIdentifier","src":"25333:3:34"},"nativeSrc":"25333:18:34","nodeType":"YulFunctionCall","src":"25333:18:34"},"variableNames":[{"name":"tail","nativeSrc":"25325:4:34","nodeType":"YulIdentifier","src":"25325:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"25405:6:34","nodeType":"YulIdentifier","src":"25405:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"25418:9:34","nodeType":"YulIdentifier","src":"25418:9:34"},{"kind":"number","nativeSrc":"25429:1:34","nodeType":"YulLiteral","src":"25429:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25414:3:34","nodeType":"YulIdentifier","src":"25414:3:34"},"nativeSrc":"25414:17:34","nodeType":"YulFunctionCall","src":"25414:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"25361:43:34","nodeType":"YulIdentifier","src":"25361:43:34"},"nativeSrc":"25361:71:34","nodeType":"YulFunctionCall","src":"25361:71:34"},"nativeSrc":"25361:71:34","nodeType":"YulExpressionStatement","src":"25361:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"25486:6:34","nodeType":"YulIdentifier","src":"25486:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"25499:9:34","nodeType":"YulIdentifier","src":"25499:9:34"},{"kind":"number","nativeSrc":"25510:2:34","nodeType":"YulLiteral","src":"25510:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25495:3:34","nodeType":"YulIdentifier","src":"25495:3:34"},"nativeSrc":"25495:18:34","nodeType":"YulFunctionCall","src":"25495:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"25442:43:34","nodeType":"YulIdentifier","src":"25442:43:34"},"nativeSrc":"25442:72:34","nodeType":"YulFunctionCall","src":"25442:72:34"},"nativeSrc":"25442:72:34","nodeType":"YulExpressionStatement","src":"25442:72:34"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"25189:332:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25279:9:34","nodeType":"YulTypedName","src":"25279:9:34","type":""},{"name":"value1","nativeSrc":"25291:6:34","nodeType":"YulTypedName","src":"25291:6:34","type":""},{"name":"value0","nativeSrc":"25299:6:34","nodeType":"YulTypedName","src":"25299:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25310:4:34","nodeType":"YulTypedName","src":"25310:4:34","type":""}],"src":"25189:332:34"},{"body":{"nativeSrc":"25737:454:34","nodeType":"YulBlock","src":"25737:454:34","statements":[{"nativeSrc":"25747:27:34","nodeType":"YulAssignment","src":"25747:27:34","value":{"arguments":[{"name":"headStart","nativeSrc":"25759:9:34","nodeType":"YulIdentifier","src":"25759:9:34"},{"kind":"number","nativeSrc":"25770:3:34","nodeType":"YulLiteral","src":"25770:3:34","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"25755:3:34","nodeType":"YulIdentifier","src":"25755:3:34"},"nativeSrc":"25755:19:34","nodeType":"YulFunctionCall","src":"25755:19:34"},"variableNames":[{"name":"tail","nativeSrc":"25747:4:34","nodeType":"YulIdentifier","src":"25747:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"25828:6:34","nodeType":"YulIdentifier","src":"25828:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"25841:9:34","nodeType":"YulIdentifier","src":"25841:9:34"},{"kind":"number","nativeSrc":"25852:1:34","nodeType":"YulLiteral","src":"25852:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25837:3:34","nodeType":"YulIdentifier","src":"25837:3:34"},"nativeSrc":"25837:17:34","nodeType":"YulFunctionCall","src":"25837:17:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"25784:43:34","nodeType":"YulIdentifier","src":"25784:43:34"},"nativeSrc":"25784:71:34","nodeType":"YulFunctionCall","src":"25784:71:34"},"nativeSrc":"25784:71:34","nodeType":"YulExpressionStatement","src":"25784:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"25909:6:34","nodeType":"YulIdentifier","src":"25909:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"25922:9:34","nodeType":"YulIdentifier","src":"25922:9:34"},{"kind":"number","nativeSrc":"25933:2:34","nodeType":"YulLiteral","src":"25933:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25918:3:34","nodeType":"YulIdentifier","src":"25918:3:34"},"nativeSrc":"25918:18:34","nodeType":"YulFunctionCall","src":"25918:18:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"25865:43:34","nodeType":"YulIdentifier","src":"25865:43:34"},"nativeSrc":"25865:72:34","nodeType":"YulFunctionCall","src":"25865:72:34"},"nativeSrc":"25865:72:34","nodeType":"YulExpressionStatement","src":"25865:72:34"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"25991:6:34","nodeType":"YulIdentifier","src":"25991:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"26004:9:34","nodeType":"YulIdentifier","src":"26004:9:34"},{"kind":"number","nativeSrc":"26015:2:34","nodeType":"YulLiteral","src":"26015:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26000:3:34","nodeType":"YulIdentifier","src":"26000:3:34"},"nativeSrc":"26000:18:34","nodeType":"YulFunctionCall","src":"26000:18:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"25947:43:34","nodeType":"YulIdentifier","src":"25947:43:34"},"nativeSrc":"25947:72:34","nodeType":"YulFunctionCall","src":"25947:72:34"},"nativeSrc":"25947:72:34","nodeType":"YulExpressionStatement","src":"25947:72:34"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"26073:6:34","nodeType":"YulIdentifier","src":"26073:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"26086:9:34","nodeType":"YulIdentifier","src":"26086:9:34"},{"kind":"number","nativeSrc":"26097:2:34","nodeType":"YulLiteral","src":"26097:2:34","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26082:3:34","nodeType":"YulIdentifier","src":"26082:3:34"},"nativeSrc":"26082:18:34","nodeType":"YulFunctionCall","src":"26082:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"26029:43:34","nodeType":"YulIdentifier","src":"26029:43:34"},"nativeSrc":"26029:72:34","nodeType":"YulFunctionCall","src":"26029:72:34"},"nativeSrc":"26029:72:34","nodeType":"YulExpressionStatement","src":"26029:72:34"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"26155:6:34","nodeType":"YulIdentifier","src":"26155:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"26168:9:34","nodeType":"YulIdentifier","src":"26168:9:34"},{"kind":"number","nativeSrc":"26179:3:34","nodeType":"YulLiteral","src":"26179:3:34","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"26164:3:34","nodeType":"YulIdentifier","src":"26164:3:34"},"nativeSrc":"26164:19:34","nodeType":"YulFunctionCall","src":"26164:19:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"26111:43:34","nodeType":"YulIdentifier","src":"26111:43:34"},"nativeSrc":"26111:73:34","nodeType":"YulFunctionCall","src":"26111:73:34"},"nativeSrc":"26111:73:34","nodeType":"YulExpressionStatement","src":"26111:73:34"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"25527:664:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25677:9:34","nodeType":"YulTypedName","src":"25677:9:34","type":""},{"name":"value4","nativeSrc":"25689:6:34","nodeType":"YulTypedName","src":"25689:6:34","type":""},{"name":"value3","nativeSrc":"25697:6:34","nodeType":"YulTypedName","src":"25697:6:34","type":""},{"name":"value2","nativeSrc":"25705:6:34","nodeType":"YulTypedName","src":"25705:6:34","type":""},{"name":"value1","nativeSrc":"25713:6:34","nodeType":"YulTypedName","src":"25713:6:34","type":""},{"name":"value0","nativeSrc":"25721:6:34","nodeType":"YulTypedName","src":"25721:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25732:4:34","nodeType":"YulTypedName","src":"25732:4:34","type":""}],"src":"25527:664:34"},{"body":{"nativeSrc":"26225:152:34","nodeType":"YulBlock","src":"26225:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"26242:1:34","nodeType":"YulLiteral","src":"26242:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"26245:77:34","nodeType":"YulLiteral","src":"26245:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"26235:6:34","nodeType":"YulIdentifier","src":"26235:6:34"},"nativeSrc":"26235:88:34","nodeType":"YulFunctionCall","src":"26235:88:34"},"nativeSrc":"26235:88:34","nodeType":"YulExpressionStatement","src":"26235:88:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"26339:1:34","nodeType":"YulLiteral","src":"26339:1:34","type":"","value":"4"},{"kind":"number","nativeSrc":"26342:4:34","nodeType":"YulLiteral","src":"26342:4:34","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"26332:6:34","nodeType":"YulIdentifier","src":"26332:6:34"},"nativeSrc":"26332:15:34","nodeType":"YulFunctionCall","src":"26332:15:34"},"nativeSrc":"26332:15:34","nodeType":"YulExpressionStatement","src":"26332:15:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"26363:1:34","nodeType":"YulLiteral","src":"26363:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"26366:4:34","nodeType":"YulLiteral","src":"26366:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"26356:6:34","nodeType":"YulIdentifier","src":"26356:6:34"},"nativeSrc":"26356:15:34","nodeType":"YulFunctionCall","src":"26356:15:34"},"nativeSrc":"26356:15:34","nodeType":"YulExpressionStatement","src":"26356:15:34"}]},"name":"panic_error_0x12","nativeSrc":"26197:180:34","nodeType":"YulFunctionDefinition","src":"26197:180:34"},{"body":{"nativeSrc":"26509:206:34","nodeType":"YulBlock","src":"26509:206:34","statements":[{"nativeSrc":"26519:26:34","nodeType":"YulAssignment","src":"26519:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"26531:9:34","nodeType":"YulIdentifier","src":"26531:9:34"},{"kind":"number","nativeSrc":"26542:2:34","nodeType":"YulLiteral","src":"26542:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26527:3:34","nodeType":"YulIdentifier","src":"26527:3:34"},"nativeSrc":"26527:18:34","nodeType":"YulFunctionCall","src":"26527:18:34"},"variableNames":[{"name":"tail","nativeSrc":"26519:4:34","nodeType":"YulIdentifier","src":"26519:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"26599:6:34","nodeType":"YulIdentifier","src":"26599:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"26612:9:34","nodeType":"YulIdentifier","src":"26612:9:34"},{"kind":"number","nativeSrc":"26623:1:34","nodeType":"YulLiteral","src":"26623:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26608:3:34","nodeType":"YulIdentifier","src":"26608:3:34"},"nativeSrc":"26608:17:34","nodeType":"YulFunctionCall","src":"26608:17:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"26555:43:34","nodeType":"YulIdentifier","src":"26555:43:34"},"nativeSrc":"26555:71:34","nodeType":"YulFunctionCall","src":"26555:71:34"},"nativeSrc":"26555:71:34","nodeType":"YulExpressionStatement","src":"26555:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"26680:6:34","nodeType":"YulIdentifier","src":"26680:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"26693:9:34","nodeType":"YulIdentifier","src":"26693:9:34"},{"kind":"number","nativeSrc":"26704:2:34","nodeType":"YulLiteral","src":"26704:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26689:3:34","nodeType":"YulIdentifier","src":"26689:3:34"},"nativeSrc":"26689:18:34","nodeType":"YulFunctionCall","src":"26689:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"26636:43:34","nodeType":"YulIdentifier","src":"26636:43:34"},"nativeSrc":"26636:72:34","nodeType":"YulFunctionCall","src":"26636:72:34"},"nativeSrc":"26636:72:34","nodeType":"YulExpressionStatement","src":"26636:72:34"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"26383:332:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26473:9:34","nodeType":"YulTypedName","src":"26473:9:34","type":""},{"name":"value1","nativeSrc":"26485:6:34","nodeType":"YulTypedName","src":"26485:6:34","type":""},{"name":"value0","nativeSrc":"26493:6:34","nodeType":"YulTypedName","src":"26493:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26504:4:34","nodeType":"YulTypedName","src":"26504:4:34","type":""}],"src":"26383:332:34"},{"body":{"nativeSrc":"26775:32:34","nodeType":"YulBlock","src":"26775:32:34","statements":[{"nativeSrc":"26785:16:34","nodeType":"YulAssignment","src":"26785:16:34","value":{"name":"value","nativeSrc":"26796:5:34","nodeType":"YulIdentifier","src":"26796:5:34"},"variableNames":[{"name":"cleaned","nativeSrc":"26785:7:34","nodeType":"YulIdentifier","src":"26785:7:34"}]}]},"name":"cleanup_t_rational_32_by_1","nativeSrc":"26721:86:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"26757:5:34","nodeType":"YulTypedName","src":"26757:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"26767:7:34","nodeType":"YulTypedName","src":"26767:7:34","type":""}],"src":"26721:86:34"},{"body":{"nativeSrc":"26880:89:34","nodeType":"YulBlock","src":"26880:89:34","statements":[{"nativeSrc":"26890:73:34","nodeType":"YulAssignment","src":"26890:73:34","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"26955:5:34","nodeType":"YulIdentifier","src":"26955:5:34"}],"functionName":{"name":"cleanup_t_rational_32_by_1","nativeSrc":"26928:26:34","nodeType":"YulIdentifier","src":"26928:26:34"},"nativeSrc":"26928:33:34","nodeType":"YulFunctionCall","src":"26928:33:34"}],"functionName":{"name":"identity","nativeSrc":"26919:8:34","nodeType":"YulIdentifier","src":"26919:8:34"},"nativeSrc":"26919:43:34","nodeType":"YulFunctionCall","src":"26919:43:34"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"26903:15:34","nodeType":"YulIdentifier","src":"26903:15:34"},"nativeSrc":"26903:60:34","nodeType":"YulFunctionCall","src":"26903:60:34"},"variableNames":[{"name":"converted","nativeSrc":"26890:9:34","nodeType":"YulIdentifier","src":"26890:9:34"}]}]},"name":"convert_t_rational_32_by_1_to_t_uint8","nativeSrc":"26813:156:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"26860:5:34","nodeType":"YulTypedName","src":"26860:5:34","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"26870:9:34","nodeType":"YulTypedName","src":"26870:9:34","type":""}],"src":"26813:156:34"},{"body":{"nativeSrc":"27047:73:34","nodeType":"YulBlock","src":"27047:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"27064:3:34","nodeType":"YulIdentifier","src":"27064:3:34"},{"arguments":[{"name":"value","nativeSrc":"27107:5:34","nodeType":"YulIdentifier","src":"27107:5:34"}],"functionName":{"name":"convert_t_rational_32_by_1_to_t_uint8","nativeSrc":"27069:37:34","nodeType":"YulIdentifier","src":"27069:37:34"},"nativeSrc":"27069:44:34","nodeType":"YulFunctionCall","src":"27069:44:34"}],"functionName":{"name":"mstore","nativeSrc":"27057:6:34","nodeType":"YulIdentifier","src":"27057:6:34"},"nativeSrc":"27057:57:34","nodeType":"YulFunctionCall","src":"27057:57:34"},"nativeSrc":"27057:57:34","nodeType":"YulExpressionStatement","src":"27057:57:34"}]},"name":"abi_encode_t_rational_32_by_1_to_t_uint8_fromStack","nativeSrc":"26975:145:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27035:5:34","nodeType":"YulTypedName","src":"27035:5:34","type":""},{"name":"pos","nativeSrc":"27042:3:34","nodeType":"YulTypedName","src":"27042:3:34","type":""}],"src":"26975:145:34"},{"body":{"nativeSrc":"27259:213:34","nodeType":"YulBlock","src":"27259:213:34","statements":[{"nativeSrc":"27269:26:34","nodeType":"YulAssignment","src":"27269:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"27281:9:34","nodeType":"YulIdentifier","src":"27281:9:34"},{"kind":"number","nativeSrc":"27292:2:34","nodeType":"YulLiteral","src":"27292:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27277:3:34","nodeType":"YulIdentifier","src":"27277:3:34"},"nativeSrc":"27277:18:34","nodeType":"YulFunctionCall","src":"27277:18:34"},"variableNames":[{"name":"tail","nativeSrc":"27269:4:34","nodeType":"YulIdentifier","src":"27269:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"27356:6:34","nodeType":"YulIdentifier","src":"27356:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"27369:9:34","nodeType":"YulIdentifier","src":"27369:9:34"},{"kind":"number","nativeSrc":"27380:1:34","nodeType":"YulLiteral","src":"27380:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27365:3:34","nodeType":"YulIdentifier","src":"27365:3:34"},"nativeSrc":"27365:17:34","nodeType":"YulFunctionCall","src":"27365:17:34"}],"functionName":{"name":"abi_encode_t_rational_32_by_1_to_t_uint8_fromStack","nativeSrc":"27305:50:34","nodeType":"YulIdentifier","src":"27305:50:34"},"nativeSrc":"27305:78:34","nodeType":"YulFunctionCall","src":"27305:78:34"},"nativeSrc":"27305:78:34","nodeType":"YulExpressionStatement","src":"27305:78:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"27437:6:34","nodeType":"YulIdentifier","src":"27437:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"27450:9:34","nodeType":"YulIdentifier","src":"27450:9:34"},{"kind":"number","nativeSrc":"27461:2:34","nodeType":"YulLiteral","src":"27461:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27446:3:34","nodeType":"YulIdentifier","src":"27446:3:34"},"nativeSrc":"27446:18:34","nodeType":"YulFunctionCall","src":"27446:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"27393:43:34","nodeType":"YulIdentifier","src":"27393:43:34"},"nativeSrc":"27393:72:34","nodeType":"YulFunctionCall","src":"27393:72:34"},"nativeSrc":"27393:72:34","nodeType":"YulExpressionStatement","src":"27393:72:34"}]},"name":"abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"27126:346:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27223:9:34","nodeType":"YulTypedName","src":"27223:9:34","type":""},{"name":"value1","nativeSrc":"27235:6:34","nodeType":"YulTypedName","src":"27235:6:34","type":""},{"name":"value0","nativeSrc":"27243:6:34","nodeType":"YulTypedName","src":"27243:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27254:4:34","nodeType":"YulTypedName","src":"27254:4:34","type":""}],"src":"27126:346:34"},{"body":{"nativeSrc":"27656:367:34","nodeType":"YulBlock","src":"27656:367:34","statements":[{"nativeSrc":"27666:27:34","nodeType":"YulAssignment","src":"27666:27:34","value":{"arguments":[{"name":"headStart","nativeSrc":"27678:9:34","nodeType":"YulIdentifier","src":"27678:9:34"},{"kind":"number","nativeSrc":"27689:3:34","nodeType":"YulLiteral","src":"27689:3:34","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"27674:3:34","nodeType":"YulIdentifier","src":"27674:3:34"},"nativeSrc":"27674:19:34","nodeType":"YulFunctionCall","src":"27674:19:34"},"variableNames":[{"name":"tail","nativeSrc":"27666:4:34","nodeType":"YulIdentifier","src":"27666:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"27747:6:34","nodeType":"YulIdentifier","src":"27747:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"27760:9:34","nodeType":"YulIdentifier","src":"27760:9:34"},{"kind":"number","nativeSrc":"27771:1:34","nodeType":"YulLiteral","src":"27771:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27756:3:34","nodeType":"YulIdentifier","src":"27756:3:34"},"nativeSrc":"27756:17:34","nodeType":"YulFunctionCall","src":"27756:17:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"27703:43:34","nodeType":"YulIdentifier","src":"27703:43:34"},"nativeSrc":"27703:71:34","nodeType":"YulFunctionCall","src":"27703:71:34"},"nativeSrc":"27703:71:34","nodeType":"YulExpressionStatement","src":"27703:71:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"27824:6:34","nodeType":"YulIdentifier","src":"27824:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"27837:9:34","nodeType":"YulIdentifier","src":"27837:9:34"},{"kind":"number","nativeSrc":"27848:2:34","nodeType":"YulLiteral","src":"27848:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27833:3:34","nodeType":"YulIdentifier","src":"27833:3:34"},"nativeSrc":"27833:18:34","nodeType":"YulFunctionCall","src":"27833:18:34"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"27784:39:34","nodeType":"YulIdentifier","src":"27784:39:34"},"nativeSrc":"27784:68:34","nodeType":"YulFunctionCall","src":"27784:68:34"},"nativeSrc":"27784:68:34","nodeType":"YulExpressionStatement","src":"27784:68:34"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"27906:6:34","nodeType":"YulIdentifier","src":"27906:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"27919:9:34","nodeType":"YulIdentifier","src":"27919:9:34"},{"kind":"number","nativeSrc":"27930:2:34","nodeType":"YulLiteral","src":"27930:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27915:3:34","nodeType":"YulIdentifier","src":"27915:3:34"},"nativeSrc":"27915:18:34","nodeType":"YulFunctionCall","src":"27915:18:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"27862:43:34","nodeType":"YulIdentifier","src":"27862:43:34"},"nativeSrc":"27862:72:34","nodeType":"YulFunctionCall","src":"27862:72:34"},"nativeSrc":"27862:72:34","nodeType":"YulExpressionStatement","src":"27862:72:34"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"27988:6:34","nodeType":"YulIdentifier","src":"27988:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"28001:9:34","nodeType":"YulIdentifier","src":"28001:9:34"},{"kind":"number","nativeSrc":"28012:2:34","nodeType":"YulLiteral","src":"28012:2:34","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"27997:3:34","nodeType":"YulIdentifier","src":"27997:3:34"},"nativeSrc":"27997:18:34","nodeType":"YulFunctionCall","src":"27997:18:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"27944:43:34","nodeType":"YulIdentifier","src":"27944:43:34"},"nativeSrc":"27944:72:34","nodeType":"YulFunctionCall","src":"27944:72:34"},"nativeSrc":"27944:72:34","nodeType":"YulExpressionStatement","src":"27944:72:34"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"27478:545:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27604:9:34","nodeType":"YulTypedName","src":"27604:9:34","type":""},{"name":"value3","nativeSrc":"27616:6:34","nodeType":"YulTypedName","src":"27616:6:34","type":""},{"name":"value2","nativeSrc":"27624:6:34","nodeType":"YulTypedName","src":"27624:6:34","type":""},{"name":"value1","nativeSrc":"27632:6:34","nodeType":"YulTypedName","src":"27632:6:34","type":""},{"name":"value0","nativeSrc":"27640:6:34","nodeType":"YulTypedName","src":"27640:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27651:4:34","nodeType":"YulTypedName","src":"27651:4:34","type":""}],"src":"27478:545:34"},{"body":{"nativeSrc":"28057:152:34","nodeType":"YulBlock","src":"28057:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"28074:1:34","nodeType":"YulLiteral","src":"28074:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"28077:77:34","nodeType":"YulLiteral","src":"28077:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"28067:6:34","nodeType":"YulIdentifier","src":"28067:6:34"},"nativeSrc":"28067:88:34","nodeType":"YulFunctionCall","src":"28067:88:34"},"nativeSrc":"28067:88:34","nodeType":"YulExpressionStatement","src":"28067:88:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28171:1:34","nodeType":"YulLiteral","src":"28171:1:34","type":"","value":"4"},{"kind":"number","nativeSrc":"28174:4:34","nodeType":"YulLiteral","src":"28174:4:34","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"28164:6:34","nodeType":"YulIdentifier","src":"28164:6:34"},"nativeSrc":"28164:15:34","nodeType":"YulFunctionCall","src":"28164:15:34"},"nativeSrc":"28164:15:34","nodeType":"YulExpressionStatement","src":"28164:15:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28195:1:34","nodeType":"YulLiteral","src":"28195:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"28198:4:34","nodeType":"YulLiteral","src":"28198:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"28188:6:34","nodeType":"YulIdentifier","src":"28188:6:34"},"nativeSrc":"28188:15:34","nodeType":"YulFunctionCall","src":"28188:15:34"},"nativeSrc":"28188:15:34","nodeType":"YulExpressionStatement","src":"28188:15:34"}]},"name":"panic_error_0x21","nativeSrc":"28029:180:34","nodeType":"YulFunctionDefinition","src":"28029:180:34"},{"body":{"nativeSrc":"28243:152:34","nodeType":"YulBlock","src":"28243:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"28260:1:34","nodeType":"YulLiteral","src":"28260:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"28263:77:34","nodeType":"YulLiteral","src":"28263:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"28253:6:34","nodeType":"YulIdentifier","src":"28253:6:34"},"nativeSrc":"28253:88:34","nodeType":"YulFunctionCall","src":"28253:88:34"},"nativeSrc":"28253:88:34","nodeType":"YulExpressionStatement","src":"28253:88:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28357:1:34","nodeType":"YulLiteral","src":"28357:1:34","type":"","value":"4"},{"kind":"number","nativeSrc":"28360:4:34","nodeType":"YulLiteral","src":"28360:4:34","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"28350:6:34","nodeType":"YulIdentifier","src":"28350:6:34"},"nativeSrc":"28350:15:34","nodeType":"YulFunctionCall","src":"28350:15:34"},"nativeSrc":"28350:15:34","nodeType":"YulExpressionStatement","src":"28350:15:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28381:1:34","nodeType":"YulLiteral","src":"28381:1:34","type":"","value":"0"},{"kind":"number","nativeSrc":"28384:4:34","nodeType":"YulLiteral","src":"28384:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"28374:6:34","nodeType":"YulIdentifier","src":"28374:6:34"},"nativeSrc":"28374:15:34","nodeType":"YulFunctionCall","src":"28374:15:34"},"nativeSrc":"28374:15:34","nodeType":"YulExpressionStatement","src":"28374:15:34"}]},"name":"panic_error_0x32","nativeSrc":"28215:180:34","nodeType":"YulFunctionDefinition","src":"28215:180:34"},{"body":{"nativeSrc":"28443:143:34","nodeType":"YulBlock","src":"28443:143:34","statements":[{"nativeSrc":"28453:25:34","nodeType":"YulAssignment","src":"28453:25:34","value":{"arguments":[{"name":"x","nativeSrc":"28476:1:34","nodeType":"YulIdentifier","src":"28476:1:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"28458:17:34","nodeType":"YulIdentifier","src":"28458:17:34"},"nativeSrc":"28458:20:34","nodeType":"YulFunctionCall","src":"28458:20:34"},"variableNames":[{"name":"x","nativeSrc":"28453:1:34","nodeType":"YulIdentifier","src":"28453:1:34"}]},{"nativeSrc":"28487:25:34","nodeType":"YulAssignment","src":"28487:25:34","value":{"arguments":[{"name":"y","nativeSrc":"28510:1:34","nodeType":"YulIdentifier","src":"28510:1:34"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"28492:17:34","nodeType":"YulIdentifier","src":"28492:17:34"},"nativeSrc":"28492:20:34","nodeType":"YulFunctionCall","src":"28492:20:34"},"variableNames":[{"name":"y","nativeSrc":"28487:1:34","nodeType":"YulIdentifier","src":"28487:1:34"}]},{"body":{"nativeSrc":"28534:22:34","nodeType":"YulBlock","src":"28534:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"28536:16:34","nodeType":"YulIdentifier","src":"28536:16:34"},"nativeSrc":"28536:18:34","nodeType":"YulFunctionCall","src":"28536:18:34"},"nativeSrc":"28536:18:34","nodeType":"YulExpressionStatement","src":"28536:18:34"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"28531:1:34","nodeType":"YulIdentifier","src":"28531:1:34"}],"functionName":{"name":"iszero","nativeSrc":"28524:6:34","nodeType":"YulIdentifier","src":"28524:6:34"},"nativeSrc":"28524:9:34","nodeType":"YulFunctionCall","src":"28524:9:34"},"nativeSrc":"28521:35:34","nodeType":"YulIf","src":"28521:35:34"},{"nativeSrc":"28566:14:34","nodeType":"YulAssignment","src":"28566:14:34","value":{"arguments":[{"name":"x","nativeSrc":"28575:1:34","nodeType":"YulIdentifier","src":"28575:1:34"},{"name":"y","nativeSrc":"28578:1:34","nodeType":"YulIdentifier","src":"28578:1:34"}],"functionName":{"name":"div","nativeSrc":"28571:3:34","nodeType":"YulIdentifier","src":"28571:3:34"},"nativeSrc":"28571:9:34","nodeType":"YulFunctionCall","src":"28571:9:34"},"variableNames":[{"name":"r","nativeSrc":"28566:1:34","nodeType":"YulIdentifier","src":"28566:1:34"}]}]},"name":"checked_div_t_uint256","nativeSrc":"28401:185:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"28432:1:34","nodeType":"YulTypedName","src":"28432:1:34","type":""},{"name":"y","nativeSrc":"28435:1:34","nodeType":"YulTypedName","src":"28435:1:34","type":""}],"returnVariables":[{"name":"r","nativeSrc":"28441:1:34","nodeType":"YulTypedName","src":"28441:1:34","type":""}],"src":"28401:185:34"},{"body":{"nativeSrc":"28647:32:34","nodeType":"YulBlock","src":"28647:32:34","statements":[{"nativeSrc":"28657:16:34","nodeType":"YulAssignment","src":"28657:16:34","value":{"name":"value","nativeSrc":"28668:5:34","nodeType":"YulIdentifier","src":"28668:5:34"},"variableNames":[{"name":"cleaned","nativeSrc":"28657:7:34","nodeType":"YulIdentifier","src":"28657:7:34"}]}]},"name":"cleanup_t_rational_208_by_1","nativeSrc":"28592:87:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"28629:5:34","nodeType":"YulTypedName","src":"28629:5:34","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"28639:7:34","nodeType":"YulTypedName","src":"28639:7:34","type":""}],"src":"28592:87:34"},{"body":{"nativeSrc":"28753:90:34","nodeType":"YulBlock","src":"28753:90:34","statements":[{"nativeSrc":"28763:74:34","nodeType":"YulAssignment","src":"28763:74:34","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"28829:5:34","nodeType":"YulIdentifier","src":"28829:5:34"}],"functionName":{"name":"cleanup_t_rational_208_by_1","nativeSrc":"28801:27:34","nodeType":"YulIdentifier","src":"28801:27:34"},"nativeSrc":"28801:34:34","nodeType":"YulFunctionCall","src":"28801:34:34"}],"functionName":{"name":"identity","nativeSrc":"28792:8:34","nodeType":"YulIdentifier","src":"28792:8:34"},"nativeSrc":"28792:44:34","nodeType":"YulFunctionCall","src":"28792:44:34"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"28776:15:34","nodeType":"YulIdentifier","src":"28776:15:34"},"nativeSrc":"28776:61:34","nodeType":"YulFunctionCall","src":"28776:61:34"},"variableNames":[{"name":"converted","nativeSrc":"28763:9:34","nodeType":"YulIdentifier","src":"28763:9:34"}]}]},"name":"convert_t_rational_208_by_1_to_t_uint8","nativeSrc":"28685:158:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"28733:5:34","nodeType":"YulTypedName","src":"28733:5:34","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"28743:9:34","nodeType":"YulTypedName","src":"28743:9:34","type":""}],"src":"28685:158:34"},{"body":{"nativeSrc":"28922:74:34","nodeType":"YulBlock","src":"28922:74:34","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"28939:3:34","nodeType":"YulIdentifier","src":"28939:3:34"},{"arguments":[{"name":"value","nativeSrc":"28983:5:34","nodeType":"YulIdentifier","src":"28983:5:34"}],"functionName":{"name":"convert_t_rational_208_by_1_to_t_uint8","nativeSrc":"28944:38:34","nodeType":"YulIdentifier","src":"28944:38:34"},"nativeSrc":"28944:45:34","nodeType":"YulFunctionCall","src":"28944:45:34"}],"functionName":{"name":"mstore","nativeSrc":"28932:6:34","nodeType":"YulIdentifier","src":"28932:6:34"},"nativeSrc":"28932:58:34","nodeType":"YulFunctionCall","src":"28932:58:34"},"nativeSrc":"28932:58:34","nodeType":"YulExpressionStatement","src":"28932:58:34"}]},"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nativeSrc":"28849:147:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"28910:5:34","nodeType":"YulTypedName","src":"28910:5:34","type":""},{"name":"pos","nativeSrc":"28917:3:34","nodeType":"YulTypedName","src":"28917:3:34","type":""}],"src":"28849:147:34"},{"body":{"nativeSrc":"29136:214:34","nodeType":"YulBlock","src":"29136:214:34","statements":[{"nativeSrc":"29146:26:34","nodeType":"YulAssignment","src":"29146:26:34","value":{"arguments":[{"name":"headStart","nativeSrc":"29158:9:34","nodeType":"YulIdentifier","src":"29158:9:34"},{"kind":"number","nativeSrc":"29169:2:34","nodeType":"YulLiteral","src":"29169:2:34","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29154:3:34","nodeType":"YulIdentifier","src":"29154:3:34"},"nativeSrc":"29154:18:34","nodeType":"YulFunctionCall","src":"29154:18:34"},"variableNames":[{"name":"tail","nativeSrc":"29146:4:34","nodeType":"YulIdentifier","src":"29146:4:34"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"29234:6:34","nodeType":"YulIdentifier","src":"29234:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"29247:9:34","nodeType":"YulIdentifier","src":"29247:9:34"},{"kind":"number","nativeSrc":"29258:1:34","nodeType":"YulLiteral","src":"29258:1:34","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29243:3:34","nodeType":"YulIdentifier","src":"29243:3:34"},"nativeSrc":"29243:17:34","nodeType":"YulFunctionCall","src":"29243:17:34"}],"functionName":{"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nativeSrc":"29182:51:34","nodeType":"YulIdentifier","src":"29182:51:34"},"nativeSrc":"29182:79:34","nodeType":"YulFunctionCall","src":"29182:79:34"},"nativeSrc":"29182:79:34","nodeType":"YulExpressionStatement","src":"29182:79:34"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"29315:6:34","nodeType":"YulIdentifier","src":"29315:6:34"},{"arguments":[{"name":"headStart","nativeSrc":"29328:9:34","nodeType":"YulIdentifier","src":"29328:9:34"},{"kind":"number","nativeSrc":"29339:2:34","nodeType":"YulLiteral","src":"29339:2:34","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29324:3:34","nodeType":"YulIdentifier","src":"29324:3:34"},"nativeSrc":"29324:18:34","nodeType":"YulFunctionCall","src":"29324:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"29271:43:34","nodeType":"YulIdentifier","src":"29271:43:34"},"nativeSrc":"29271:72:34","nodeType":"YulFunctionCall","src":"29271:72:34"},"nativeSrc":"29271:72:34","nodeType":"YulExpressionStatement","src":"29271:72:34"}]},"name":"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"29002:348:34","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29100:9:34","nodeType":"YulTypedName","src":"29100:9:34","type":""},{"name":"value1","nativeSrc":"29112:6:34","nodeType":"YulTypedName","src":"29112:6:34","type":""},{"name":"value0","nativeSrc":"29120:6:34","nodeType":"YulTypedName","src":"29120:6:34","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29131:4:34","nodeType":"YulTypedName","src":"29131:4:34","type":""}],"src":"29002:348:34"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IERC3156FlashBorrower_$797(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC3156FlashBorrower_$797(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC3156FlashBorrower_$797(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC3156FlashBorrower_$797(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC3156FlashBorrower_$797(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_contract$_IERC3156FlashBorrower_$797t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC3156FlashBorrower_$797(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint48_to_t_uint48(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function cleanup_t_uint208(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint208_to_t_uint208(value, pos) {\n        mstore(pos, cleanup_t_uint208(value))\n    }\n\n    // struct Checkpoints.Checkpoint208 -> struct Checkpoints.Checkpoint208\n    function abi_encode_t_struct$_Checkpoint208_$7923_memory_ptr_to_t_struct$_Checkpoint208_$7923_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // _key\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint48_to_t_uint48(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // _value\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint208_to_t_uint208(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint208_$7923_memory_ptr__to_t_struct$_Checkpoint208_$7923_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint208_$7923_memory_ptr_to_t_struct$_Checkpoint208_$7923_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value4, value5,  tail)\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint208(x, y) -> sum {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint208(x, y) -> diff {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_rational_48_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_48_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_48_by_1(value)))\n    }\n\n    function abi_encode_t_rational_48_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_48_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_48_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_32_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_32_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_32_by_1(value)))\n    }\n\n    function abi_encode_t_rational_32_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_32_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_32_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_rational_208_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_208_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_208_by_1(value)))\n    }\n\n    function abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_208_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":34,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3586":[{"length":32,"start":5689}],"3588":[{"length":32,"start":5648}],"3590":[{"length":32,"start":5562}],"3592":[{"length":32,"start":8359}],"3594":[{"length":32,"start":8392}],"3597":[{"length":32,"start":7268}],"3600":[{"length":32,"start":7327}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102275760003560e01c806370a082311161013057806395d89b41116100b8578063d9d98ce41161007c578063d9d98ce414610682578063dd62ed3e146106b2578063f1127ed8146106e2578063f2fde38b14610712578063f8b2cb4f1461072e57610227565b806395d89b41146105cc5780639ab24eb0146105ea578063a9059cbb1461061a578063c3cda5201461064a578063d505accf1461066657610227565b80638456cb59116100ff5780638456cb591461053257806384b0196e1461053c5780638da5cb5b146105605780638e539e8c1461057e57806391ddadf4146105ae57610227565b806370a08231146104ac578063715018a6146104dc57806379cc6790146104e65780637ecebe001461050257610227565b806342966c68116101b35780635c975abb116101825780635c975abb146103e05780635cffe9de146103fe578063601e26031461042e578063613255ab1461044c5780636fcfff451461047c57610227565b806342966c681461035a5780634bf5d7e914610376578063587cde1e146103945780635c19a95c146103c457610227565b8063313ce567116101fa578063313ce567146102c85780633644e515146102e65780633a46b1a8146103045780633f4ba83a1461033457806340c10f191461033e57610227565b806306fdde031461022c578063095ea7b31461024a57806318160ddd1461027a57806323b872dd14610298575b600080fd5b61023461075e565b6040516102419190613487565b60405180910390f35b610264600480360381019061025f9190613547565b6107f0565b60405161027191906135a2565b60405180910390f35b610282610813565b60405161028f91906135cc565b60405180910390f35b6102b260048036038101906102ad91906135e7565b61081d565b6040516102bf91906135a2565b60405180910390f35b6102d061084c565b6040516102dd9190613656565b60405180910390f35b6102ee610855565b6040516102fb919061368a565b60405180910390f35b61031e60048036038101906103199190613547565b610864565b60405161032b91906135cc565b60405180910390f35b61033c61093d565b005b61035860048036038101906103539190613547565b61094f565b005b610374600480360381019061036f91906136a5565b610965565b005b61037e610979565b60405161038b9190613487565b60405180910390f35b6103ae60048036038101906103a991906136d2565b6109b6565b6040516103bb919061370e565b60405180910390f35b6103de60048036038101906103d991906136d2565b610a1f565b005b6103e8610a39565b6040516103f591906135a2565b60405180910390f35b610418600480360381019061041391906137cc565b610a50565b60405161042591906135a2565b60405180910390f35b610436610c4d565b60405161044391906135cc565b60405180910390f35b610466600480360381019061046191906136d2565b610c5c565b60405161047391906135cc565b60405180910390f35b610496600480360381019061049191906136d2565b610cd3565b6040516104a39190613873565b60405180910390f35b6104c660048036038101906104c191906136d2565b610ce5565b6040516104d391906135cc565b60405180910390f35b6104e4610d2d565b005b61050060048036038101906104fb9190613547565b610d41565b005b61051c600480360381019061051791906136d2565b610d61565b60405161052991906135cc565b60405180910390f35b61053a610d73565b005b610544610d85565b6040516105579796959493929190613987565b60405180910390f35b610568610e2f565b604051610575919061370e565b60405180910390f35b610598600480360381019061059391906136a5565b610e59565b6040516105a591906135cc565b60405180910390f35b6105b6610ef4565b6040516105c39190613a2c565b60405180910390f35b6105d4610efc565b6040516105e19190613487565b60405180910390f35b61060460048036038101906105ff91906136d2565b610f8e565b60405161061191906135cc565b60405180910390f35b610634600480360381019061062f9190613547565b610ffa565b60405161064191906135a2565b60405180910390f35b610664600480360381019061065f9190613a9f565b61101d565b005b610680600480360381019061067b9190613b2c565b6110e3565b005b61069c60048036038101906106979190613547565b61122b565b6040516106a991906135cc565b60405180910390f35b6106cc60048036038101906106c79190613bce565b6112af565b6040516106d991906135cc565b60405180910390f35b6106fc60048036038101906106f79190613c3a565b611336565b6040516107099190613ced565b60405180910390f35b61072c600480360381019061072791906136d2565b611350565b005b610748600480360381019061074391906136d2565b6113d6565b60405161075591906135cc565b60405180910390f35b60606003805461076d90613d37565b80601f016020809104026020016040519081016040528092919081815260200182805461079990613d37565b80156107e65780601f106107bb576101008083540402835291602001916107e6565b820191906000526020600020905b8154815290600101906020018083116107c957829003601f168201915b5050505050905090565b6000806107fb611414565b905061080881858561141c565b600191505092915050565b6000600254905090565b600080610828611414565b905061083585828561142e565b6108408585856114c2565b60019150509392505050565b60006012905090565b600061085f6115b6565b905090565b60008061086f610ef4565b90508065ffffffffffff1683106108bf5782816040517fecd3f81e0000000000000000000000000000000000000000000000000000000081526004016108b6929190613d68565b60405180910390fd5b6109186108cb8461166d565b600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206116c790919063ffffffff16565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1691505092915050565b6109456117c1565b61094d611848565b565b6109576117c1565b61096182826118ab565b5050565b610976610970611414565b8261192d565b50565b60606040518060400160405280600e81526020017f6d6f64653d74696d657374616d70000000000000000000000000000000000000815250905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a29611414565b9050610a3581836119af565b5050565b6000600560009054906101000a900460ff16905090565b600080610a5c86610c5c565b905080851115610aa357806040517ffd9a7609000000000000000000000000000000000000000000000000000000008152600401610a9a91906135cc565b60405180910390fd5b6000610aaf878761122b565b9050610abb88876118ab565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd98873ffffffffffffffffffffffffffffffffffffffff166323e30c8b610b00611414565b8a8a868b8b6040518763ffffffff1660e01b8152600401610b2696959493929190613dde565b6020604051808303816000875af1158015610b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b699190613e4f565b14610bab57876040517f678c5b00000000000000000000000000000000000000000000000000000000008152600401610ba2919061370e565b60405180910390fd5b6000610bb5611ac3565b9050610bcd8930848a610bc89190613eab565b61142e565b6000821480610c085750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15610c2757610c22898389610c1d9190613eab565b61192d565b610c3d565b610c31898861192d565b610c3c8982846114c2565b5b6001935050505095945050505050565b6000610c57610813565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610c98576000610ccc565b610ca0610813565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610ccb9190613edf565b5b9050919050565b6000610cde82611ac8565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610d356117c1565b610d3f6000611b20565b565b610d5382610d4d611414565b8361142e565b610d5d828261192d565b5050565b6000610d6c82611be6565b9050919050565b610d7b6117c1565b610d83611bf8565b565b600060608060008060006060610d99611c5b565b610da1611c96565b46306000801b600067ffffffffffffffff811115610dc257610dc1613f13565b5b604051908082528060200260200182016040528015610df05781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080610e64610ef4565b90508065ffffffffffff168310610eb45782816040517fecd3f81e000000000000000000000000000000000000000000000000000000008152600401610eab929190613d68565b60405180910390fd5b610ed0610ec08461166d565b600b6116c790919063ffffffff16565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b600042905090565b606060048054610f0b90613d37565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3790613d37565b8015610f845780601f10610f5957610100808354040283529160200191610f84565b820191906000526020600020905b815481529060010190602001808311610f6757829003601f168201915b5050505050905090565b6000610fd7600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611cd1565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff169050919050565b600080611005611414565b90506110128185856114c2565b600191505092915050565b8342111561106257836040517f4683af0e00000000000000000000000000000000000000000000000000000000815260040161105991906135cc565b60405180910390fd5b60006110c46110bc7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf8989896040516020016110a19493929190613f42565b60405160208183030381529060405280519060200120611d39565b858585611d53565b90506110d08187611d83565b6110da81886119af565b50505050505050565b8342111561112857836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161111f91906135cc565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886111578c611ddb565b8960405160200161116d96959493929190613f87565b604051602081830303815290604052805190602001209050600061119082611d39565b905060006111a082878787611d53565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461121457808a6040517f4b800e4600000000000000000000000000000000000000000000000000000000815260040161120b929190613fe8565b60405180910390fd5b61121f8a8a8a61141c565b50505050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461129d57826040517fb5a7db92000000000000000000000000000000000000000000000000000000008152600401611294919061370e565b60405180910390fd5b6112a78383611e32565b905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61133e6133b9565b6113488383611e3a565b905092915050565b6113586117c1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113ca5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113c1919061370e565b60405180910390fd5b6113d381611b20565b50565b60006113e182610ce5565b9050919050565b600081836113f69190614011565b905092915050565b6000818361140c919061405f565b905092915050565b600033905090565b6114298383836001611e9b565b505050565b600061143a84846112af565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114bc57818110156114ac578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016114a3939291906140ad565b60405180910390fd5b6114bb84848484036000611e9b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115345760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161152b919061370e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115a65760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161159d919061370e565b60405180910390fd5b6115b1838383612072565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561163257507f000000000000000000000000000000000000000000000000000000000000000046145b1561165f577f0000000000000000000000000000000000000000000000000000000000000000905061166a565b611667612082565b90505b90565b600065ffffffffffff80168211156116bf576030826040517f6dfcc6500000000000000000000000000000000000000000000000000000000081526004016116b6929190614129565b60405180910390fd5b819050919050565b60008083600001805490509050600080829050600583111561174f5760006116ee84612118565b846116f99190613edf565b905061170887600001826122b5565b60000160009054906101000a900465ffffffffffff1665ffffffffffff168665ffffffffffff16101561173d5780915061174d565b60018161174a9190613eab565b92505b505b6000611760876000018785856122ca565b9050600081146117b2576117838760000160018361177e9190613edf565b6122b5565b60000160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff166117b5565b60005b94505050505092915050565b6117c9611414565b73ffffffffffffffffffffffffffffffffffffffff166117e7610e2f565b73ffffffffffffffffffffffffffffffffffffffff16146118465761180a611414565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161183d919061370e565b60405180910390fd5b565b611850612343565b6000600560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611894611414565b6040516118a1919061370e565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361191d5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611914919061370e565b60405180910390fd5b61192960008383612072565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361199f5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611996919061370e565b60405180910390fd5b6119ab82600083612072565b5050565b60006119ba836109b6565b905081600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4611abe8183611ab986612383565b612395565b505050565b600090565b6000611b19611b14600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061260e565b61261f565b9050919050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611bf182612677565b9050919050565b611c006126c0565b6001600560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611c44611414565b604051611c51919061370e565b60405180910390a1565b6060611c9160067f000000000000000000000000000000000000000000000000000000000000000061270190919063ffffffff16565b905090565b6060611ccc60077f000000000000000000000000000000000000000000000000000000000000000061270190919063ffffffff16565b905090565b6000808260000180549050905060008114611d2e57611cff83600001600183611cfa9190613edf565b6122b5565b60000160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff16611d31565b60005b915050919050565b6000611d4c611d466115b6565b836127b1565b9050919050565b600080600080611d65888888886127f2565b925092509250611d7582826128e6565b829350505050949350505050565b6000611d8e83611ddb565b9050808214611dd65782816040517f752d88c0000000000000000000000000000000000000000000000000000000008152600401611dcd929190614152565b60405180910390fd5b505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b600092915050565b611e426133b9565b611e9382600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a4a90919063ffffffff16565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611f0d5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611f04919061370e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f7f5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611f76919061370e565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561206c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161206391906135cc565b60405180910390a35b50505050565b61207d838383612b1f565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016120fd95949392919061417b565b60405160208183030381529060405280519060200120905090565b60006001821161212a578190506122b0565b6000829050600060019050700100000000000000000000000000000000821061215c57608082901c9150604081901b90505b68010000000000000000821061217b57604082901c9150602081901b90505b640100000000821061219657602082901c9150601081901b90505b6201000082106121af57601082901c9150600881901b90505b61010082106121c757600882901c9150600481901b90505b601082106121de57600482901c9150600281901b90505b600482106121ee57600181901b90505b600181600302901c9050600181858161220a576122096141ce565b5b048201901c90506001818581612223576122226141ce565b5b048201901c9050600181858161223c5761223b6141ce565b5b048201901c90506001818581612255576122546141ce565b5b048201901c9050600181858161226e5761226d6141ce565b5b048201901c90506001818581612287576122866141ce565b5b048201901c90506122a98185816122a1576122a06141ce565b5b048211612bd0565b8103925050505b919050565b60008260005281602060002001905092915050565b60005b818310156123385760006122e18484612bdc565b90508465ffffffffffff166122f687836122b5565b60000160009054906101000a900465ffffffffffff1665ffffffffffff16111561232257809250612332565b60018161232f9190613eab565b93505b506122cd565b819050949350505050565b61234b610a39565b612381576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061238e82610ce5565b9050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156123d15750600081115b1561260957600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146124ef57600080612460600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206113fe61245b86612c02565b612c70565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915079ffffffffffffffffffffffffffffffffffffffffffffffffffff1691508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516124e49291906141fd565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461260857600080612579600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206113e861257486612c02565b612c70565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915079ffffffffffffffffffffffffffffffffffffffffffffffffffff1691508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516125fd9291906141fd565b60405180910390a250505b5b505050565b600081600001805490509050919050565b600063ffffffff801682111561266f576020826040517f6dfcc650000000000000000000000000000000000000000000000000000000008152600401612666929190614261565b60405180910390fd5b819050919050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6126c8610a39565b156126ff576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b606060ff60001b831461271e5761271783612cb0565b90506127ab565b81805461272a90613d37565b80601f016020809104026020016040519081016040528092919081815260200182805461275690613d37565b80156127a35780601f10612778576101008083540402835291602001916127a3565b820191906000526020600020905b81548152906001019060200180831161278657829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156128325760006003859250925092506128dc565b600060018888888860405160008152602001604052604051612857949392919061428a565b6020604051602081039080840390855afa158015612879573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036128cd57600060016000801b935093509350506128dc565b8060008060001b935093509350505b9450945094915050565b600060038111156128fa576128f96142cf565b5b82600381111561290d5761290c6142cf565b5b0315612a465760016003811115612927576129266142cf565b5b82600381111561293a576129396142cf565b5b03612971576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115612985576129846142cf565b5b826003811115612998576129976142cf565b5b036129dd578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016129d491906135cc565b60405180910390fd5b6003808111156129f0576129ef6142cf565b5b826003811115612a0357612a026142cf565b5b03612a4557806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401612a3c919061368a565b60405180910390fd5b5b5050565b612a526133b9565b826000018263ffffffff1681548110612a6e57612a6d6142fe565b5b906000526020600020016040518060400160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b612b2a838383612d24565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612bc0576000612b68610813565b90506000612b74612d3c565b905080821115612bbd5781816040517f1cb15d26000000000000000000000000000000000000000000000000000000008152600401612bb49291906141fd565b60405180910390fd5b50505b612bcb838383612d60565b505050565b60008115159050919050565b60006002828418612bed919061432d565b828416612bfa9190613eab565b905092915050565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff8016821115612c685760d0826040517f6dfcc650000000000000000000000000000000000000000000000000000000008152600401612c5f929190614399565b60405180910390fd5b819050919050565b600080612ca4612c7e610ef4565b612c94612c8a88611cd1565b868863ffffffff16565b87612e1a9092919063ffffffff16565b91509150935093915050565b60606000612cbd83612e37565b90506000602067ffffffffffffffff811115612cdc57612cdb613f13565b5b6040519080825280601f01601f191660200182016040528015612d0e5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b612d2c6126c0565b612d37838383612e87565b505050565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff8016905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612dad57612daa600b6113e8612da584612c02565b612c70565b50505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612dfa57612df7600b6113fe612df284612c02565b612c70565b50505b612e15612e06846109b6565b612e0f846109b6565b83612395565b505050565b600080612e2b8560000185856130ac565b91509150935093915050565b60008060ff8360001c169050601f811115612e7e576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612ed9578060026000828254612ecd9190613eab565b92505081905550612fac565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612f65578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401612f5c939291906140ad565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612ff55780600260008282540392505081905550613042565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161309f91906135cc565b60405180910390a3505050565b60008060008580549050905060008111156132c95760006130d9876001846130d49190613edf565b6122b5565b905060008160000160009054906101000a900465ffffffffffff16905060008260000160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff1690508765ffffffffffff168265ffffffffffff16111561316f576040517f2520601d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8765ffffffffffff168265ffffffffffff16036131da57868360000160066101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055506132ba565b8860405180604001604052808a65ffffffffffff1681526020018979ffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060208201518160000160066101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b808795509550505050506133b1565b8560405180604001604052808765ffffffffffff1681526020018679ffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060208201518160000160066101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550505060008492509250505b935093915050565b6040518060400160405280600065ffffffffffff168152602001600079ffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b83811015613431578082015181840152602081019050613416565b60008484015250505050565b6000601f19601f8301169050919050565b6000613459826133f7565b6134638185613402565b9350613473818560208601613413565b61347c8161343d565b840191505092915050565b600060208201905081810360008301526134a1818461344e565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006134de826134b3565b9050919050565b6134ee816134d3565b81146134f957600080fd5b50565b60008135905061350b816134e5565b92915050565b6000819050919050565b61352481613511565b811461352f57600080fd5b50565b6000813590506135418161351b565b92915050565b6000806040838503121561355e5761355d6134a9565b5b600061356c858286016134fc565b925050602061357d85828601613532565b9150509250929050565b60008115159050919050565b61359c81613587565b82525050565b60006020820190506135b76000830184613593565b92915050565b6135c681613511565b82525050565b60006020820190506135e160008301846135bd565b92915050565b600080600060608486031215613600576135ff6134a9565b5b600061360e868287016134fc565b935050602061361f868287016134fc565b925050604061363086828701613532565b9150509250925092565b600060ff82169050919050565b6136508161363a565b82525050565b600060208201905061366b6000830184613647565b92915050565b6000819050919050565b61368481613671565b82525050565b600060208201905061369f600083018461367b565b92915050565b6000602082840312156136bb576136ba6134a9565b5b60006136c984828501613532565b91505092915050565b6000602082840312156136e8576136e76134a9565b5b60006136f6848285016134fc565b91505092915050565b613708816134d3565b82525050565b600060208201905061372360008301846136ff565b92915050565b6000613734826134d3565b9050919050565b61374481613729565b811461374f57600080fd5b50565b6000813590506137618161373b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261378c5761378b613767565b5b8235905067ffffffffffffffff8111156137a9576137a861376c565b5b6020830191508360018202830111156137c5576137c4613771565b5b9250929050565b6000806000806000608086880312156137e8576137e76134a9565b5b60006137f688828901613752565b9550506020613807888289016134fc565b945050604061381888828901613532565b935050606086013567ffffffffffffffff811115613839576138386134ae565b5b61384588828901613776565b92509250509295509295909350565b600063ffffffff82169050919050565b61386d81613854565b82525050565b60006020820190506138886000830184613864565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6138c38161388e565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6138fe81613511565b82525050565b600061391083836138f5565b60208301905092915050565b6000602082019050919050565b6000613934826138c9565b61393e81856138d4565b9350613949836138e5565b8060005b8381101561397a5781516139618882613904565b975061396c8361391c565b92505060018101905061394d565b5085935050505092915050565b600060e08201905061399c600083018a6138ba565b81810360208301526139ae818961344e565b905081810360408301526139c2818861344e565b90506139d160608301876135bd565b6139de60808301866136ff565b6139eb60a083018561367b565b81810360c08301526139fd8184613929565b905098975050505050505050565b600065ffffffffffff82169050919050565b613a2681613a0b565b82525050565b6000602082019050613a416000830184613a1d565b92915050565b613a508161363a565b8114613a5b57600080fd5b50565b600081359050613a6d81613a47565b92915050565b613a7c81613671565b8114613a8757600080fd5b50565b600081359050613a9981613a73565b92915050565b60008060008060008060c08789031215613abc57613abb6134a9565b5b6000613aca89828a016134fc565b9650506020613adb89828a01613532565b9550506040613aec89828a01613532565b9450506060613afd89828a01613a5e565b9350506080613b0e89828a01613a8a565b92505060a0613b1f89828a01613a8a565b9150509295509295509295565b600080600080600080600060e0888a031215613b4b57613b4a6134a9565b5b6000613b598a828b016134fc565b9750506020613b6a8a828b016134fc565b9650506040613b7b8a828b01613532565b9550506060613b8c8a828b01613532565b9450506080613b9d8a828b01613a5e565b93505060a0613bae8a828b01613a8a565b92505060c0613bbf8a828b01613a8a565b91505092959891949750929550565b60008060408385031215613be557613be46134a9565b5b6000613bf3858286016134fc565b9250506020613c04858286016134fc565b9150509250929050565b613c1781613854565b8114613c2257600080fd5b50565b600081359050613c3481613c0e565b92915050565b60008060408385031215613c5157613c506134a9565b5b6000613c5f858286016134fc565b9250506020613c7085828601613c25565b9150509250929050565b613c8381613a0b565b82525050565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b613cb881613c89565b82525050565b604082016000820151613cd46000850182613c7a565b506020820151613ce76020850182613caf565b50505050565b6000604082019050613d026000830184613cbe565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613d4f57607f821691505b602082108103613d6257613d61613d08565b5b50919050565b6000604082019050613d7d60008301856135bd565b613d8a6020830184613a1d565b9392505050565b600082825260208201905092915050565b82818337600083830152505050565b6000613dbd8385613d91565b9350613dca838584613da2565b613dd38361343d565b840190509392505050565b600060a082019050613df360008301896136ff565b613e0060208301886136ff565b613e0d60408301876135bd565b613e1a60608301866135bd565b8181036080830152613e2d818486613db1565b9050979650505050505050565b600081519050613e4981613a73565b92915050565b600060208284031215613e6557613e646134a9565b5b6000613e7384828501613e3a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613eb682613511565b9150613ec183613511565b9250828201905080821115613ed957613ed8613e7c565b5b92915050565b6000613eea82613511565b9150613ef583613511565b9250828203905081811115613f0d57613f0c613e7c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000608082019050613f57600083018761367b565b613f6460208301866136ff565b613f7160408301856135bd565b613f7e60608301846135bd565b95945050505050565b600060c082019050613f9c600083018961367b565b613fa960208301886136ff565b613fb660408301876136ff565b613fc360608301866135bd565b613fd060808301856135bd565b613fdd60a08301846135bd565b979650505050505050565b6000604082019050613ffd60008301856136ff565b61400a60208301846136ff565b9392505050565b600061401c82613c89565b915061402783613c89565b9250828201905079ffffffffffffffffffffffffffffffffffffffffffffffffffff81111561405957614058613e7c565b5b92915050565b600061406a82613c89565b915061407583613c89565b9250828203905079ffffffffffffffffffffffffffffffffffffffffffffffffffff8111156140a7576140a6613e7c565b5b92915050565b60006060820190506140c260008301866136ff565b6140cf60208301856135bd565b6140dc60408301846135bd565b949350505050565b6000819050919050565b6000819050919050565b600061411361410e614109846140e4565b6140ee565b61363a565b9050919050565b614123816140f8565b82525050565b600060408201905061413e600083018561411a565b61414b60208301846135bd565b9392505050565b600060408201905061416760008301856136ff565b61417460208301846135bd565b9392505050565b600060a082019050614190600083018861367b565b61419d602083018761367b565b6141aa604083018661367b565b6141b760608301856135bd565b6141c460808301846136ff565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060408201905061421260008301856135bd565b61421f60208301846135bd565b9392505050565b6000819050919050565b600061424b61424661424184614226565b6140ee565b61363a565b9050919050565b61425b81614230565b82525050565b60006040820190506142766000830185614252565b61428360208301846135bd565b9392505050565b600060808201905061429f600083018761367b565b6142ac6020830186613647565b6142b9604083018561367b565b6142c6606083018461367b565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061433882613511565b915061434383613511565b925082614353576143526141ce565b5b828204905092915050565b6000819050919050565b600061438361437e6143798461435e565b6140ee565b61363a565b9050919050565b61439381614368565b82525050565b60006040820190506143ae600083018561438a565b6143bb60208301846135bd565b939250505056fea264697066735822122022a0969fc48aa1b4302d936df14c2fe266f384f975433279f9a376c09380b7ac64736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD9D98CE4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD9D98CE4 EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x6E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x712 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x72E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x666 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x5AE JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x502 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x601E2603 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x47C JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3C4 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x33E JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x298 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x35A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x35E7 JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x35A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x855 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x368A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH2 0x93D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x94F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x36A5 JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37E PUSH2 0x979 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x3487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0xA1F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x35A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x37CC JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x35A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x436 PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x3873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH2 0xD2D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x500 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0xD41 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53A PUSH2 0xD73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x544 PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x557 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x568 PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x598 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x36A5 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B6 PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0x3A2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D4 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x3487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x634 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x35A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x664 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x3A9F JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x680 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67B SWAP2 SWAP1 PUSH2 0x3B2C JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x697 SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x122B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x3BCE JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F7 SWAP2 SWAP1 PUSH2 0x3C3A JUMP JUMPDEST PUSH2 0x1336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0x1350 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x748 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x36D2 JUMP JUMPDEST PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x76D SWAP1 PUSH2 0x3D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x799 SWAP1 PUSH2 0x3D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7FB PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0x808 DUP2 DUP6 DUP6 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x828 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0x835 DUP6 DUP3 DUP6 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x840 DUP6 DUP6 DUP6 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85F PUSH2 0x15B6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x86F PUSH2 0xEF4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0x8BF JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B6 SWAP3 SWAP2 SWAP1 PUSH2 0x3D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x918 PUSH2 0x8CB DUP5 PUSH2 0x166D JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x16C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x945 PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0x94D PUSH2 0x1848 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x957 PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0x961 DUP3 DUP3 PUSH2 0x18AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x976 PUSH2 0x970 PUSH2 0x1414 JUMP JUMPDEST DUP3 PUSH2 0x192D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D74696D657374616D70000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA29 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0xA35 DUP2 DUP4 PUSH2 0x19AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA5C DUP7 PUSH2 0xC5C JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0xAA3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xFD9A760900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9A SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAAF DUP8 DUP8 PUSH2 0x122B JUMP JUMPDEST SWAP1 POP PUSH2 0xABB DUP9 DUP8 PUSH2 0x18AB JUMP JUMPDEST PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23E30C8B PUSH2 0xB00 PUSH2 0x1414 JUMP JUMPDEST DUP11 DUP11 DUP7 DUP12 DUP12 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB26 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB69 SWAP2 SWAP1 PUSH2 0x3E4F JUMP JUMPDEST EQ PUSH2 0xBAB JUMPI DUP8 PUSH1 0x40 MLOAD PUSH32 0x678C5B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBB5 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP PUSH2 0xBCD DUP10 ADDRESS DUP5 DUP11 PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x142E JUMP JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 PUSH2 0xC08 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0xC27 JUMPI PUSH2 0xC22 DUP10 DUP4 DUP10 PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x192D JUMP JUMPDEST PUSH2 0xC3D JUMP JUMPDEST PUSH2 0xC31 DUP10 DUP9 PUSH2 0x192D JUMP JUMPDEST PUSH2 0xC3C DUP10 DUP3 DUP5 PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC57 PUSH2 0x813 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC98 JUMPI PUSH1 0x0 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0xCA0 PUSH2 0x813 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xCCB SWAP2 SWAP1 PUSH2 0x3EDF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDE DUP3 PUSH2 0x1AC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD35 PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0xD3F PUSH1 0x0 PUSH2 0x1B20 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD53 DUP3 PUSH2 0xD4D PUSH2 0x1414 JUMP JUMPDEST DUP4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0xD5D DUP3 DUP3 PUSH2 0x192D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6C DUP3 PUSH2 0x1BE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7B PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0xD83 PUSH2 0x1BF8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xD99 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0xDA1 PUSH2 0x1C96 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC2 JUMPI PUSH2 0xDC1 PUSH2 0x3F13 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDF0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE64 PUSH2 0xEF4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0xEB4 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAB SWAP3 SWAP2 SWAP1 PUSH2 0x3D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED0 PUSH2 0xEC0 DUP5 PUSH2 0x166D JUMP JUMPDEST PUSH1 0xB PUSH2 0x16C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF0B SWAP1 PUSH2 0x3D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF37 SWAP1 PUSH2 0x3D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF84 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF59 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF84 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF67 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD7 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1CD1 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1005 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0x1012 DUP2 DUP6 DUP6 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1062 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1059 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10C4 PUSH2 0x10BC PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10A1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1D39 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 POP PUSH2 0x10D0 DUP2 DUP8 PUSH2 0x1D83 JUMP JUMPDEST PUSH2 0x10DA DUP2 DUP9 PUSH2 0x19AF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1128 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111F SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x1157 DUP13 PUSH2 0x1DDB JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x116D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1190 DUP3 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11A0 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1214 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP3 SWAP2 SWAP1 PUSH2 0x3FE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121F DUP11 DUP11 DUP11 PUSH2 0x141C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x129D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xB5A7DB9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A7 DUP4 DUP4 PUSH2 0x1E32 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x133E PUSH2 0x33B9 JUMP JUMPDEST PUSH2 0x1348 DUP4 DUP4 PUSH2 0x1E3A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1358 PUSH2 0x17C1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13CA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C1 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13D3 DUP2 PUSH2 0x1B20 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E1 DUP3 PUSH2 0xCE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x13F6 SWAP2 SWAP1 PUSH2 0x4011 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x140C SWAP2 SWAP1 PUSH2 0x405F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1429 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E9B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143A DUP5 DUP5 PUSH2 0x12AF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x14BC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x14AC JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14BB DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1E9B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1534 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152B SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15A6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159D SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15B1 DUP4 DUP4 DUP4 PUSH2 0x2072 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1632 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x165F JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1667 PUSH2 0x2082 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x16BF JUMPI PUSH1 0x30 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B6 SWAP3 SWAP2 SWAP1 PUSH2 0x4129 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x174F JUMPI PUSH1 0x0 PUSH2 0x16EE DUP5 PUSH2 0x2118 JUMP JUMPDEST DUP5 PUSH2 0x16F9 SWAP2 SWAP1 PUSH2 0x3EDF JUMP JUMPDEST SWAP1 POP PUSH2 0x1708 DUP8 PUSH1 0x0 ADD DUP3 PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP7 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x173D JUMPI DUP1 SWAP2 POP PUSH2 0x174D JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x174A SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x1760 DUP8 PUSH1 0x0 ADD DUP8 DUP6 DUP6 PUSH2 0x22CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x17B2 JUMPI PUSH2 0x1783 DUP8 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x177E SWAP2 SWAP1 PUSH2 0x3EDF JUMP JUMPDEST PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17C9 PUSH2 0x1414 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17E7 PUSH2 0xE2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1846 JUMPI PUSH2 0x180A PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x183D SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1850 PUSH2 0x2343 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1894 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A1 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1914 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1929 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2072 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x199F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1996 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19AB DUP3 PUSH1 0x0 DUP4 PUSH2 0x2072 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BA DUP4 PUSH2 0x9B6 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1ABE DUP2 DUP4 PUSH2 0x1AB9 DUP7 PUSH2 0x2383 JUMP JUMPDEST PUSH2 0x2395 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B19 PUSH2 0x1B14 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x260E JUMP JUMPDEST PUSH2 0x261F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF1 DUP3 PUSH2 0x2677 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C00 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1C44 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C51 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C91 PUSH1 0x6 PUSH32 0x0 PUSH2 0x2701 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CCC PUSH1 0x7 PUSH32 0x0 PUSH2 0x2701 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1D2E JUMPI PUSH2 0x1CFF DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1CFA SWAP2 SWAP1 PUSH2 0x3EDF JUMP JUMPDEST PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D4C PUSH2 0x1D46 PUSH2 0x15B6 JUMP JUMPDEST DUP4 PUSH2 0x27B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1D65 DUP9 DUP9 DUP9 DUP9 PUSH2 0x27F2 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1D75 DUP3 DUP3 PUSH2 0x28E6 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8E DUP4 PUSH2 0x1DDB JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1DD6 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DCD SWAP3 SWAP2 SWAP1 PUSH2 0x4152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E42 PUSH2 0x33B9 JUMP JUMPDEST PUSH2 0x1E93 DUP3 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A4A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F0D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F04 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F7F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F76 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x206C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2063 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x207D DUP4 DUP4 DUP4 PUSH2 0x2B1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20FD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x417B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0x212A JUMPI DUP2 SWAP1 POP PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x215C JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x217B JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x2196 JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x21AF JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x21C7 JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x21DE JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x21EE JUMPI PUSH1 0x1 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 MUL SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x220A JUMPI PUSH2 0x2209 PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x2223 JUMPI PUSH2 0x2222 PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x223C JUMPI PUSH2 0x223B PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x2255 JUMPI PUSH2 0x2254 PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x226E JUMPI PUSH2 0x226D PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x2287 JUMPI PUSH2 0x2286 PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x22A9 DUP2 DUP6 DUP2 PUSH2 0x22A1 JUMPI PUSH2 0x22A0 PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DIV DUP3 GT PUSH2 0x2BD0 JUMP JUMPDEST DUP2 SUB SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x2338 JUMPI PUSH1 0x0 PUSH2 0x22E1 DUP5 DUP5 PUSH2 0x2BDC JUMP JUMPDEST SWAP1 POP DUP5 PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x22F6 DUP8 DUP4 PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2322 JUMPI DUP1 SWAP3 POP PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x232F SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x22CD JUMP JUMPDEST DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x234B PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x2381 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x238E DUP3 PUSH2 0xCE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x23D1 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2609 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24EF JUMPI PUSH1 0x0 DUP1 PUSH2 0x2460 PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x13FE PUSH2 0x245B DUP7 PUSH2 0x2C02 JUMP JUMPDEST PUSH2 0x2C70 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x24E4 SWAP3 SWAP2 SWAP1 PUSH2 0x41FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2608 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2579 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x13E8 PUSH2 0x2574 DUP7 PUSH2 0x2C02 JUMP JUMPDEST PUSH2 0x2C70 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x25FD SWAP3 SWAP2 SWAP1 PUSH2 0x41FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x266F JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2666 SWAP3 SWAP2 SWAP1 PUSH2 0x4261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C8 PUSH2 0xA39 JUMP JUMPDEST ISZERO PUSH2 0x26FF JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x271E JUMPI PUSH2 0x2717 DUP4 PUSH2 0x2CB0 JUMP JUMPDEST SWAP1 POP PUSH2 0x27AB JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x272A SWAP1 PUSH2 0x3D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2756 SWAP1 PUSH2 0x3D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2778 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2786 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2832 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2857 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x428A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2879 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28CD JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x28DC JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x28FA JUMPI PUSH2 0x28F9 PUSH2 0x42CF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x290D JUMPI PUSH2 0x290C PUSH2 0x42CF JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2A46 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2927 JUMPI PUSH2 0x2926 PUSH2 0x42CF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x293A JUMPI PUSH2 0x2939 PUSH2 0x42CF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2971 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2985 JUMPI PUSH2 0x2984 PUSH2 0x42CF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2998 JUMPI PUSH2 0x2997 PUSH2 0x42CF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x29DD JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D4 SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x29F0 JUMPI PUSH2 0x29EF PUSH2 0x42CF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A03 JUMPI PUSH2 0x2A02 PUSH2 0x42CF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2A45 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3C SWAP2 SWAP1 PUSH2 0x368A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2A52 PUSH2 0x33B9 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x2A6E JUMPI PUSH2 0x2A6D PUSH2 0x42FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B2A DUP4 DUP4 DUP4 PUSH2 0x2D24 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2BC0 JUMPI PUSH1 0x0 PUSH2 0x2B68 PUSH2 0x813 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B74 PUSH2 0x2D3C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2BBD JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BB4 SWAP3 SWAP2 SWAP1 PUSH2 0x41FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0x2BCB DUP4 DUP4 DUP4 PUSH2 0x2D60 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2BED SWAP2 SWAP1 PUSH2 0x432D JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2BFA SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2C68 JUMPI PUSH1 0xD0 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5F SWAP3 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA4 PUSH2 0x2C7E PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x2C94 PUSH2 0x2C8A DUP9 PUSH2 0x1CD1 JUMP JUMPDEST DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x2E1A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2CBD DUP4 PUSH2 0x2E37 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CDC JUMPI PUSH2 0x2CDB PUSH2 0x3F13 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2D0E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D2C PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x2D37 DUP4 DUP4 DUP4 PUSH2 0x2E87 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DAD JUMPI PUSH2 0x2DAA PUSH1 0xB PUSH2 0x13E8 PUSH2 0x2DA5 DUP5 PUSH2 0x2C02 JUMP JUMPDEST PUSH2 0x2C70 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DFA JUMPI PUSH2 0x2DF7 PUSH1 0xB PUSH2 0x13FE PUSH2 0x2DF2 DUP5 PUSH2 0x2C02 JUMP JUMPDEST PUSH2 0x2C70 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x2E15 PUSH2 0x2E06 DUP5 PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x2E0F DUP5 PUSH2 0x9B6 JUMP JUMPDEST DUP4 PUSH2 0x2395 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E2B DUP6 PUSH1 0x0 ADD DUP6 DUP6 PUSH2 0x30AC JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2E7E JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2ED9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2ECD SWAP2 SWAP1 PUSH2 0x3EAB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2FAC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2F65 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FF5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3042 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x309F SWAP2 SWAP1 PUSH2 0x35CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x32C9 JUMPI PUSH1 0x0 PUSH2 0x30D9 DUP8 PUSH1 0x1 DUP5 PUSH2 0x30D4 SWAP2 SWAP1 PUSH2 0x3EDF JUMP JUMPDEST PUSH2 0x22B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP3 PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x316F JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP3 PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x31DA JUMPI DUP7 DUP4 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x32BA JUMP JUMPDEST DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 DUP8 SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0x33B1 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3431 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3416 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3459 DUP3 PUSH2 0x33F7 JUMP JUMPDEST PUSH2 0x3463 DUP2 DUP6 PUSH2 0x3402 JUMP JUMPDEST SWAP4 POP PUSH2 0x3473 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3413 JUMP JUMPDEST PUSH2 0x347C DUP2 PUSH2 0x343D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34A1 DUP2 DUP5 PUSH2 0x344E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34DE DUP3 PUSH2 0x34B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34EE DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x34F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x350B DUP2 PUSH2 0x34E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3524 DUP2 PUSH2 0x3511 JUMP JUMPDEST DUP2 EQ PUSH2 0x352F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3541 DUP2 PUSH2 0x351B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x355E JUMPI PUSH2 0x355D PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x356C DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x357D DUP6 DUP3 DUP7 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359C DUP2 PUSH2 0x3587 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35C6 DUP2 PUSH2 0x3511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3600 JUMPI PUSH2 0x35FF PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x360E DUP7 DUP3 DUP8 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x361F DUP7 DUP3 DUP8 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3630 DUP7 DUP3 DUP8 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3650 DUP2 PUSH2 0x363A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x366B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3647 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3684 DUP2 PUSH2 0x3671 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x369F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x367B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36BB JUMPI PUSH2 0x36BA PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36C9 DUP5 DUP3 DUP6 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36E8 JUMPI PUSH2 0x36E7 PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36F6 DUP5 DUP3 DUP6 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3708 DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3723 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x36FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3734 DUP3 PUSH2 0x34D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3744 DUP2 PUSH2 0x3729 JUMP JUMPDEST DUP2 EQ PUSH2 0x374F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3761 DUP2 PUSH2 0x373B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x378C JUMPI PUSH2 0x378B PUSH2 0x3767 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37A9 JUMPI PUSH2 0x37A8 PUSH2 0x376C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x37C5 JUMPI PUSH2 0x37C4 PUSH2 0x3771 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x37E8 JUMPI PUSH2 0x37E7 PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37F6 DUP9 DUP3 DUP10 ADD PUSH2 0x3752 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3807 DUP9 DUP3 DUP10 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x3818 DUP9 DUP3 DUP10 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3839 JUMPI PUSH2 0x3838 PUSH2 0x34AE JUMP JUMPDEST JUMPDEST PUSH2 0x3845 DUP9 DUP3 DUP10 ADD PUSH2 0x3776 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x386D DUP2 PUSH2 0x3854 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3888 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38C3 DUP2 PUSH2 0x388E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38FE DUP2 PUSH2 0x3511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3910 DUP4 DUP4 PUSH2 0x38F5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3934 DUP3 PUSH2 0x38C9 JUMP JUMPDEST PUSH2 0x393E DUP2 DUP6 PUSH2 0x38D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3949 DUP4 PUSH2 0x38E5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x397A JUMPI DUP2 MLOAD PUSH2 0x3961 DUP9 DUP3 PUSH2 0x3904 JUMP JUMPDEST SWAP8 POP PUSH2 0x396C DUP4 PUSH2 0x391C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x394D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x399C PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x38BA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x39AE DUP2 DUP10 PUSH2 0x344E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x39C2 DUP2 DUP9 PUSH2 0x344E JUMP JUMPDEST SWAP1 POP PUSH2 0x39D1 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x39DE PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x39EB PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x367B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x39FD DUP2 DUP5 PUSH2 0x3929 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A26 DUP2 PUSH2 0x3A0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A41 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A50 DUP2 PUSH2 0x363A JUMP JUMPDEST DUP2 EQ PUSH2 0x3A5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A6D DUP2 PUSH2 0x3A47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A7C DUP2 PUSH2 0x3671 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A99 DUP2 PUSH2 0x3A73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3ABC JUMPI PUSH2 0x3ABB PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3ACA DUP10 DUP3 DUP11 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3ADB DUP10 DUP3 DUP11 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3AEC DUP10 DUP3 DUP11 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3AFD DUP10 DUP3 DUP11 ADD PUSH2 0x3A5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3B0E DUP10 DUP3 DUP11 ADD PUSH2 0x3A8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3B1F DUP10 DUP3 DUP11 ADD PUSH2 0x3A8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3B4B JUMPI PUSH2 0x3B4A PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B59 DUP11 DUP3 DUP12 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3B6A DUP11 DUP3 DUP12 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x3B7B DUP11 DUP3 DUP12 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3B8C DUP11 DUP3 DUP12 ADD PUSH2 0x3532 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3B9D DUP11 DUP3 DUP12 ADD PUSH2 0x3A5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3BAE DUP11 DUP3 DUP12 ADD PUSH2 0x3A8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3BBF DUP11 DUP3 DUP12 ADD PUSH2 0x3A8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BE5 JUMPI PUSH2 0x3BE4 PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BF3 DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3C04 DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C17 DUP2 PUSH2 0x3854 JUMP JUMPDEST DUP2 EQ PUSH2 0x3C22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C34 DUP2 PUSH2 0x3C0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C51 JUMPI PUSH2 0x3C50 PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C5F DUP6 DUP3 DUP7 ADD PUSH2 0x34FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3C70 DUP6 DUP3 DUP7 ADD PUSH2 0x3C25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C83 DUP2 PUSH2 0x3A0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CB8 DUP2 PUSH2 0x3C89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3CD4 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3C7A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3CE7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3CAF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D02 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3D4F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3D62 JUMPI PUSH2 0x3D61 PUSH2 0x3D08 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D7D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x3D8A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A1D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DBD DUP4 DUP6 PUSH2 0x3D91 JUMP JUMPDEST SWAP4 POP PUSH2 0x3DCA DUP4 DUP6 DUP5 PUSH2 0x3DA2 JUMP JUMPDEST PUSH2 0x3DD3 DUP4 PUSH2 0x343D JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3DF3 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x3E00 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x3E0D PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x3E1A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x35BD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3E2D DUP2 DUP5 DUP7 PUSH2 0x3DB1 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E49 DUP2 PUSH2 0x3A73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E65 JUMPI PUSH2 0x3E64 PUSH2 0x34A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E73 DUP5 DUP3 DUP6 ADD PUSH2 0x3E3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3EB6 DUP3 PUSH2 0x3511 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EC1 DUP4 PUSH2 0x3511 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3ED9 JUMPI PUSH2 0x3ED8 PUSH2 0x3E7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EEA DUP3 PUSH2 0x3511 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EF5 DUP4 PUSH2 0x3511 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3F0D JUMPI PUSH2 0x3F0C PUSH2 0x3E7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F57 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x3F64 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x3F71 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x3F7E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3F9C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x3FA9 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x3FB6 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x3FC3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x3FD0 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x3FDD PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3FFD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x400A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x36FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x401C DUP3 PUSH2 0x3C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x4027 DUP4 PUSH2 0x3C89 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4059 JUMPI PUSH2 0x4058 PUSH2 0x3E7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406A DUP3 PUSH2 0x3C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x4075 DUP4 PUSH2 0x3C89 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40A7 JUMPI PUSH2 0x40A6 PUSH2 0x3E7C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x40C2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x40CF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x40DC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4113 PUSH2 0x410E PUSH2 0x4109 DUP5 PUSH2 0x40E4 JUMP JUMPDEST PUSH2 0x40EE JUMP JUMPDEST PUSH2 0x363A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4123 DUP2 PUSH2 0x40F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x413E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x411A JUMP JUMPDEST PUSH2 0x414B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4167 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x36FF JUMP JUMPDEST PUSH2 0x4174 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4190 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x419D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x41AA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x41B7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x41C4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x36FF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4212 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x421F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x424B PUSH2 0x4246 PUSH2 0x4241 DUP5 PUSH2 0x4226 JUMP JUMPDEST PUSH2 0x40EE JUMP JUMPDEST PUSH2 0x363A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x425B DUP2 PUSH2 0x4230 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4276 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4252 JUMP JUMPDEST PUSH2 0x4283 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x429F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x42AC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3647 JUMP JUMPDEST PUSH2 0x42B9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x42C6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x367B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4338 DUP3 PUSH2 0x3511 JUMP JUMPDEST SWAP2 POP PUSH2 0x4343 DUP4 PUSH2 0x3511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4353 JUMPI PUSH2 0x4352 PUSH2 0x41CE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4383 PUSH2 0x437E PUSH2 0x4379 DUP5 PUSH2 0x435E JUMP JUMPDEST PUSH2 0x40EE JUMP JUMPDEST PUSH2 0x363A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4393 DUP2 PUSH2 0x4368 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x43AE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x43BB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 LOG0 SWAP7 SWAP16 0xC4 DUP11 LOG1 0xB4 ADDRESS 0x2D SWAP4 PUSH14 0xF14C2FE266F384F975433279F9A3 PUSH23 0xC09380B7AC64736F6C6343000816003300000000000000 ","sourceMap":"649:1554:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2659:112:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3922:364:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1085:65:33;;;:::i;:::-;;1158:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1427:109:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5539:117:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5738:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4807:962:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2102:94:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1957:161:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3237:126:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1804:177:33;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1016:61;;;:::i;:::-;;5144:557:26;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4922:341:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1261:104:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3402:135:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5954:554:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1683:672:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2483:232:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3440:163:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1989:107:33;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:9;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;2659:112:14:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;3922:364:2:-;4009:7;4028:23;4054:7;:5;:7::i;:::-;4028:33;;4088:16;4075:29;;:9;:29;4071:115;;4147:9;4158:16;4127:48;;;;;;;;;;;;:::i;:::-;;;;;;;;4071:115;4202:77;4250:28;4268:9;4250:17;:28::i;:::-;4202:20;:29;4223:7;4202:29;;;;;;;;;;;;;;;:47;;:77;;;;:::i;:::-;4195:84;;;;;3922:364;;;;:::o;1085:65:33:-;1531:13:0;:11;:13::i;:::-;1132:10:33::1;:8;:10::i;:::-;1085:65::o:0;1158:95::-;1531:13:0;:11;:13::i;:::-;1228:17:33::1;1234:2;1238:6;1228:5;:17::i;:::-;1158:95:::0;;:::o;618:87:11:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;1427:109:33:-;1479:13;1505:23;;;;;;;;;;;;;;;;;;;1427:109;:::o;5539:117:2:-;5604:7;5630:10;:19;5641:7;5630:19;;;;;;;;;;;;;;;;;;;;;;;;;5623:26;;5539:117;;;:::o;5738:138::-;5800:15;5818:12;:10;:12::i;:::-;5800:30;;5840:29;5850:7;5859:9;5840;:29::i;:::-;5790:86;5738:138;:::o;1850:84:21:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;4807:962:12:-;4971:4;4987:15;5005:19;5018:5;5005:12;:19::i;:::-;4987:37;;5046:7;5038:5;:15;5034:84;;;5099:7;5076:31;;;;;;;;;;;:::i;:::-;;;;;;;;5034:84;5127:11;5141:22;5150:5;5157;5141:8;:22::i;:::-;5127:36;;5173:31;5187:8;5198:5;5173;:31::i;:::-;1039:45;5218:8;:20;;;5239:12;:10;:12::i;:::-;5253:5;5260;5267:3;5272:4;;5218:59;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:75;5214:154;;5347:8;5316:41;;;;;;;;;;;:::i;:::-;;;;;;;;5214:154;5377:24;5404:19;:17;:19::i;:::-;5377:46;;5433:62;5457:8;5476:4;5491:3;5483:5;:11;;;;:::i;:::-;5433:15;:62::i;:::-;5516:1;5509:3;:8;:42;;;;5549:1;5521:30;;:16;:30;;;5509:42;5505:237;;;5567:37;5581:8;5600:3;5592:5;:11;;;;:::i;:::-;5567:5;:37::i;:::-;5505:237;;;5635:31;5649:8;5660:5;5635;:31::i;:::-;5680:51;5698:8;5709:16;5727:3;5680:9;:51::i;:::-;5505:237;5758:4;5751:11;;;;;4807:962;;;;;;;:::o;2102:94:33:-;2152:7;2175:13;:11;:13::i;:::-;2168:20;;2102:94;:::o;1957:161:12:-;2023:7;2066:4;2049:22;;:5;:22;;;:62;;2110:1;2049:62;;;2094:13;:11;:13::i;:::-;2074:17;:33;;;;:::i;:::-;2049:62;2042:69;;1957:161;;;:::o;3237:126:15:-;3307:6;3332:24;3348:7;3332:15;:24::i;:::-;3325:31;;3237:126;;;:::o;3004:116:9:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:11:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1804:177:33:-;1922:7;1954:19;1967:5;1954:12;:19::i;:::-;1947:26;;1804:177;;;:::o;1016:61::-;1531:13:0;:11;:13::i;:::-;1061:8:33::1;:6;:8::i;:::-;1016:61::o:0;5144:557:26:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4922:341:2:-;4998:7;5017:23;5043:7;:5;:7::i;:::-;5017:33;;5077:16;5064:29;;:9;:29;5060:115;;5136:9;5147:16;5116:48;;;;;;;;;;;;:::i;:::-;;;;;;;;5060:115;5191:65;5227:28;5245:9;5227:17;:28::i;:::-;5191:17;:35;;:65;;;;:::i;:::-;5184:72;;;;;4922:341;;;:::o;1261:104:33:-;1308:6;1341:15;1327:30;;1261:104;:::o;1981:93:9:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3402:135:2:-;3466:7;3492:38;:20;:29;3513:7;3492:29;;;;;;;;;;;;;;;:36;:38::i;:::-;3485:45;;;;3402:135;;;:::o;3315:178:9:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;5954:554:2:-;6159:6;6141:15;:24;6137:91;;;6210:6;6188:29;;;;;;;;;;;:::i;:::-;;;;;;;;6137:91;6237:14;6254:168;6281:86;2063:71;6340:9;6351:5;6358:6;6308:57;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6298:68;;;;;;6281:16;:86::i;:::-;6381:1;6396;6411;6254:13;:168::i;:::-;6237:185;;6432:31;6449:6;6457:5;6432:16;:31::i;:::-;6473:28;6483:6;6491:9;6473;:28::i;:::-;6127:381;5954:554;;;;;;:::o;1683:672:14:-;1904:8;1886:15;:26;1882:97;;;1959:8;1935:33;;;;;;;;;;;:::i;:::-;;;;;;;;1882:97;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;2071:9;:16::i;:::-;2089:8;2020:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;2223:15;;:6;:15;;;2219:88;;2282:6;2290:5;2261:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2219:88;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;2483:232:12:-;2560:7;2600:4;2583:22;;:5;:22;;;2579:90;;2652:5;2628:30;;;;;;;;;;;:::i;:::-;;;;;;;;2579:90;2685:23;2695:5;2702;2685:9;:23::i;:::-;2678:30;;2483:232;;;;:::o;3551:140:9:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;3440:163:15:-;3519:32;;:::i;:::-;3570:26;3583:7;3592:3;3570:12;:26::i;:::-;3563:33;;3440:163;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1989:107:33:-;2047:7;2070:18;2080:7;2070:9;:18::i;:::-;2063:25;;1989:107;;;:::o;9304:96:2:-;9362:7;9392:1;9388;:5;;;;:::i;:::-;9381:12;;9304:96;;;;:::o;9406:101::-;9469:7;9499:1;9495;:5;;;;:::i;:::-;9488:12;;9406:101;;;;:::o;656:96:18:-;709:7;735:10;728:17;;656:96;:::o;8726:128:9:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;3845:262:26:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;14296:213:29:-;14352:6;14382:16;14374:24;;:5;:24;14370:103;;;14452:2;14456:5;14421:41;;;;;;;;;;;;:::i;:::-;;;;;;;;14370:103;14496:5;14482:20;;14296:213;;;:::o;9584:606:31:-;9669:7;9688:11;9702:4;:17;;:24;;;;9688:38;;9737:11;9762:12;9777:3;9762:18;;9801:1;9795:3;:7;9791:234;;;9818:11;9838:14;9848:3;9838:9;:14::i;:::-;9832:3;:20;;;;:::i;:::-;9818:34;;9876:37;9890:4;:17;;9909:3;9876:13;:37::i;:::-;:42;;;;;;;;;;;;9870:48;;:3;:48;;;9866:149;;;9945:3;9938:10;;9866:149;;;9999:1;9993:3;:7;;;;:::i;:::-;9987:13;;9866:149;9804:221;9791:234;10035:11;10049:53;10068:4;:17;;10087:3;10092;10097:4;10049:18;:53::i;:::-;10035:67;;10127:1;10120:3;:8;:63;;10135:41;10149:4;:17;;10174:1;10168:3;:7;;;;:::i;:::-;10135:13;:41::i;:::-;:48;;;;;;;;;;;;10120:63;;;10131:1;10120:63;10113:70;;;;;;9584:606;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2710:117:21:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;7458:208:9:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;6686:312:2:-;6768:19;6790:18;6800:7;6790:9;:18::i;:::-;6768:40;;6840:9;6818:10;:19;6829:7;6818:19;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;6903:9;6865:48;;6890:11;6865:48;;6881:7;6865:48;;;;;;;;;;;;6923:68;6942:11;6955:9;6966:24;6982:7;6966:15;:24::i;:::-;6923:18;:68::i;:::-;6758:240;6686:312;;:::o;3649:103:12:-;3709:7;3649:103;:::o;8581:162:2:-;8654:6;8679:57;8697:38;:20;:29;8718:7;8697:29;;;;;;;;;;;;;;;:36;:38::i;:::-;8679:17;:57::i;:::-;8672:64;;8581:162;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2409:143:14:-;2500:7;2526:19;2539:5;2526:12;:19::i;:::-;2519:26;;2409:143;;;:::o;2463:115:21:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;6021:126:26:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;10310:206:31:-;10372:7;10391:11;10405:4;:17;;:24;;;;10391:38;;10453:1;10446:3;:8;:63;;10461:41;10475:4;:17;;10500:1;10494:3;:7;;;;:::i;:::-;10461:13;:41::i;:::-;:48;;;;;;;;;;;;10446:63;;;10457:1;10446:63;10439:70;;;10310:206;;;:::o;4917:176:26:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6887:260:25:-;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;7131:9;7124:16;;;;;6887:260;;;;;;:::o;1265:222:19:-;1348:15;1366:16;1376:5;1366:9;:16::i;:::-;1348:34;;1405:7;1396:5;:16;1392:89;;1455:5;1462:7;1435:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1392:89;1338:149;1265:222;;:::o;759:395::-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;3103:227:12:-;3183:7;3103:227;;;;:::o;8820:199:2:-;8924:32;;:::i;:::-;8975:37;9008:3;8975:20;:29;8996:7;8975:29;;;;;;;;;;;;;;;:32;;:37;;;;:::i;:::-;8968:44;;8820:199;;;;:::o;9701:432:9:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;1614:182:33:-;1758:30;1772:4;1778:2;1782:5;1758:13;:30::i;:::-;1614:182;;;:::o;4113:179:26:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;18080:5181:28:-;18128:7;18246:1;18241;:6;18237:53;;18274:1;18267:8;;;;18237:53;19217:10;19230:1;19217:14;;19245:10;19258:1;19245:14;;19285:8;19278:2;:16;19274:92;;19321:3;19314:10;;;;;19349:2;19342:9;;;;;19274:92;19390:7;19383:2;:15;19379:90;;19425:2;19418:9;;;;;19452:2;19445:9;;;;;19379:90;19493:7;19486:2;:15;19482:90;;19528:2;19521:9;;;;;19555:2;19548:9;;;;;19482:90;19596:7;19589:2;:15;19585:89;;19631:2;19624:9;;;;;19658:1;19651:8;;;;;19585:89;19698:6;19691:2;:14;19687:87;;19732:1;19725:8;;;;;19758:1;19751:8;;;;;19687:87;19798:6;19791:2;:14;19787:87;;19832:1;19825:8;;;;;19858:1;19851:8;;;;;19787:87;19898:6;19891:2;:14;19887:61;;19932:1;19925:8;;;;;19887:61;20385:1;20378:2;20374:1;:6;20373:13;;20368:18;;22295:1;22288:2;22284:1;:6;;;;;:::i;:::-;;;22279:2;:11;22278:18;;22273:23;;22404:1;22397:2;22393:1;:6;;;;;:::i;:::-;;;22388:2;:11;22387:18;;22382:23;;22515:1;22508:2;22504:1;:6;;;;;:::i;:::-;;;22499:2;:11;22498:18;;22493:23;;22624:1;22617:2;22613:1;:6;;;;;:::i;:::-;;;22608:2;:11;22607:18;;22602:23;;22734:1;22727:2;22723:1;:6;;;;;:::i;:::-;;;22718:2;:11;22717:18;;22712:23;;22844:1;22837:2;22833:1;:6;;;;;:::i;:::-;;;22828:2;:11;22827:18;;22822:23;;23216:28;23241:2;23237:1;:6;;;;;:::i;:::-;;;23232:2;:11;23216:15;:28::i;:::-;23211:2;:33;23204:40;;;;18080:5181;;;;:::o;14289:265:31:-;14399:28;14472:9;14469:1;14462:20;14534:3;14527:4;14524:1;14514:18;14510:28;14495:43;;14289:265;;;;:::o;12929:433::-;13086:7;13105:230;13118:4;13112:3;:10;13105:230;;;13138:11;13152:23;13165:3;13170:4;13152:12;:23::i;:::-;13138:37;;13225:3;13193:35;;:24;13207:4;13213:3;13193:13;:24::i;:::-;:29;;;;;;;;;;;;:35;;;13189:136;;;13255:3;13248:10;;13189:136;;;13309:1;13303:3;:7;;;;:::i;:::-;13297:13;;13189:136;13124:211;13105:230;;;13351:4;13344:11;;12929:433;;;;;;:::o;2202:126:21:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;3029:133:15:-;3111:7;3137:18;3147:7;3137:9;:18::i;:::-;3130:25;;3029:133;;;:::o;7717:789:2:-;7826:2;7818:10;;:4;:10;;;;:24;;;;;7841:1;7832:6;:10;7818:24;7814:686;;;7878:1;7862:18;;:4;:18;;;7858:315;;7901:16;7919;7939:150;7966:20;:26;7987:4;7966:26;;;;;;;;;;;;;;;8014:9;8045:26;8064:6;8045:18;:26::i;:::-;7939:5;:150::i;:::-;7900:189;;;;;;;;8133:4;8112:46;;;8139:8;8149;8112:46;;;;;;;:::i;:::-;;;;;;;;7882:291;;7858:315;8204:1;8190:16;;:2;:16;;;8186:304;;8227:16;8245;8265:143;8292:20;:24;8313:2;8292:24;;;;;;;;;;;;;;;8338:4;8364:26;8383:6;8364:18;:26::i;:::-;8265:5;:143::i;:::-;8226:182;;;;;;;;8452:2;8431:44;;;8456:8;8466;8431:44;;;;;;;:::i;:::-;;;;;;;;8208:282;;8186:304;7814:686;7717:789;;;:::o;11152:119:31:-;11214:7;11240:4;:17;;:24;;;;11233:31;;11152:119;;;:::o;15296:213:29:-;15352:6;15382:16;15374:24;;:5;:24;15370:103;;;15452:2;15456:5;15421:41;;;;;;;;;;;;:::i;:::-;;;;;;;;15370:103;15496:5;15482:20;;15296:213;;;:::o;538:107:19:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;2002:128:21:-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;3358:267:22:-;3452:13;1390:66;3510:17;;3500:5;3481:46;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3358:267;;;;;:::o;3326:374:27:-;3419:14;3501:4;3495:11;3531:10;3526:3;3519:23;3578:15;3571:4;3566:3;3562:14;3555:39;3630:10;3623:4;3618:3;3614:14;3607:34;3679:4;3674:3;3664:20;3654:30;;3470:224;3326:374;;;;:::o;5203:1551:25:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;11343:138:31:-;11413:20;;:::i;:::-;11452:4;:17;;11470:3;11452:22;;;;;;;;;;:::i;:::-;;;;;;;;;11445:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11343:138;;;;:::o;2356:413:15:-;2450:30;2464:4;2470:2;2474:5;2450:13;:30::i;:::-;2510:1;2494:18;;:4;:18;;;2490:226;;2528:14;2545:13;:11;:13::i;:::-;2528:30;;2572:11;2586:12;:10;:12::i;:::-;2572:26;;2625:3;2616:6;:12;2612:94;;;2679:6;2687:3;2655:36;;;;;;;;;;;;:::i;:::-;;;;;;;;2612:94;2514:202;;2490:226;2725:37;2746:4;2752:2;2756:5;2725:20;:37::i;:::-;2356:413;;;:::o;34795:145:29:-;34842:9;34921:1;34914:9;34907:17;34902:22;;34795:145;;;:::o;3595:153:28:-;3657:7;3740:1;3735;3731;:5;3730:11;;;;:::i;:::-;3725:1;3721;:5;3720:21;;;;:::i;:::-;3713:28;;3595:153;;;;:::o;4174:218:29:-;4231:7;4262:17;4254:25;;:5;:25;4250:105;;;4333:3;4338:5;4302:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4250:105;4379:5;4364:21;;4174:218;;;:::o;9025:273:2:-;9192:16;9210;9245:46;9256:7;:5;:7::i;:::-;9265:25;9268:14;:5;:12;:14::i;:::-;9284:5;9265:2;:25;;:::i;:::-;9245:5;:10;;:46;;;;;:::i;:::-;9238:53;;;;9025:273;;;;;;:::o;2078:378:22:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;1113:145:13:-;1474:19:21;:17;:19::i;:::-;1221:30:13::1;1235:4;1241:2;1245:5;1221:13;:30::i;:::-;1113:145:::0;;;:::o;2113:103:15:-;2166:7;2192:17;2185:24;;;;2113:103;:::o;7232:399:2:-;7351:1;7335:18;;:4;:18;;;7331:107;;7369:58;7375:17;7394:4;7400:26;7419:6;7400:18;:26::i;:::-;7369:5;:58::i;:::-;;;7331:107;7465:1;7451:16;;:2;:16;;;7447:110;;7483:63;7489:17;7508:9;7519:26;7538:6;7519:18;:26::i;:::-;7483:5;:63::i;:::-;;;7447:110;7566:58;7585:15;7595:4;7585:9;:15::i;:::-;7602:13;7612:2;7602:9;:13::i;:::-;7617:6;7566:18;:58::i;:::-;7232:399;;;:::o;8145:210:31:-;8257:16;8275;8310:38;8318:4;:17;;8337:3;8342:5;8310:7;:38::i;:::-;8303:45;;;;8145:210;;;;;;:::o;2528:245:22:-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;6008:1107:9:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;11657:922:31:-;11778:16;11796;11824:11;11838:4;:11;;;;11824:25;;11870:1;11864:3;:7;11860:713;;;11887:26;11916:28;11930:4;11942:1;11936:3;:7;;;;:::i;:::-;11916:13;:28::i;:::-;11887:57;;11958:14;11975:4;:9;;;;;;;;;;;;11958:26;;11998:17;12018:4;:11;;;;;;;;;;;;11998:31;;12113:3;12103:13;;:7;:13;;;12099:89;;;12143:30;;;;;;;;;;;;;;12099:89;12262:3;12251:14;;:7;:14;;;12247:163;;12299:5;12285:4;:11;;;:19;;;;;;;;;;;;;;;;;;12247:163;;;12343:4;12353:41;;;;;;;;12374:3;12353:41;;;;;;12387:5;12353:41;;;;;12343:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12247:163;12431:9;12442:5;12423:25;;;;;;;;;;11860:713;12479:4;12489:41;;;;;;;;12510:3;12489:41;;;;;;12523:5;12489:41;;;;;12479:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12553:1;12556:5;12545:17;;;;;11657:922;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:34:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:::-;5682:6;5731:2;5719:9;5710:7;5706:23;5702:32;5699:119;;;5737:79;;:::i;:::-;5699:119;5857:1;5882:53;5927:7;5918:6;5907:9;5903:22;5882:53;:::i;:::-;5872:63;;5828:117;5623:329;;;;:::o;5958:118::-;6045:24;6063:5;6045:24;:::i;:::-;6040:3;6033:37;5958:118;;:::o;6082:222::-;6175:4;6213:2;6202:9;6198:18;6190:26;;6226:71;6294:1;6283:9;6279:17;6270:6;6226:71;:::i;:::-;6082:222;;;;:::o;6310:125::-;6376:7;6405:24;6423:5;6405:24;:::i;:::-;6394:35;;6310:125;;;:::o;6441:180::-;6543:53;6590:5;6543:53;:::i;:::-;6536:5;6533:64;6523:92;;6611:1;6608;6601:12;6523:92;6441:180;:::o;6627:197::-;6702:5;6740:6;6727:20;6718:29;;6756:62;6812:5;6756:62;:::i;:::-;6627:197;;;;:::o;6830:117::-;6939:1;6936;6929:12;6953:117;7062:1;7059;7052:12;7076:117;7185:1;7182;7175:12;7212:552;7269:8;7279:6;7329:3;7322:4;7314:6;7310:17;7306:27;7296:122;;7337:79;;:::i;:::-;7296:122;7450:6;7437:20;7427:30;;7480:18;7472:6;7469:30;7466:117;;;7502:79;;:::i;:::-;7466:117;7616:4;7608:6;7604:17;7592:29;;7670:3;7662:4;7654:6;7650:17;7640:8;7636:32;7633:41;7630:128;;;7677:79;;:::i;:::-;7630:128;7212:552;;;;;:::o;7770:1021::-;7896:6;7904;7912;7920;7928;7977:3;7965:9;7956:7;7952:23;7948:33;7945:120;;;7984:79;;:::i;:::-;7945:120;8104:1;8129:82;8203:7;8194:6;8183:9;8179:22;8129:82;:::i;:::-;8119:92;;8075:146;8260:2;8286:53;8331:7;8322:6;8311:9;8307:22;8286:53;:::i;:::-;8276:63;;8231:118;8388:2;8414:53;8459:7;8450:6;8439:9;8435:22;8414:53;:::i;:::-;8404:63;;8359:118;8544:2;8533:9;8529:18;8516:32;8575:18;8567:6;8564:30;8561:117;;;8597:79;;:::i;:::-;8561:117;8710:64;8766:7;8757:6;8746:9;8742:22;8710:64;:::i;:::-;8692:82;;;;8487:297;7770:1021;;;;;;;;:::o;8797:93::-;8833:7;8873:10;8866:5;8862:22;8851:33;;8797:93;;;:::o;8896:115::-;8981:23;8998:5;8981:23;:::i;:::-;8976:3;8969:36;8896:115;;:::o;9017:218::-;9108:4;9146:2;9135:9;9131:18;9123:26;;9159:69;9225:1;9214:9;9210:17;9201:6;9159:69;:::i;:::-;9017:218;;;;:::o;9241:149::-;9277:7;9317:66;9310:5;9306:78;9295:89;;9241:149;;;:::o;9396:115::-;9481:23;9498:5;9481:23;:::i;:::-;9476:3;9469:36;9396:115;;:::o;9517:114::-;9584:6;9618:5;9612:12;9602:22;;9517:114;;;:::o;9637:184::-;9736:11;9770:6;9765:3;9758:19;9810:4;9805:3;9801:14;9786:29;;9637:184;;;;:::o;9827:132::-;9894:4;9917:3;9909:11;;9947:4;9942:3;9938:14;9930:22;;9827:132;;;:::o;9965:108::-;10042:24;10060:5;10042:24;:::i;:::-;10037:3;10030:37;9965:108;;:::o;10079:179::-;10148:10;10169:46;10211:3;10203:6;10169:46;:::i;:::-;10247:4;10242:3;10238:14;10224:28;;10079:179;;;;:::o;10264:113::-;10334:4;10366;10361:3;10357:14;10349:22;;10264:113;;;:::o;10413:732::-;10532:3;10561:54;10609:5;10561:54;:::i;:::-;10631:86;10710:6;10705:3;10631:86;:::i;:::-;10624:93;;10741:56;10791:5;10741:56;:::i;:::-;10820:7;10851:1;10836:284;10861:6;10858:1;10855:13;10836:284;;;10937:6;10931:13;10964:63;11023:3;11008:13;10964:63;:::i;:::-;10957:70;;11050:60;11103:6;11050:60;:::i;:::-;11040:70;;10896:224;10883:1;10880;10876:9;10871:14;;10836:284;;;10840:14;11136:3;11129:10;;10537:608;;;10413:732;;;;:::o;11151:1215::-;11500:4;11538:3;11527:9;11523:19;11515:27;;11552:69;11618:1;11607:9;11603:17;11594:6;11552:69;:::i;:::-;11668:9;11662:4;11658:20;11653:2;11642:9;11638:18;11631:48;11696:78;11769:4;11760:6;11696:78;:::i;:::-;11688:86;;11821:9;11815:4;11811:20;11806:2;11795:9;11791:18;11784:48;11849:78;11922:4;11913:6;11849:78;:::i;:::-;11841:86;;11937:72;12005:2;11994:9;11990:18;11981:6;11937:72;:::i;:::-;12019:73;12087:3;12076:9;12072:19;12063:6;12019:73;:::i;:::-;12102;12170:3;12159:9;12155:19;12146:6;12102:73;:::i;:::-;12223:9;12217:4;12213:20;12207:3;12196:9;12192:19;12185:49;12251:108;12354:4;12345:6;12251:108;:::i;:::-;12243:116;;11151:1215;;;;;;;;;;:::o;12372:97::-;12408:7;12448:14;12441:5;12437:26;12426:37;;12372:97;;;:::o;12475:115::-;12560:23;12577:5;12560:23;:::i;:::-;12555:3;12548:36;12475:115;;:::o;12596:218::-;12687:4;12725:2;12714:9;12710:18;12702:26;;12738:69;12804:1;12793:9;12789:17;12780:6;12738:69;:::i;:::-;12596:218;;;;:::o;12820:118::-;12891:22;12907:5;12891:22;:::i;:::-;12884:5;12881:33;12871:61;;12928:1;12925;12918:12;12871:61;12820:118;:::o;12944:135::-;12988:5;13026:6;13013:20;13004:29;;13042:31;13067:5;13042:31;:::i;:::-;12944:135;;;;:::o;13085:122::-;13158:24;13176:5;13158:24;:::i;:::-;13151:5;13148:35;13138:63;;13197:1;13194;13187:12;13138:63;13085:122;:::o;13213:139::-;13259:5;13297:6;13284:20;13275:29;;13313:33;13340:5;13313:33;:::i;:::-;13213:139;;;;:::o;13358:1053::-;13460:6;13468;13476;13484;13492;13500;13549:3;13537:9;13528:7;13524:23;13520:33;13517:120;;;13556:79;;:::i;:::-;13517:120;13676:1;13701:53;13746:7;13737:6;13726:9;13722:22;13701:53;:::i;:::-;13691:63;;13647:117;13803:2;13829:53;13874:7;13865:6;13854:9;13850:22;13829:53;:::i;:::-;13819:63;;13774:118;13931:2;13957:53;14002:7;13993:6;13982:9;13978:22;13957:53;:::i;:::-;13947:63;;13902:118;14059:2;14085:51;14128:7;14119:6;14108:9;14104:22;14085:51;:::i;:::-;14075:61;;14030:116;14185:3;14212:53;14257:7;14248:6;14237:9;14233:22;14212:53;:::i;:::-;14202:63;;14156:119;14314:3;14341:53;14386:7;14377:6;14366:9;14362:22;14341:53;:::i;:::-;14331:63;;14285:119;13358:1053;;;;;;;;:::o;14417:1199::-;14528:6;14536;14544;14552;14560;14568;14576;14625:3;14613:9;14604:7;14600:23;14596:33;14593:120;;;14632:79;;:::i;:::-;14593:120;14752:1;14777:53;14822:7;14813:6;14802:9;14798:22;14777:53;:::i;:::-;14767:63;;14723:117;14879:2;14905:53;14950:7;14941:6;14930:9;14926:22;14905:53;:::i;:::-;14895:63;;14850:118;15007:2;15033:53;15078:7;15069:6;15058:9;15054:22;15033:53;:::i;:::-;15023:63;;14978:118;15135:2;15161:53;15206:7;15197:6;15186:9;15182:22;15161:53;:::i;:::-;15151:63;;15106:118;15263:3;15290:51;15333:7;15324:6;15313:9;15309:22;15290:51;:::i;:::-;15280:61;;15234:117;15390:3;15417:53;15462:7;15453:6;15442:9;15438:22;15417:53;:::i;:::-;15407:63;;15361:119;15519:3;15546:53;15591:7;15582:6;15571:9;15567:22;15546:53;:::i;:::-;15536:63;;15490:119;14417:1199;;;;;;;;;;:::o;15622:474::-;15690:6;15698;15747:2;15735:9;15726:7;15722:23;15718:32;15715:119;;;15753:79;;:::i;:::-;15715:119;15873:1;15898:53;15943:7;15934:6;15923:9;15919:22;15898:53;:::i;:::-;15888:63;;15844:117;16000:2;16026:53;16071:7;16062:6;16051:9;16047:22;16026:53;:::i;:::-;16016:63;;15971:118;15622:474;;;;;:::o;16102:120::-;16174:23;16191:5;16174:23;:::i;:::-;16167:5;16164:34;16154:62;;16212:1;16209;16202:12;16154:62;16102:120;:::o;16228:137::-;16273:5;16311:6;16298:20;16289:29;;16327:32;16353:5;16327:32;:::i;:::-;16228:137;;;;:::o;16371:472::-;16438:6;16446;16495:2;16483:9;16474:7;16470:23;16466:32;16463:119;;;16501:79;;:::i;:::-;16463:119;16621:1;16646:53;16691:7;16682:6;16671:9;16667:22;16646:53;:::i;:::-;16636:63;;16592:117;16748:2;16774:52;16818:7;16809:6;16798:9;16794:22;16774:52;:::i;:::-;16764:62;;16719:117;16371:472;;;;;:::o;16849:105::-;16924:23;16941:5;16924:23;:::i;:::-;16919:3;16912:36;16849:105;;:::o;16960:138::-;16997:7;17037:54;17030:5;17026:66;17015:77;;16960:138;;;:::o;17104:108::-;17181:24;17199:5;17181:24;:::i;:::-;17176:3;17169:37;17104:108;;:::o;17294:519::-;17453:4;17448:3;17444:14;17540:4;17533:5;17529:16;17523:23;17559:61;17614:4;17609:3;17605:14;17591:12;17559:61;:::i;:::-;17468:162;17714:4;17707:5;17703:16;17697:23;17733:63;17790:4;17785:3;17781:14;17767:12;17733:63;:::i;:::-;17640:166;17422:391;17294:519;;:::o;17819:346::-;17974:4;18012:2;18001:9;17997:18;17989:26;;18025:133;18155:1;18144:9;18140:17;18131:6;18025:133;:::i;:::-;17819:346;;;;:::o;18171:180::-;18219:77;18216:1;18209:88;18316:4;18313:1;18306:15;18340:4;18337:1;18330:15;18357:320;18401:6;18438:1;18432:4;18428:12;18418:22;;18485:1;18479:4;18475:12;18506:18;18496:81;;18562:4;18554:6;18550:17;18540:27;;18496:81;18624:2;18616:6;18613:14;18593:18;18590:38;18587:84;;18643:18;;:::i;:::-;18587:84;18408:269;18357:320;;;:::o;18683:328::-;18802:4;18840:2;18829:9;18825:18;18817:26;;18853:71;18921:1;18910:9;18906:17;18897:6;18853:71;:::i;:::-;18934:70;19000:2;18989:9;18985:18;18976:6;18934:70;:::i;:::-;18683:328;;;;;:::o;19017:168::-;19100:11;19134:6;19129:3;19122:19;19174:4;19169:3;19165:14;19150:29;;19017:168;;;;:::o;19191:146::-;19288:6;19283:3;19278;19265:30;19329:1;19320:6;19315:3;19311:16;19304:27;19191:146;;;:::o;19365:314::-;19461:3;19482:70;19545:6;19540:3;19482:70;:::i;:::-;19475:77;;19562:56;19611:6;19606:3;19599:5;19562:56;:::i;:::-;19643:29;19665:6;19643:29;:::i;:::-;19638:3;19634:39;19627:46;;19365:314;;;;;:::o;19685:771::-;19918:4;19956:3;19945:9;19941:19;19933:27;;19970:71;20038:1;20027:9;20023:17;20014:6;19970:71;:::i;:::-;20051:72;20119:2;20108:9;20104:18;20095:6;20051:72;:::i;:::-;20133;20201:2;20190:9;20186:18;20177:6;20133:72;:::i;:::-;20215;20283:2;20272:9;20268:18;20259:6;20215:72;:::i;:::-;20335:9;20329:4;20325:20;20319:3;20308:9;20304:19;20297:49;20363:86;20444:4;20435:6;20427;20363:86;:::i;:::-;20355:94;;19685:771;;;;;;;;;:::o;20462:143::-;20519:5;20550:6;20544:13;20535:22;;20566:33;20593:5;20566:33;:::i;:::-;20462:143;;;;:::o;20611:351::-;20681:6;20730:2;20718:9;20709:7;20705:23;20701:32;20698:119;;;20736:79;;:::i;:::-;20698:119;20856:1;20881:64;20937:7;20928:6;20917:9;20913:22;20881:64;:::i;:::-;20871:74;;20827:128;20611:351;;;;:::o;20968:180::-;21016:77;21013:1;21006:88;21113:4;21110:1;21103:15;21137:4;21134:1;21127:15;21154:191;21194:3;21213:20;21231:1;21213:20;:::i;:::-;21208:25;;21247:20;21265:1;21247:20;:::i;:::-;21242:25;;21290:1;21287;21283:9;21276:16;;21311:3;21308:1;21305:10;21302:36;;;21318:18;;:::i;:::-;21302:36;21154:191;;;;:::o;21351:194::-;21391:4;21411:20;21429:1;21411:20;:::i;:::-;21406:25;;21445:20;21463:1;21445:20;:::i;:::-;21440:25;;21489:1;21486;21482:9;21474:17;;21513:1;21507:4;21504:11;21501:37;;;21518:18;;:::i;:::-;21501:37;21351:194;;;;:::o;21551:180::-;21599:77;21596:1;21589:88;21696:4;21693:1;21686:15;21720:4;21717:1;21710:15;21737:553;21914:4;21952:3;21941:9;21937:19;21929:27;;21966:71;22034:1;22023:9;22019:17;22010:6;21966:71;:::i;:::-;22047:72;22115:2;22104:9;22100:18;22091:6;22047:72;:::i;:::-;22129;22197:2;22186:9;22182:18;22173:6;22129:72;:::i;:::-;22211;22279:2;22268:9;22264:18;22255:6;22211:72;:::i;:::-;21737:553;;;;;;;:::o;22296:775::-;22529:4;22567:3;22556:9;22552:19;22544:27;;22581:71;22649:1;22638:9;22634:17;22625:6;22581:71;:::i;:::-;22662:72;22730:2;22719:9;22715:18;22706:6;22662:72;:::i;:::-;22744;22812:2;22801:9;22797:18;22788:6;22744:72;:::i;:::-;22826;22894:2;22883:9;22879:18;22870:6;22826:72;:::i;:::-;22908:73;22976:3;22965:9;22961:19;22952:6;22908:73;:::i;:::-;22991;23059:3;23048:9;23044:19;23035:6;22991:73;:::i;:::-;22296:775;;;;;;;;;:::o;23077:332::-;23198:4;23236:2;23225:9;23221:18;23213:26;;23249:71;23317:1;23306:9;23302:17;23293:6;23249:71;:::i;:::-;23330:72;23398:2;23387:9;23383:18;23374:6;23330:72;:::i;:::-;23077:332;;;;;:::o;23415:244::-;23455:3;23474:20;23492:1;23474:20;:::i;:::-;23469:25;;23508:20;23526:1;23508:20;:::i;:::-;23503:25;;23551:1;23548;23544:9;23537:16;;23574:54;23569:3;23566:63;23563:89;;;23632:18;;:::i;:::-;23563:89;23415:244;;;;:::o;23665:247::-;23705:4;23725:20;23743:1;23725:20;:::i;:::-;23720:25;;23759:20;23777:1;23759:20;:::i;:::-;23754:25;;23803:1;23800;23796:9;23788:17;;23827:54;23821:4;23818:64;23815:90;;;23885:18;;:::i;:::-;23815:90;23665:247;;;;:::o;23918:442::-;24067:4;24105:2;24094:9;24090:18;24082:26;;24118:71;24186:1;24175:9;24171:17;24162:6;24118:71;:::i;:::-;24199:72;24267:2;24256:9;24252:18;24243:6;24199:72;:::i;:::-;24281;24349:2;24338:9;24334:18;24325:6;24281:72;:::i;:::-;23918:442;;;;;;:::o;24366:86::-;24412:7;24441:5;24430:16;;24366:86;;;:::o;24458:60::-;24486:3;24507:5;24500:12;;24458:60;;;:::o;24524:156::-;24581:9;24614:60;24630:43;24639:33;24666:5;24639:33;:::i;:::-;24630:43;:::i;:::-;24614:60;:::i;:::-;24601:73;;24524:156;;;:::o;24686:145::-;24780:44;24818:5;24780:44;:::i;:::-;24775:3;24768:57;24686:145;;:::o;24837:346::-;24965:4;25003:2;24992:9;24988:18;24980:26;;25016:78;25091:1;25080:9;25076:17;25067:6;25016:78;:::i;:::-;25104:72;25172:2;25161:9;25157:18;25148:6;25104:72;:::i;:::-;24837:346;;;;;:::o;25189:332::-;25310:4;25348:2;25337:9;25333:18;25325:26;;25361:71;25429:1;25418:9;25414:17;25405:6;25361:71;:::i;:::-;25442:72;25510:2;25499:9;25495:18;25486:6;25442:72;:::i;:::-;25189:332;;;;;:::o;25527:664::-;25732:4;25770:3;25759:9;25755:19;25747:27;;25784:71;25852:1;25841:9;25837:17;25828:6;25784:71;:::i;:::-;25865:72;25933:2;25922:9;25918:18;25909:6;25865:72;:::i;:::-;25947;26015:2;26004:9;26000:18;25991:6;25947:72;:::i;:::-;26029;26097:2;26086:9;26082:18;26073:6;26029:72;:::i;:::-;26111:73;26179:3;26168:9;26164:19;26155:6;26111:73;:::i;:::-;25527:664;;;;;;;;:::o;26197:180::-;26245:77;26242:1;26235:88;26342:4;26339:1;26332:15;26366:4;26363:1;26356:15;26383:332;26504:4;26542:2;26531:9;26527:18;26519:26;;26555:71;26623:1;26612:9;26608:17;26599:6;26555:71;:::i;:::-;26636:72;26704:2;26693:9;26689:18;26680:6;26636:72;:::i;:::-;26383:332;;;;;:::o;26721:86::-;26767:7;26796:5;26785:16;;26721:86;;;:::o;26813:156::-;26870:9;26903:60;26919:43;26928:33;26955:5;26928:33;:::i;:::-;26919:43;:::i;:::-;26903:60;:::i;:::-;26890:73;;26813:156;;;:::o;26975:145::-;27069:44;27107:5;27069:44;:::i;:::-;27064:3;27057:57;26975:145;;:::o;27126:346::-;27254:4;27292:2;27281:9;27277:18;27269:26;;27305:78;27380:1;27369:9;27365:17;27356:6;27305:78;:::i;:::-;27393:72;27461:2;27450:9;27446:18;27437:6;27393:72;:::i;:::-;27126:346;;;;;:::o;27478:545::-;27651:4;27689:3;27678:9;27674:19;27666:27;;27703:71;27771:1;27760:9;27756:17;27747:6;27703:71;:::i;:::-;27784:68;27848:2;27837:9;27833:18;27824:6;27784:68;:::i;:::-;27862:72;27930:2;27919:9;27915:18;27906:6;27862:72;:::i;:::-;27944;28012:2;28001:9;27997:18;27988:6;27944:72;:::i;:::-;27478:545;;;;;;;:::o;28029:180::-;28077:77;28074:1;28067:88;28174:4;28171:1;28164:15;28198:4;28195:1;28188:15;28215:180;28263:77;28260:1;28253:88;28360:4;28357:1;28350:15;28384:4;28381:1;28374:15;28401:185;28441:1;28458:20;28476:1;28458:20;:::i;:::-;28453:25;;28492:20;28510:1;28492:20;:::i;:::-;28487:25;;28531:1;28521:35;;28536:18;;:::i;:::-;28521:35;28578:1;28575;28571:9;28566:14;;28401:185;;;;:::o;28592:87::-;28639:7;28668:5;28657:16;;28592:87;;;:::o;28685:158::-;28743:9;28776:61;28792:44;28801:34;28829:5;28801:34;:::i;:::-;28792:44;:::i;:::-;28776:61;:::i;:::-;28763:74;;28685:158;;;:::o;28849:147::-;28944:45;28983:5;28944:45;:::i;:::-;28939:3;28932:58;28849:147;;:::o;29002:348::-;29131:4;29169:2;29158:9;29154:18;29146:26;;29182:79;29258:1;29247:9;29243:17;29234:6;29182:79;:::i;:::-;29271:72;29339:2;29328:9;29324:18;29315:6;29271:72;:::i;:::-;29002:348;;;;;:::o"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","getBalance(address)":"f8b2cb4f","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","maxFlashLoan(address)":"613255ab","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalMintedSupply()":"601e2603","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialMintAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLoan\",\"type\":\"uint256\"}],\"name\":\"ERC3156ExceededMaxLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC3156InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ERC3156UnsupportedToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMintedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"jos89.24@gmail.com\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC3156ExceededMaxLoan(uint256)\":[{\"details\":\"The requested loan exceeds the max loan value for `token`.\"}],\"ERC3156InvalidReceiver(address)\":[{\"details\":\"The receiver of a flashloan is not a valid {IERC3156FlashBorrower-onFlashLoan} implementer.\"}],\"ERC3156UnsupportedToken(address)\":[{\"details\":\"The loan token is not valid.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"token\":\"The token to be flash loaned.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned. NOTE: This function does not consider any form of supply cap, so in case it's used in a token with a cap like {ERC20Capped}, make sure to override this function to integrate the cap instead of `type(uint256).max`.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/trinostoken.sol\":\"TrinosTOKEN\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x9128a324d265044430e5fa4a6a2853e92d6a62a2a5a69c2fc623f5b7b8cf3f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1122c2c8c19d717e45a9c00ccedd9fcd3b61eab6a291469a3d6200671d3e6f25\",\"dweb:/ipfs/QmYEjVC6ttBK1YSECdJmH69LtD2mahbVW27JLv6TUdWKiU\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x0b1459615b9b47c2a4eec8e72f23ccc601f1d711f679a1c06b3390459021a341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aaf6209fb90f02ebd1c9603568f5e6da5fa2f896820ba66b5041eeed993dc4ce\",\"dweb:/ipfs/QmYsSH2PSGbTXMVXXxhh9AXzfHPSz2j42REvds6xjU7WmR\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x5d19ea24c555cf6a5dbafea9fac57887cc3e72154f3ee8e0a2bf67971811c14b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3af1364c971d94bccf3efcc509b2c5c03fe1c69ea9945ba29a96998bfd6c593e\",\"dweb:/ipfs/Qmczq52prNGX5tHuk8aENZsuYgxTeA6YVMHV7yMTKeFjbr\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":{\"keccak256\":\"0x4d43ed4b9ff9e4c671274976d59a58dbcc7b69bd7ac11b1710f5b7607cf15b74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b47b42998f675cb6a51f2e74ef5906a6fa63ec6718f3fd56ee035d6f77143f9\",\"dweb:/ipfs/QmREnAXqPJBvAwfWfDzaFhNfSRWF4Jdy9ZrpHLw1KdQweY\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x62dc9346044aabf22d78541bd495aa6ca05a7f5100aed26196ba35d40b59fcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5221df4501c74cd4493fee1a0f0788e02c4dc78c3c601e9f557f557c5a53ea92\",\"dweb:/ipfs/QmZpzyYY9dKLrgvYhXSHT93jwqb1UGvtGNMQk5dpECY5pa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]},\"contracts/trinostoken.sol\":{\"keccak256\":\"0xf9a2e3628e87d4d11cc1a386bf58e31db57a439927a077312b2231f5f5635ac2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a63ed179ec989b7468b57296c05133d524fd36af8ba730a8dd3e573e1b937bd5\",\"dweb:/ipfs/QmU3yWGFxo7yiuWZJM73cxXTrQLLVDacASLDbe4GapHbvi\"]}},\"version\":1}"}}}}}